var searchIndex = JSON.parse('{\
"identity":{"doc":"IOTA IdentityIOTA Identity is a Rust implementation of…","i":[[0,"core","identity","Core Traits and Types",null,null],[4,"Context","identity::core","A reference to a JSON-LD context",null,null],[13,"Url","","A JSON-LD context expressed as a Url.",0,null],[13,"Obj","","A JSON-LD context expressed as a JSON object.",0,null],[6,"Object","","An alias for an ordered map of key-[value][`Value`] pairs.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",1,null],[13,"Bool","","Represents a JSON boolean.",1,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",1,null],[13,"String","","Represents a JSON string.",1,null],[13,"Array","","Represents a JSON array.",1,null],[13,"Object","","Represents a JSON object.",1,null],[4,"OneOrMany","","A generic container that stores one or many values of a…",null,null],[13,"One","","A single instance of `T`.",2,null],[13,"Many","","Multiple instances of `T`.",2,null],[3,"Timestamp","","A parsed Timestamp.",null,null],[12,"0","","",3,null],[3,"Url","","A parsed URL.",null,null],[12,"0","","",4,null],[8,"AsJson","","A convenience-trait for types that can be converted to and…",null,null],[11,"from_json","","Deserialize `Self` from a string of JSON text.",5,[[],[["error",4],["result",4]]]],[11,"from_json_slice","","Deserialize `Self` from bytes of JSON text.",5,[[],[["error",4],["result",4]]]],[11,"from_json_value","","Deserialize `Self` from a [`serde_json::Value`].",5,[[["value",4]],[["error",4],["result",4]]]],[11,"to_json","","Serialize `self` as a string of JSON.",5,[[],[["string",3],["error",4],["result",4]]]],[11,"to_json_vec","","Serialize `self` as a JSON byte vector.",5,[[],[["error",4],["result",4],["vec",3]]]],[11,"to_json_value","","Serialize `self` as a [`serde_json::Value`].",5,[[],[["error",4],["result",4],["value",4]]]],[11,"to_json_pretty","","Serialize `self` as a pretty-printed string of JSON.",5,[[],[["string",3],["error",4],["result",4]]]],[11,"to_jcs","","Serialize `self` as a JSON byte vector, normalized using…",5,[[],[["error",4],["result",4],["vec",3]]]],[8,"FromJson","","A convenience-trait for types that can be deserialized…",null,null],[11,"from_json","","Deserialize `Self` from a string of JSON text.",6,[[],[["error",4],["result",4]]]],[11,"from_json_slice","","Deserialize `Self` from bytes of JSON text.",6,[[],[["error",4],["result",4]]]],[11,"from_json_value","","Deserialize `Self` from a [`serde_json::Value`].",6,[[["value",4]],[["error",4],["result",4]]]],[8,"ToJson","","A convenience-trait for types that can be serialized as…",null,null],[11,"to_json","","Serialize `self` as a string of JSON.",7,[[],[["string",3],["error",4],["result",4]]]],[11,"to_json_vec","","Serialize `self` as a JSON byte vector.",7,[[],[["error",4],["result",4],["vec",3]]]],[11,"to_json_value","","Serialize `self` as a [`serde_json::Value`].",7,[[],[["error",4],["result",4],["value",4]]]],[11,"to_json_pretty","","Serialize `self` as a pretty-printed string of JSON.",7,[[],[["string",3],["error",4],["result",4]]]],[11,"to_jcs","","Serialize `self` as a JSON byte vector, normalized using…",7,[[],[["error",4],["result",4],["vec",3]]]],[8,"SerdeInto","","An escape-hatch for converting between types that…",null,null],[11,"serde_into","","Converts `self` to `T` by converting to/from JSON.",8,[[],[["result",4],["error",4]]]],[6,"Result","","Alias for a `Result` with the error type [`Error`].",null,null],[4,"Error","","This type represents all possible errors that can occur in…",null,null],[13,"EncodeJSON","","Caused by a failure to encode Rust types as JSON.",9,null],[13,"DecodeJSON","","Caused by a failure to decode Rust types from JSON.",9,null],[13,"DecodeBase16","","Caused by a failure to decode base16-encoded data.",9,null],[13,"DecodeBase58","","Caused by a failure to decode base58-encoded data.",9,null],[13,"InvalidDiff","","Caused by attempting to perform an invalid `Diff` operation.",9,null],[13,"InvalidUrl","","Caused by attempting to parse an invalid `Url`.",9,null],[13,"InvalidTimestamp","","Caused by attempting to parse an invalid `Timestamp`.",9,null],[13,"InvalidProofFormat","","Caused by attempting to parse an invalid DID proof.",9,null],[13,"InvalidKeyFormat","","Caused by attempting to parse an invalid cryptographic key.",9,null],[13,"MissingSignature","","Caused by a failed attempt at retrieving a digital…",9,null],[5,"generate_ed25519","","Generates a new ed25519 [`KeyPair`].",null,[[],[["error",4],["keypair",3],["result",4]]]],[5,"encode_b58","","Encodes the given `data` as base58-btc.",null,[[],["string",3]]],[5,"decode_b58","","Decodes the given `data` as base58-btc.",null,[[],[["error",4],["result",4],["vec",3]]]],[5,"jcs_sha256","","Returns the given `data` serialized using JSON…",null,[[],[["result",4],["genericarray",3],["error",4]]]],[5,"decode_b16","","Decodes the given `data` as base16 (hex).",null,[[],[["error",4],["result",4],["vec",3]]]],[5,"encode_b16","","Encodes the given `data` as base16 (hex).",null,[[],["string",3]]],[4,"Error","identity::core::diff","",null,null],[13,"DiffError","","",10,null],[13,"MergeError","","",10,null],[13,"ConversionError","","",10,null],[6,"Result","","",null,null],[3,"DiffHashMap","","A `DiffHashMap` type which represents a Diffed `HashMap`.…",null,null],[12,"0","","",11,null],[3,"DiffHashSet","","",null,null],[12,"0","","",12,null],[6,"DiffObject","","",null,null],[4,"DiffOption","","A `DiffOption<T>` type which represents a Diffed…",null,null],[13,"Some","","",13,null],[13,"None","","",13,null],[3,"DiffString","","The Diff Type for a `String` type.",null,null],[12,"0","","",14,null],[8,"Diff","","The primary `Diff` Trait type.",null,null],[16,"Type","","The Corresponding Diff Type for the implemented Type.",15,null],[10,"diff","","Finds the difference between two types; `self` and `other`…",15,[[],[["error",4],["result",4]]]],[10,"merge","","Merges a `Self::Type` with `Self`",15,[[],[["error",4],["result",4]]]],[10,"from_diff","","Converts a `diff` of type `Self::Type` to a `Self`.",15,[[],[["error",4],["result",4]]]],[10,"into_diff","","Converts a type of `Self` to a `diff` of `Self::Type`.",15,[[],[["error",4],["result",4]]]],[24,"Diff","","Entry point for the `Diff` derive proc macro. `Diff`…",null,null],[3,"DiffVec","","The Diff Type for `Vec`.",null,null],[12,"0","","",16,null],[14,"json","identity::core","Construct a `serde_json::Value` from a JSON literal.",null,null],[0,"crypto","identity","Cryptographic Utilities",null,null],[0,"merkle_tree","identity::crypto","Types and traits for Merkle tree operations.",null,null],[8,"Digest","identity::crypto::merkle_tree","The `Digest` trait specifies an interface common for…",null,null],[16,"OutputSize","","Output size for `Digest`",17,null],[10,"new","","Create new hasher instance",17,[[]]],[10,"update","","Digest data, updating the internal state.",17,[[]]],[10,"chain","","Digest input data in a chained manner.",17,[[]]],[10,"finalize","","Retrieve result and consume hasher instance.",17,[[],["genericarray",3]]],[10,"finalize_reset","","Retrieve result and reset hasher instance.",17,[[],["genericarray",3]]],[10,"reset","","Reset hasher instance to its initial state.",17,[[]]],[10,"output_size","","Get output size of the hasher",17,[[]]],[10,"digest","","Convenience function to compute hash of the `data`. It…",17,[[],["genericarray",3]]],[8,"DigestExt","","An extension of the [`Digest`] trait for Merkle tree…",null,null],[11,"hash_leaf","","Computes the [`struct@Hash`] of a Merkle tree leaf node.",18,[[],["hash",3]]],[11,"hash_branch","","Computes the parent [`struct@Hash`] of two Merkle tree…",18,[[["hash",3]],["hash",3]]],[3,"Hash","","The output of a hash function.",null,null],[12,"0","","",19,null],[3,"MTree","","A Merkle tree designed for static data.",null,null],[12,"nodes","","",20,null],[12,"marker","","",20,null],[4,"Node","","A tagged [`struct@Hash`].",null,null],[13,"L","","A node tagged with `L`.",21,null],[13,"R","","A node tagged with `R`.",21,null],[3,"Proof","","An inclusion proof that allows proving the existence of…",null,null],[12,"nodes","","",22,null],[3,"KeyPair","identity::crypto","A convenience for storing a pair of cryptographic keys",null,null],[12,"public","","",23,null],[12,"secret","","",23,null],[6,"PublicKey","","A cryptographic key with `Public` components.",null,null],[6,"SecretKey","","A cryptographic key with `Secret` components.",null,null],[3,"JcsEd25519Signature2020","","An implementation of the JCS Ed25519 Signature 2020…",null,null],[8,"SetSignature","","A trait for types that can store a digital…",null,null],[10,"set_signature","","Sets the [`Signature`] object of `self`.",24,[[["signature",3]]]],[8,"SigName","","A trait for signature suites identified by a particular…",null,null],[10,"name","","Returns the name identifying this signature suite.",25,[[],["string",3]]],[8,"SigSign","","A trait for general-purpose signature creation",null,null],[10,"sign","","Signs the given `data` with `secret` and returns a digital…",26,[[],[["error",4],["signaturedata",4],["result",4]]]],[8,"SigVerify","","A trait for general-purpose signature verification",null,null],[10,"verify","","Verifies the authenticity of `data` using `signature` and…",27,[[["signaturedata",4]],[["error",4],["result",4]]]],[3,"Signature","","A DID Document digital signature.",null,null],[12,"type_","","",28,null],[12,"data","","",28,null],[12,"options","","",28,null],[4,"SignatureData","","A DID Document signature with a dynamic JSON field name.",null,null],[13,"None","","An empty signature value.",29,null],[13,"Jws","","A signature value with the property name `jws`.",29,null],[13,"Proof","","A signature value with the property name `proofValue`.",29,null],[13,"Signature","","A signature value with the property name `signatureValue`.",29,null],[3,"SignatureOptions","","Customizable properties of a DID Document signature.",null,null],[12,"verification_method","","The unique identifier of the DID method used to create…",30,null],[12,"proof_purpose","","The intended purpose of the signature.",30,null],[12,"created","","A timestamp of when the signature was created.",30,null],[12,"nonce","","The signature `nonce` property.",30,null],[12,"domain","","The signature `domain` property.",30,null],[3,"SignatureValue","","A [`SignatureData`] wrapper with a visiblity toggle.",null,null],[12,"data","","",31,null],[12,"hide","","",31,null],[8,"TrySignature","","A trait for types that can provide a reference to a…",null,null],[10,"signature","","Returns a reference to the [`Signature`] object, if any.",32,[[],[["option",4],["signature",3]]]],[11,"try_signature","","Returns a reference to the [`Signature`] object.",32,[[],[["signature",3],["error",4],["result",4]]]],[8,"TrySignatureMut","","A trait for types that can provide a mutable reference to…",null,null],[10,"signature_mut","","Returns a mutable reference to the [`Signature`] object.",33,[[],[["option",4],["signature",3]]]],[11,"try_signature_mut","","Returns a mutable reference to the [`Signature`] object.",33,[[],[["error",4],["result",4],["signature",3]]]],[0,"credential","identity","Verifiable Credentials",null,null],[3,"CredentialBuilder","identity::credential","A `CredentialBuilder` is used to create a customized…",null,null],[12,"context","","",34,null],[12,"id","","",34,null],[12,"types","","",34,null],[12,"subject","","",34,null],[12,"issuer","","",34,null],[12,"issuance_date","","",34,null],[12,"expiration_date","","",34,null],[12,"status","","",34,null],[12,"schema","","",34,null],[12,"refresh","","",34,null],[12,"policy","","",34,null],[12,"evidence","","",34,null],[12,"non_transferable","","",34,null],[12,"properties","","",34,null],[3,"Credential","","A `Credential` represents a set of claims describing an…",null,null],[12,"context","","The JSON-LD context(s) applicable to the `Credential`.",35,null],[12,"id","","A unique `URI` referencing the subject of the `Credential`.",35,null],[12,"types","","One or more URIs defining the type of the `Credential`.",35,null],[12,"credential_subject","","One or more `Object`s representing the `Credential`…",35,null],[12,"issuer","","A reference to the issuer of the `Credential`.",35,null],[12,"issuance_date","","A timestamp of when the `Credential` becomes valid.",35,null],[12,"expiration_date","","A timestamp of when the `Credential` should no longer be…",35,null],[12,"credential_status","","Information used to determine the current status of the…",35,null],[12,"credential_schema","","Information used to assist in the enforcement of a…",35,null],[12,"refresh_service","","Service(s) used to refresh an expired `Credential`.",35,null],[12,"terms_of_use","","Terms-of-use specified by the `Credential` issuer.",35,null],[12,"evidence","","Human-readable evidence used to support the claims within…",35,null],[12,"non_transferable","","Indicates that the `Credential` must only be contained…",35,null],[12,"properties","","Miscellaneous properties.",35,null],[3,"Evidence","","Information used to increase confidence in the claims of a…",null,null],[12,"id","","A Url that allows retrieval of information about the…",36,null],[12,"types","","The type(s) of the credential evidence.",36,null],[12,"properties","","Additional properties of the credential evidence.",36,null],[4,"Issuer","","An identifier representing the issuer of a `Credential`.",null,null],[13,"Url","","A credential issuer expressed as a Url.",37,null],[13,"Obj","","A credential issuer expressed as a JSON object.",37,null],[3,"Policy","","Information used to express obligations, prohibitions, and…",null,null],[12,"id","","The instance id of the credential terms-of-use.",38,null],[12,"types","","The type(s) of the credential terms-of-use.",38,null],[12,"properties","","Additional properties of the credential terms-of-use.",38,null],[3,"Refresh","","Information used to refresh or assert the status of a…",null,null],[12,"id","","The Url of the credential refresh service.",39,null],[12,"types","","The type(s) of the credential refresh service.",39,null],[12,"properties","","Additional properties of the credential refresh service.",39,null],[3,"Schema","","Information used to validate the structure of a…",null,null],[12,"id","","A Url identifying the credential schema file.",40,null],[12,"types","","The type(s) of the credential schema.",40,null],[12,"properties","","Additional properties of the credential schema.",40,null],[3,"Status","","Information used to determine the current status of a…",null,null],[12,"id","","A Url identifying the credential status.",41,null],[12,"types","","The type(s) of the credential status.",41,null],[12,"properties","","Additional properties of the credential status.",41,null],[3,"Subject","","An entity who is the target of a set of claims.",null,null],[12,"id","","A Url identifying the credential subject.",42,null],[12,"properties","","Additional properties of the credential subject.",42,null],[3,"VerifiableCredential","","A `VerifiableCredential` represents a `Credential` with an…",null,null],[12,"credential","","",43,null],[12,"proof","","",43,null],[6,"Result","","Alias for a `Result` with the error type [`Error`].",null,null],[4,"Error","","This type represents all possible errors that can occur in…",null,null],[13,"DIDError","","Caused by errors from the `identity_did` crate.",44,null],[13,"MissingBaseContext","","Caused when validating a Credential without a valid base…",44,null],[13,"MissingBaseType","","Caused when validating a Credential without a valid base…",44,null],[13,"MissingIssuer","","Caused when validating a Credential without an issuer.",44,null],[13,"MissingSubject","","Caused when validating a Credential without a subject.",44,null],[13,"InvalidSubject","","Caused when validating a Credential with a malformed…",44,null],[3,"PresentationBuilder","","A `PresentationBuilder` is used to create a customized…",null,null],[12,"context","","",45,null],[12,"id","","",45,null],[12,"types","","",45,null],[12,"credentials","","",45,null],[12,"holder","","",45,null],[12,"refresh","","",45,null],[12,"policy","","",45,null],[12,"properties","","",45,null],[3,"Presentation","","A `Presentation` represents a bundle of one or more…",null,null],[12,"context","","The JSON-LD context(s) applicable to the `Presentation`.",46,null],[12,"id","","A unique `URI` referencing the subject of the…",46,null],[12,"types","","One or more URIs defining the type of the `Presentation`.",46,null],[12,"verifiable_credential","","Credential(s) expressing the claims of the `Presentation`.",46,null],[12,"holder","","The entity that generated the presentation.",46,null],[12,"refresh_service","","Service(s) used to refresh an expired `Presentation`.",46,null],[12,"terms_of_use","","Terms-of-use specified by the `Presentation` holder.",46,null],[12,"properties","","Miscellaneous properties.",46,null],[3,"VerifiablePresentation","","A `VerifiablePresentation` represents a `Presentation`…",null,null],[12,"presentation","","",47,null],[12,"proof","","",47,null],[0,"did","identity","Decentralized Identifiers",null,null],[3,"DocumentBuilder","identity::did","A `DocumentBuilder` is used to generate a customized…",null,null],[12,"id","","",48,null],[12,"controller","","",48,null],[12,"also_known_as","","",48,null],[12,"verification_method","","",48,null],[12,"authentication","","",48,null],[12,"assertion_method","","",48,null],[12,"key_agreement","","",48,null],[12,"capability_delegation","","",48,null],[12,"capability_invocation","","",48,null],[12,"service","","",48,null],[12,"properties","","",48,null],[3,"Document","","A DID Document",null,null],[12,"id","","",49,null],[12,"controller","","",49,null],[12,"also_known_as","","",49,null],[12,"verification_method","","",49,null],[12,"authentication","","",49,null],[12,"assertion_method","","",49,null],[12,"key_agreement","","",49,null],[12,"capability_delegation","","",49,null],[12,"capability_invocation","","",49,null],[12,"service","","",49,null],[12,"properties","","",49,null],[6,"Result","","Alias for a `Result` with the error type [`Error`].",null,null],[4,"Error","","This type represents all possible errors that can occur in…",null,null],[13,"CoreError","","Caused by errors from the `identity_core` crate.",50,null],[13,"DIDError","","Caused by errors from the `did_url` crate.",50,null],[13,"OrderedSetDuplicate","","",50,null],[13,"QueryMethodNotFound","","",50,null],[13,"InvalidDocumentId","","",50,null],[13,"InvalidServiceId","","",50,null],[13,"InvalidServiceType","","",50,null],[13,"InvalidServiceEndpoint","","",50,null],[13,"InvalidMethodId","","",50,null],[13,"InvalidMethodIdFragment","","",50,null],[13,"InvalidMethodController","","",50,null],[13,"InvalidMethodType","","",50,null],[13,"InvalidMethodData","","",50,null],[13,"UnknownMethodScope","","",50,null],[13,"UnknownMethodType","","",50,null],[13,"UnknownSignatureType","","",50,null],[13,"InvalidKeyData","","",50,null],[13,"InvalidKeyDataBase16","","",50,null],[13,"InvalidKeyDataBase58","","",50,null],[13,"MissingResolutionDID","","",50,null],[13,"MissingResolutionMetadata","","",50,null],[13,"MissingResolutionDocument","","",50,null],[13,"MissingResolutionData","","",50,null],[13,"InvalidDIDQuery","","",50,null],[13,"InvalidDIDFragment","","",50,null],[13,"InvalidServiceProtocol","","",50,null],[3,"ServiceBuilder","","A `ServiceBuilder` is used to generate a customized…",null,null],[12,"id","","",51,null],[12,"type_","","",51,null],[12,"service_endpoint","","",51,null],[12,"properties","","",51,null],[3,"Service","","A DID Document Service",null,null],[12,"id","","",52,null],[12,"type_","","",52,null],[12,"service_endpoint","","",52,null],[12,"properties","","",52,null],[3,"DIDKey","","A helper struct for comparing types only by `DID`.",null,null],[12,"0","","",53,null],[3,"OrderedSet","","An ordered set based on a `Vec<T>`.",null,null],[12,"0","","",54,null],[3,"MethodBuilder","","A `MethodBuilder` is used to generate a customized `Method`.",null,null],[12,"id","","",55,null],[12,"controller","","",55,null],[12,"key_type","","",55,null],[12,"key_data","","",55,null],[12,"properties","","",55,null],[3,"Method","","A DID Document Verification Method",null,null],[12,"id","","",56,null],[12,"controller","","",56,null],[12,"key_type","","",56,null],[12,"key_data","","",56,null],[12,"properties","","",56,null],[4,"MethodData","","Supported verification method data formats.",null,null],[13,"PublicKeyBase58","","",57,null],[13,"PublicKeyHex","","",57,null],[13,"PublicKeyJwk","","",57,null],[4,"MethodIdent","","Index or identifier used to identify the target…",null,null],[13,"Index","","",58,null],[13,"Ident","","",58,null],[3,"MethodQuery","","Specifies the conditions of a DID document method…",null,null],[12,"ident","","",59,null],[12,"scope","","",59,null],[4,"MethodRef","","A reference to a verification method, either a `DID` or…",null,null],[13,"Embed","","",60,null],[13,"Refer","","",60,null],[4,"MethodScope","","Verification method group used to refine the scope of a…",null,null],[13,"VerificationMethod","","",61,null],[13,"Authentication","","",61,null],[13,"AssertionMethod","","",61,null],[13,"KeyAgreement","","",61,null],[13,"CapabilityDelegation","","",61,null],[13,"CapabilityInvocation","","",61,null],[4,"MethodType","","Supported verification method types.",null,null],[13,"JcsEd25519Key2020","","",62,null],[13,"JwsVerificationKey2020","","",62,null],[13,"Ed25519VerificationKey2018","","",62,null],[13,"MerkleKeyCollection2021","","",62,null],[3,"MethodWrap","","A queried `Method` with additional metadata about the…",null,null],[12,"method","","",63,null],[12,"index","","",63,null],[12,"scope","","",63,null],[14,"did","","A helper macro to assist with the construction of [`DID`]s.",null,null],[4,"DIDError","","",null,null],[13,"InvalidAuthority","","",64,null],[13,"InvalidFragment","","",64,null],[13,"InvalidMethodId","","",64,null],[13,"InvalidMethodName","","",64,null],[13,"InvalidPath","","",64,null],[13,"InvalidQuery","","",64,null],[13,"InvalidScheme","","",64,null],[3,"DID","","A Decentralized Identifier (DID).",null,null],[12,"data","","",65,null],[12,"core","","",65,null],[0,"resolution","","Types and traits for DID Document resolution.",null,null],[3,"Dereference","identity::did::resolution","The output returned from DID URL dereferencing.",null,null],[12,"metadata","","Metadata regarding the base resolution process.",66,null],[12,"content","","The output resource of a successful dereference.",66,null],[12,"content_metadata","","Content-specific metadata.",66,null],[3,"DocumentMetadata","","Metadata associated with a resolved DID Document.",null,null],[12,"created","","The timestamp of the Create operation.",67,null],[12,"updated","","The timestamp of the last Update operation.",67,null],[12,"properties","","Additional document metadata properties.",67,null],[4,"ErrorKind","","Types of errors that be returned from a DID resolution…",null,null],[13,"InvalidDID","","The DID supplied to the DID resolution function does not…",68,null],[13,"NotSupported","","The DID resolver does not support the specified method.",68,null],[13,"NotFound","","The DID resolver was unable to return the DID document…",68,null],[5,"dereference","","Dereferences a DID URL into a primary or secondary resource.",null,[[["inputmetadata",3]]]],[5,"resolve","","Resolves a DID into a DID Document by using the \\\"Read\\\"…",null,[[["inputmetadata",3]]]],[3,"InputMetadata","","Input options used to configure a DID resolution process.",null,null],[12,"accept","","The MIME type of the preferred representation of the DID…",69,null],[12,"properties","","Additional input metadata properties.",69,null],[17,"MIME_DID","","The content type of a JSON DID Document.",null,null],[17,"MIME_DID_LD","","The content type of a JSON-LD DID Document.",null,null],[3,"Resolution","","The output returned from DID resolution.",null,null],[12,"metadata","","Resolution-specific metadata.",70,null],[12,"document","","The DID Document of a successful resolution.",70,null],[12,"document_metadata","","Document-specific metadata.",70,null],[3,"ResolutionMetadata","","Metadata associated with a DID resolution process.",null,null],[12,"error","","The error code from the resolution process, if an error…",71,null],[12,"content_type","","The MIME type of the returned document stream.",71,null],[12,"duration","","The elapsed time of the resolution operation.",71,null],[12,"resolved","","The parsed DID that was used for resolution.",71,null],[12,"properties","","Additional resolution metadata properties.",71,null],[4,"PrimaryResource","","A primary resource returned from a DID URL dereferencing…",null,null],[13,"Document","","A dereferenced DID Document.",72,null],[13,"Service","","A dereferenced DID Document service endpoint.",72,null],[4,"Resource","","A resource returned from a DID URL dereferencing process.",null,null],[13,"Primary","","A dereferenced primary resource.",73,null],[13,"Secondary","","A dereferenced secondary resource.",73,null],[4,"SecondaryResource","","A secondary resource returned from a DID URL dereferencing…",null,null],[13,"VerificationDID","","A DID Document Method Id.",74,null],[13,"VerificationKey","","A DID Document Verification Method.",74,null],[13,"Service","","A DID Document Service.",74,null],[3,"MetaDocument","","A resolved [`Document`] and associated [`DocumentMetadata`].",null,null],[12,"data","","A resolved DID Document.",75,null],[12,"meta","","Information regarding the associated Documents resolution…",75,null],[8,"ResolverMethod","","A trait for generic DID Resolvers.",null,null],[10,"is_supported","","Returns `true` if the given `did` is supported by this DID…",76,[[["did",3]]]],[10,"read","","Performs the \\\"Read\\\" operation of the DID method.",76,[[["did",3],["inputmetadata",3]],[["pin",3],["box",3]]]],[0,"verifiable","identity::did","",null,null],[3,"LdSuite","identity::did::verifiable","",null,null],[12,"suite","","",77,null],[12,"methods","","",77,null],[3,"Properties","","",null,null],[12,"properties","","",78,null],[12,"proof","","",78,null],[8,"ResolveMethod","","",null,null],[10,"resolve_method","","",79,[[["methodquery",3]],[["option",4],["methodwrap",3]]]],[11,"try_resolve_method","","",79,[[["methodquery",3]],[["result",4],["methodwrap",3],["error",4]]]],[0,"iota","identity","IOTA Tangle DID Method",null,null],[3,"AuthChain","identity::iota","",null,null],[12,"current","","",80,null],[12,"history","","",80,null],[3,"DiffChain","","",null,null],[12,"inner","","",81,null],[3,"DocumentChain","","",null,null],[12,"auth_chain","","",82,null],[12,"diff_chain","","",82,null],[12,"document","","",82,null],[3,"Client","","",null,null],[12,"client","","",83,null],[12,"network","","",83,null],[3,"ClientBuilder","","A `ClientBuilder` is used to generated a customized…",null,null],[12,"network","","",84,null],[12,"nodes","","",84,null],[4,"Network","","",null,null],[13,"Mainnet","","",85,null],[13,"Devnet","","",85,null],[13,"Comnet","","",85,null],[3,"TxnPrinter","","",null,null],[12,"0","","",86,null],[12,"1","","",86,null],[3,"CredentialValidation","","",null,null],[12,"credential","","",87,null],[12,"issuer","","",87,null],[12,"subjects","","",87,null],[12,"verified","","",87,null],[3,"CredentialValidator","","",null,null],[12,"client","","",88,null],[3,"DocumentValidation","","",null,null],[12,"did","","",89,null],[12,"document","","",89,null],[12,"metadata","","",89,null],[12,"verified","","",89,null],[3,"PresentationValidation","","",null,null],[12,"presentation","","",90,null],[12,"holder","","",90,null],[12,"credentials","","",90,null],[12,"verified","","",90,null],[3,"IotaDID","","",null,null],[12,"0","","",91,null],[3,"Segments","","",null,null],[12,"0","","",92,null],[3,"IotaDocument","","",null,null],[12,"document","","",93,null],[12,"message_id","","",93,null],[3,"IotaDocumentBuilder","","",null,null],[12,"authentication_tag","","",94,null],[12,"authentication_type","","",94,null],[12,"did_network","","",94,null],[12,"did_shard","","",94,null],[12,"immutable","","",94,null],[3,"DocumentDiff","","",null,null],[12,"did","","",95,null],[12,"diff","","",95,null],[12,"previous_message_id","","",95,null],[12,"proof","","",95,null],[12,"message_id","","",95,null],[3,"Properties","","",null,null],[12,"created","","",96,null],[12,"updated","","",96,null],[12,"immutable","","",96,null],[12,"previous_message_id","","",96,null],[12,"properties","","",96,null],[6,"Result","","",null,null],[4,"Error","","",null,null],[13,"CoreError","","",97,null],[13,"DiffError","","",97,null],[13,"CredError","","",97,null],[13,"InvalidDID","","",97,null],[13,"InvalidDoc","","",97,null],[13,"ClientError","","",97,null],[13,"TernaryError","","",97,null],[13,"InvalidDocument","","",97,null],[12,"error","identity::iota::Error","",98,null],[13,"InvalidDIDNetwork","identity::iota","",97,null],[13,"InvalidTryteConversion","","",97,null],[13,"InvalidTransactionBundle","","",97,null],[13,"InvalidTransactionHashes","","",97,null],[13,"InvalidTransactionTrytes","","",97,null],[13,"InvalidBundleTail","","",97,null],[13,"InvalidPresentationHolder","","",97,null],[13,"ChainError","","",97,null],[12,"error","identity::iota::Error","",99,null],[3,"Message","identity::iota","",null,null],[12,"address","","",100,null],[12,"message","","",100,null],[12,"tail_hash","","",100,null],[12,"timestamp","","",100,null],[3,"MessageId","","",null,null],[12,"0","","",101,null],[3,"MessageIndex","","",null,null],[12,"inner","","",102,null],[8,"TangleRef","","",null,null],[10,"message_id","","",103,[[],["messageid",3]]],[10,"set_message_id","","",103,[[["messageid",3]]]],[10,"previous_message_id","","",103,[[],["messageid",3]]],[10,"set_previous_message_id","","",103,[[["messageid",3]]]],[5,"txn_hash","","",null,[[["bundledtransaction",3]],["hash",3]]],[5,"txn_hash_trytes","","",null,[[["bundledtransaction",3]],["string",3]]],[5,"encode_trits","","",null,[[["trits",3]],["string",3]]],[5,"create_address_from_trits","","",null,[[],[["error",4],["result",4],["address",3]]]],[5,"to_tryte","","",null,[[]]],[5,"utf8_to_trytes","","",null,[[],["string",3]]],[5,"trytes_to_utf8","","",null,[[],[["result",4],["string",3],["error",4]]]],[5,"bundles_from_trytes","","",null,[[["vec",3],["bundledtransaction",3]],[["vec",3],["vec",3]]]],[11,"from","identity::core","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[]]],[11,"encode_hex","","",2,[[]]],[11,"encode_hex_upper","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"as_fail","","",9,[[],["fail",8]]],[11,"from","identity::core::diff","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"as_fail","","",10,[[],["fail",8]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"equivalent","","",14,[[]]],[11,"vzip","","",14,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","identity::crypto::merkle_tree","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"equivalent","","",19,[[]]],[11,"encode_hex","","",19,[[]]],[11,"encode_hex_upper","","",19,[[]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","identity::crypto","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"zeroize","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"equivalent","","",28,[[]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"equivalent","","",29,[[]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"equivalent","","",30,[[]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"equivalent","","",31,[[]]],[11,"vzip","","",31,[[]]],[11,"from","identity::credential","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"as_fail","","",44,[[],["fail",8]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","identity::did","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"as_fail","","",50,[[],["fail",8]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"equivalent","","",53,[[]]],[11,"encode_hex","","",53,[[]]],[11,"encode_hex_upper","","",53,[[]]],[11,"vzip","","",53,[[]]],[11,"reset","","",53,[[]]],[11,"absorb","","",53,[[["trits",3]],["result",4]]],[11,"squeeze_into","","",53,[[["trits",3]],["result",4]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"equivalent","","",54,[[]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"equivalent","","",58,[[]]],[11,"vzip","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"equivalent","","",59,[[]]],[11,"vzip","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"equivalent","","",61,[[]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"equivalent","","",62,[[]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"equivalent","","",64,[[]]],[11,"vzip","","",64,[[]]],[11,"as_fail","","",64,[[],["fail",8]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"to_string","","",65,[[],["string",3]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"equivalent","","",65,[[]]],[11,"vzip","","",65,[[]]],[11,"from","identity::did::resolution","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"equivalent","","",68,[[]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","identity::did::verifiable","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"equivalent","","",78,[[]]],[11,"vzip","","",78,[[]]],[11,"reset","","",78,[[]]],[11,"absorb","","",78,[[["trits",3]],["result",4]]],[11,"squeeze_into","","",78,[[["trits",3]],["result",4]]],[11,"from","identity::iota","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"equivalent","","",85,[[]]],[11,"vzip","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_string","","",86,[[],["string",3]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"to_string","","",91,[[],["string",3]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"equivalent","","",91,[[]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"to_string","","",93,[[],["string",3]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_string","","",97,[[],["string",3]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"as_fail","","",97,[[],["fail",8]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"equivalent","","",101,[[]]],[11,"vzip","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"default","identity::crypto","",31,[[],["signaturevalue",3]]],[11,"default","","",30,[[],["signatureoptions",3]]],[11,"default","identity::crypto::merkle_tree","",19,[[],["hash",3]]],[11,"default","identity::core","",3,[[],["timestamp",3]]],[11,"default","","",2,[[],["oneormany",4]]],[11,"diff","","",4,[[["url",3]],[["result",4],["error",4]]]],[11,"merge","","",4,[[],[["result",4],["url",3],["error",4]]]],[11,"from_diff","","",4,[[],[["result",4],["url",3],["error",4]]]],[11,"into_diff","","",4,[[],[["result",4],["error",4]]]],[11,"deref","identity::crypto","",28,[[]]],[11,"deref","identity::core","",2,[[]]],[11,"deref","","",4,[[]]],[11,"deref","identity::crypto","",31,[[]]],[11,"cmp","","",29,[[["signaturedata",4]],["ordering",4]]],[11,"cmp","","",31,[[["signaturevalue",3]],["ordering",4]]],[11,"cmp","identity::crypto::merkle_tree","",19,[[["hash",3]],["ordering",4]]],[11,"cmp","identity::core","",2,[[["oneormany",4]],["ordering",4]]],[11,"cmp","","",4,[[["url",3]],["ordering",4]]],[11,"cmp","identity::crypto","",30,[[["signatureoptions",3]],["ordering",4]]],[11,"cmp","identity::core","",3,[[["timestamp",3]],["ordering",4]]],[11,"cmp","identity::crypto","",28,[[["signature",3]],["ordering",4]]],[11,"verify","","",104,[[["signaturedata",4]],[["error",4],["result",4]]]],[11,"fmt","identity::crypto::merkle_tree","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::core","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::crypto","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::crypto::merkle_tree","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::crypto","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::core","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::crypto::merkle_tree","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::crypto","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::core","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::crypto","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","identity::core","",4,[[["url",3]]]],[11,"ne","","",4,[[["url",3]]]],[11,"eq","identity::crypto","",29,[[["signaturedata",4]]]],[11,"ne","","",29,[[["signaturedata",4]]]],[11,"eq","identity::core","",2,[[["oneormany",4]]]],[11,"ne","","",2,[[["oneormany",4]]]],[11,"eq","identity::crypto","",30,[[["signatureoptions",3]]]],[11,"ne","","",30,[[["signatureoptions",3]]]],[11,"eq","","",31,[[["signaturevalue",3]]]],[11,"ne","","",31,[[["signaturevalue",3]]]],[11,"eq","identity::core","",4,[[]]],[11,"eq","","",3,[[["timestamp",3]]]],[11,"ne","","",3,[[["timestamp",3]]]],[11,"eq","","",0,[[["context",4]]]],[11,"ne","","",0,[[["context",4]]]],[11,"eq","identity::crypto","",28,[[["signature",3]]]],[11,"ne","","",28,[[["signature",3]]]],[11,"eq","identity::crypto::merkle_tree","",19,[[["hash",3]]]],[11,"eq","identity::core","",0,[[]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","identity::crypto","",29,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","identity::core","",2,[[],["result",4]]],[11,"serialize","identity::crypto","",30,[[],["result",4]]],[11,"serialize","identity::core","",4,[[],["result",4]]],[11,"from_str","","",3,[[],[["result",4],["timestamp",3]]]],[11,"from_str","","",4,[[],[["url",3],["result",4]]]],[11,"try_from","","",3,[[],[["result",4],["timestamp",3]]]],[11,"try_from","","",3,[[["string",3]],[["timestamp",3],["result",4]]]],[11,"ct_eq","identity::crypto::merkle_tree","",19,[[["hash",3]],["choice",3]]],[11,"clone","identity::core","",3,[[],["timestamp",3]]],[11,"clone","identity::crypto::merkle_tree","",19,[[],["hash",3]]],[11,"clone","identity::crypto","",104,[[],["jcsed25519signature2020",3]]],[11,"clone","identity::core","",2,[[],["oneormany",4]]],[11,"clone","identity::crypto","",30,[[],["signatureoptions",3]]],[11,"clone","","",28,[[],["signature",3]]],[11,"clone","identity::core","",4,[[],["url",3]]],[11,"clone","identity::crypto","",29,[[],["signaturedata",4]]],[11,"clone","","",23,[[],["keypair",3]]],[11,"clone","","",31,[[],["signaturevalue",3]]],[11,"clone","identity::core","",0,[[],["context",4]]],[11,"hash","","",2,[[]]],[11,"hash","identity::crypto","",30,[[]]],[11,"hash","identity::core","",4,[[]]],[11,"hash","identity::crypto","",29,[[]]],[11,"hash","identity::core","",3,[[]]],[11,"source","","",9,[[],[["option",4],["error",8]]]],[11,"drop","identity::crypto","",23,[[]]],[11,"zeroize","","",23,[[]]],[11,"from","identity::core","",9,[[["parseerror",3]],["error",4]]],[11,"from","","",0,[[["btreemap",3],["string",3],["value",4]],["context",4]]],[11,"from","","",9,[[["error",4]],["error",4]]],[11,"from","","",9,[[["parseerror",4]],["error",4]]],[11,"from","","",2,[[],["oneormany",4]]],[11,"from","","",9,[[["error",4]],["error",4]]],[11,"from","identity::crypto::merkle_tree","",19,[[["genericarray",3]],["hash",3]]],[11,"from","identity::core","",0,[[["url",3]],["context",4]]],[11,"from","","",4,[[["url",3]],["url",3]]],[11,"from","","",2,[[["vec",3]],["oneormany",4]]],[11,"from","","",9,[[["fromhexerror",4]],["error",4]]],[11,"sign","identity::crypto","",104,[[],[["error",4],["signaturedata",4],["result",4]]]],[11,"name","","",104,[[],["string",3]]],[11,"as_ref","identity::core","",2,[[]]],[11,"as_ref","identity::crypto::merkle_tree","",19,[[]]],[11,"deserialize","identity::core","",0,[[],[["result",4],["context",4]]]],[11,"deserialize","","",3,[[],[["result",4],["timestamp",3]]]],[11,"deserialize","identity::crypto","",29,[[],[["result",4],["signaturedata",4]]]],[11,"deserialize","identity::core","",4,[[],[["url",3],["result",4]]]],[11,"deserialize","identity::crypto","",28,[[],[["signature",3],["result",4]]]],[11,"deserialize","","",31,[[],[["result",4],["signaturevalue",3]]]],[11,"deserialize","identity::core","",2,[[],[["result",4],["oneormany",4]]]],[11,"deserialize","identity::crypto","",30,[[],[["result",4],["signatureoptions",3]]]],[11,"deref_mut","identity::core","",4,[[]]],[11,"deref_mut","identity::crypto","",28,[[]]],[11,"deref_mut","","",31,[[]]],[11,"partial_cmp","identity::core","",3,[[["timestamp",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["timestamp",3]]]],[11,"le","","",3,[[["timestamp",3]]]],[11,"gt","","",3,[[["timestamp",3]]]],[11,"ge","","",3,[[["timestamp",3]]]],[11,"partial_cmp","identity::crypto","",28,[[["signature",3]],[["ordering",4],["option",4]]]],[11,"lt","","",28,[[["signature",3]]]],[11,"le","","",28,[[["signature",3]]]],[11,"gt","","",28,[[["signature",3]]]],[11,"ge","","",28,[[["signature",3]]]],[11,"partial_cmp","","",31,[[["signaturevalue",3]],[["ordering",4],["option",4]]]],[11,"lt","","",31,[[["signaturevalue",3]]]],[11,"le","","",31,[[["signaturevalue",3]]]],[11,"gt","","",31,[[["signaturevalue",3]]]],[11,"ge","","",31,[[["signaturevalue",3]]]],[11,"partial_cmp","identity::core","",2,[[["oneormany",4]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["oneormany",4]]]],[11,"le","","",2,[[["oneormany",4]]]],[11,"gt","","",2,[[["oneormany",4]]]],[11,"ge","","",2,[[["oneormany",4]]]],[11,"partial_cmp","identity::crypto","",29,[[["signaturedata",4]],[["ordering",4],["option",4]]]],[11,"lt","","",29,[[["signaturedata",4]]]],[11,"le","","",29,[[["signaturedata",4]]]],[11,"gt","","",29,[[["signaturedata",4]]]],[11,"ge","","",29,[[["signaturedata",4]]]],[11,"partial_cmp","identity::crypto::merkle_tree","",19,[[["hash",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","identity::core","",4,[[["url",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["url",3]]]],[11,"le","","",4,[[["url",3]]]],[11,"gt","","",4,[[["url",3]]]],[11,"ge","","",4,[[["url",3]]]],[11,"partial_cmp","identity::crypto","",30,[[["signatureoptions",3]],[["ordering",4],["option",4]]]],[11,"lt","","",30,[[["signatureoptions",3]]]],[11,"le","","",30,[[["signatureoptions",3]]]],[11,"gt","","",30,[[["signatureoptions",3]]]],[11,"ge","","",30,[[["signatureoptions",3]]]],[11,"fmt","identity::core","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"index_mut","","Write into a `serde_json::Value` using the syntax…",1,[[],["value",4]]],[11,"default","","",1,[[],["value",4]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[["string",3]]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[["value",4]]]],[11,"ne","","",1,[[["value",4]]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"clone","","",1,[[],["value",4]]],[11,"from_iter","","Convert an iteratable type to a `Value`",1,[[],["value",4]]],[11,"from_iter","","Convert an iteratable type to a `Value`",1,[[],["value",4]]],[11,"deserialize","","",1,[[],[["result",4],["value",4]]]],[11,"deserialize_any","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_i8","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_i16","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_i32","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_i64","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_u8","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_u16","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_u32","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_u64","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_f32","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_f64","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_i128","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_u128","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_option","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_enum","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_newtype_struct","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_bool","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_char","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_str","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_string","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_bytes","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_byte_buf","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_unit","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_unit_struct","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_seq","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_tuple","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_tuple_struct","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_map","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_struct","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_identifier","","",1,[[],[["error",3],["result",4]]]],[11,"deserialize_ignored_any","","",1,[[],[["error",3],["result",4]]]],[11,"index","","Index into a `serde_json::Value` using the syntax…",1,[[],["value",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"from_str","","",1,[[],[["value",4],["error",3],["result",4]]]],[11,"into_deserializer","","",1,[[]]],[11,"from","","",1,[[],["value",4]]],[11,"from","","",1,[[],["value",4]]],[11,"from","","",1,[[],["value",4]]],[11,"from","","Convert boolean to `Value`",1,[[],["value",4]]],[11,"from","","",1,[[],["value",4]]],[11,"from","","Convert 32-bit floating point number to `Value`",1,[[],["value",4]]],[11,"from","","",1,[[],["value",4]]],[11,"from","","",1,[[],["value",4]]],[11,"from","","Convert copy-on-write string to `Value`",1,[[["cow",4]],["value",4]]],[11,"from","","",1,[[],["value",4]]],[11,"from","","Convert `String` to `Value`",1,[[["string",3]],["value",4]]],[11,"from","","Convert `()` to `Value`",1,[[],["value",4]]],[11,"from","","Convert 64-bit floating point number to `Value`",1,[[],["value",4]]],[11,"from","","Convert a `Vec` to `Value`",1,[[["vec",3]],["value",4]]],[11,"from","","Convert map (with string keys) to `Value`",1,[[["string",3],["map",3],["value",4]],["value",4]]],[11,"from","","Convert string slice to `Value`",1,[[],["value",4]]],[11,"from","","Convert `Number` to `Value`",1,[[["number",3]],["value",4]]],[11,"from","","Convert a slice to `Value`",1,[[],["value",4]]],[11,"from","","",1,[[],["value",4]]],[11,"from","","",1,[[],["value",4]]],[11,"from","","",1,[[],["value",4]]],[11,"fmt","","Display a JSON value as a string.",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","identity::core::diff","",11,[[],["diffhashmap",3]]],[11,"clone","","",14,[[],["diffstring",3]]],[11,"clone","","",12,[[],["diffhashset",3]]],[11,"clone","","",16,[[],["diffvec",3]]],[11,"clone","","",13,[[],["diffoption",4]]],[11,"hash","","",14,[[]]],[11,"default","","",14,[[],["diffstring",3]]],[11,"default","","",16,[[],["diffvec",3]]],[11,"default","","",11,[[],["diffhashmap",3]]],[11,"default","","",13,[[],["diffoption",4]]],[11,"from","","",13,[[["option",4]],["diffoption",4]]],[11,"into","","",13,[[],["option",4]]],[11,"cmp","","",14,[[["diffstring",3]],["ordering",4]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",13,[[["diffoption",4]]]],[11,"ne","","",13,[[["diffoption",4]]]],[11,"eq","","",11,[[["diffhashmap",3]]]],[11,"ne","","",11,[[["diffhashmap",3]]]],[11,"eq","","",16,[[["diffvec",3]]]],[11,"ne","","",16,[[["diffvec",3]]]],[11,"eq","","",14,[[["diffstring",3]]]],[11,"ne","","",14,[[["diffstring",3]]]],[11,"eq","","",12,[[["diffhashset",3]]]],[11,"ne","","",12,[[["diffhashset",3]]]],[11,"partial_cmp","","",14,[[["diffstring",3]],[["ordering",4],["option",4]]]],[11,"lt","","",14,[[["diffstring",3]]]],[11,"le","","",14,[[["diffstring",3]]]],[11,"gt","","",14,[[["diffstring",3]]]],[11,"ge","","",14,[[["diffstring",3]]]],[11,"deserialize","","",12,[[],[["result",4],["diffhashset",3]]]],[11,"deserialize","","",11,[[],[["result",4],["diffhashmap",3]]]],[11,"deserialize","","",14,[[],[["result",4],["diffstring",3]]]],[11,"deserialize","","",13,[[],[["result",4],["diffoption",4]]]],[11,"deserialize","","",16,[[],[["diffvec",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"diff","identity::did","",65,[[["did",3]],[["result",4],["error",4]]]],[11,"merge","","",65,[[],[["result",4],["did",3],["error",4]]]],[11,"from_diff","","",65,[[],[["result",4],["did",3],["error",4]]]],[11,"into_diff","","",65,[[],[["result",4],["error",4]]]],[11,"diff","identity::core","Compares two `serde_json::Value` types; `self`, `diff` and…",1,[[["value",4]],[["error",4],["result",4]]]],[11,"merge","","Merges a `DiffValue`; `diff` with `self`; a…",1,[[],[["error",4],["result",4],["value",4]]]],[11,"from_diff","","Converts from a `diff` of type `DiffValue` to a…",1,[[],[["error",4],["result",4],["value",4]]]],[11,"into_diff","","converts a `serde_json::Value` to a `DiffValue`.",1,[[],[["error",4],["result",4]]]],[11,"serialize","identity::core::diff","",11,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"eq","identity::did","",64,[[["error",4]]]],[11,"eq","","",65,[[]]],[11,"eq","","",65,[[]]],[11,"eq","","",65,[[["did",3]]]],[11,"from_str","","",65,[[],[["result",4],["did",3]]]],[11,"cmp","","",65,[[["did",3]],["ordering",4]]],[11,"cmp","","",64,[[["error",4]],["ordering",4]]],[11,"as_ref","","",65,[[]]],[11,"partial_cmp","","",65,[[["did",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",64,[[["error",4]],[["ordering",4],["option",4]]]],[11,"deserialize","","",65,[[],[["result",4],["did",3]]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",64,[[],["error",4]]],[11,"clone","","",65,[[],["did",3]]],[11,"try_from","","",65,[[["string",3]],[["did",3],["result",4]]]],[11,"serialize","","",65,[[],["result",4]]],[11,"hash","","",65,[[]]],[11,"hash","","",64,[[]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","identity::credential","",47,[[],["verifiablepresentation",3]]],[11,"clone","","",37,[[],["issuer",4]]],[11,"clone","","",46,[[],["presentation",3]]],[11,"clone","","",34,[[],["credentialbuilder",3]]],[11,"clone","","",40,[[],["schema",3]]],[11,"clone","","",45,[[],["presentationbuilder",3]]],[11,"clone","","",36,[[],["evidence",3]]],[11,"clone","","",39,[[],["refresh",3]]],[11,"clone","","",41,[[],["status",3]]],[11,"clone","","",42,[[],["subject",3]]],[11,"clone","","",35,[[],["credential",3]]],[11,"clone","","",43,[[],["verifiablecredential",3]]],[11,"clone","","",38,[[],["policy",3]]],[11,"source","","",44,[[],[["option",4],["error",8]]]],[11,"set_signature","","",47,[[["signature",3]]]],[11,"set_signature","","",43,[[["signature",3]]]],[11,"signature_mut","","",47,[[],[["option",4],["signature",3]]]],[11,"signature_mut","","",43,[[],[["option",4],["signature",3]]]],[11,"default","","",34,[[],["credentialbuilder",3]]],[11,"default","","",42,[[],["subject",3]]],[11,"default","","",38,[[],["policy",3]]],[11,"default","","",45,[[],["presentationbuilder",3]]],[11,"default","","",36,[[],["evidence",3]]],[11,"from","","",37,[[],["issuer",4]]],[11,"from","","",44,[[["error",4]],["error",4]]],[11,"deref","","",47,[[]]],[11,"deref","","",43,[[]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"signature","","",43,[[],[["option",4],["signature",3]]]],[11,"signature","","",47,[[],[["option",4],["signature",3]]]],[11,"eq","","",35,[[["credential",3]]]],[11,"ne","","",35,[[["credential",3]]]],[11,"eq","","",47,[[["verifiablepresentation",3]]]],[11,"ne","","",47,[[["verifiablepresentation",3]]]],[11,"eq","","",39,[[["refresh",3]]]],[11,"ne","","",39,[[["refresh",3]]]],[11,"eq","","",40,[[["schema",3]]]],[11,"ne","","",40,[[["schema",3]]]],[11,"eq","","",36,[[["evidence",3]]]],[11,"ne","","",36,[[["evidence",3]]]],[11,"eq","","",46,[[["presentation",3]]]],[11,"ne","","",46,[[["presentation",3]]]],[11,"eq","","",42,[[["subject",3]]]],[11,"ne","","",42,[[["subject",3]]]],[11,"eq","","",41,[[["status",3]]]],[11,"ne","","",41,[[["status",3]]]],[11,"eq","","",38,[[["policy",3]]]],[11,"ne","","",38,[[["policy",3]]]],[11,"eq","","",43,[[["verifiablecredential",3]]]],[11,"ne","","",43,[[["verifiablecredential",3]]]],[11,"eq","","",37,[[["issuer",4]]]],[11,"ne","","",37,[[["issuer",4]]]],[11,"deref_mut","","",43,[[]]],[11,"deref_mut","","",47,[[]]],[11,"deserialize","","",39,[[],[["result",4],["refresh",3]]]],[11,"deserialize","","",41,[[],[["status",3],["result",4]]]],[11,"deserialize","","",35,[[],[["result",4],["credential",3]]]],[11,"deserialize","","",42,[[],[["subject",3],["result",4]]]],[11,"deserialize","","",38,[[],[["policy",3],["result",4]]]],[11,"deserialize","","",40,[[],[["schema",3],["result",4]]]],[11,"deserialize","","",43,[[],[["verifiablecredential",3],["result",4]]]],[11,"deserialize","","",46,[[],[["result",4],["presentation",3]]]],[11,"deserialize","","",36,[[],[["evidence",3],["result",4]]]],[11,"deserialize","","",47,[[],[["verifiablepresentation",3],["result",4]]]],[11,"deserialize","","",37,[[],[["result",4],["issuer",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","","",40,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"as_mut","identity::did","",53,[[]]],[11,"resolve_method","","",49,[[["methodquery",3]],[["option",4],["methodwrap",3]]]],[11,"default","","",48,[[],["documentbuilder",3]]],[11,"default","identity::did::resolution","",69,[[],["inputmetadata",3]]],[11,"default","identity::did::verifiable","",78,[[],["properties",3]]],[11,"default","identity::did","",51,[[],["servicebuilder",3]]],[11,"default","","",54,[[],["orderedset",3]]],[11,"default","identity::did::resolution","",66,[[],["dereference",3]]],[11,"default","","",67,[[],["documentmetadata",3]]],[11,"default","","",71,[[],["resolutionmetadata",3]]],[11,"default","","",70,[[],["resolution",3]]],[11,"default","identity::did","",55,[[],["methodbuilder",3]]],[11,"default","","",61,[[],["methodscope",4]]],[11,"deref","","",63,[[]]],[11,"deref","","",54,[[]]],[11,"deref","","",53,[[]]],[11,"deref","identity::did::verifiable","",78,[[]]],[11,"cmp","","",78,[[["properties",3]],["ordering",4]]],[11,"cmp","identity::did::resolution","",68,[[["errorkind",4]],["ordering",4]]],[11,"cmp","identity::did","",59,[[["methodquery",3]],["ordering",4]]],[11,"cmp","","",61,[[["methodscope",4]],["ordering",4]]],[11,"cmp","","",62,[[["methodtype",4]],["ordering",4]]],[11,"cmp","","",53,[[["didkey",3]],["ordering",4]]],[11,"cmp","","",58,[[["methodident",4]],["ordering",4]]],[11,"cmp","","",54,[[["orderedset",3]],["ordering",4]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did::resolution","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did::verifiable","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did::resolution","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did::resolution","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did::resolution","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did::resolution","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did::resolution","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did::resolution","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did::verifiable","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","identity::did::resolution","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"diff","identity::did","",56,[[["method",3]],[["error",4],["result",4]]]],[11,"merge","","",56,[[],[["result",4],["error",4],["method",3]]]],[11,"from_diff","","",56,[[],[["result",4],["error",4],["method",3]]]],[11,"into_diff","","",56,[[],[["error",4],["result",4]]]],[11,"diff","","",49,[[["document",3]],[["error",4],["result",4]]]],[11,"merge","","",49,[[],[["result",4],["error",4],["document",3]]]],[11,"from_diff","","",49,[[],[["result",4],["error",4],["document",3]]]],[11,"into_diff","","",49,[[],[["error",4],["result",4]]]],[11,"diff","","",57,[[["methoddata",4]],[["result",4],["error",4]]]],[11,"merge","","",57,[[],[["methoddata",4],["error",4],["result",4]]]],[11,"from_diff","","",57,[[],[["methoddata",4],["error",4],["result",4]]]],[11,"into_diff","","",57,[[],[["result",4],["error",4]]]],[11,"diff","","",62,[[["methodtype",4]],[["result",4],["error",4]]]],[11,"merge","","",62,[[],[["methodtype",4],["error",4],["result",4]]]],[11,"from_diff","","",62,[[],[["methodtype",4],["error",4],["result",4]]]],[11,"into_diff","","",62,[[],[["result",4],["error",4]]]],[11,"diff","","",53,[[["didkey",3]],[["error",4],["result",4]]]],[11,"merge","","",53,[[],[["didkey",3],["error",4],["result",4]]]],[11,"from_diff","","",53,[[],[["didkey",3],["error",4],["result",4]]]],[11,"into_diff","","",53,[[],[["error",4],["result",4]]]],[11,"diff","","",54,[[["orderedset",3]],[["error",4],["result",4]]]],[11,"merge","","",54,[[],[["orderedset",3],["error",4],["result",4]]]],[11,"from_diff","","",54,[[],[["orderedset",3],["error",4],["result",4]]]],[11,"into_diff","","",54,[[],[["error",4],["result",4]]]],[11,"diff","","",52,[[["service",3]],[["error",4],["result",4]]]],[11,"merge","","",52,[[],[["result",4],["error",4],["service",3]]]],[11,"from_diff","","",52,[[],[["result",4],["error",4],["service",3]]]],[11,"into_diff","","",52,[[],[["error",4],["result",4]]]],[11,"diff","","",60,[[["methodref",4]],[["result",4],["error",4]]]],[11,"merge","","",60,[[],[["methodref",4],["error",4],["result",4]]]],[11,"from_diff","","",60,[[],[["methodref",4],["error",4],["result",4]]]],[11,"into_diff","","",60,[[],[["result",4],["error",4]]]],[11,"eq","","",58,[[["methodident",4]]]],[11,"ne","","",58,[[["methodident",4]]]],[11,"eq","identity::did::resolution","",73,[[["resource",4]]]],[11,"ne","","",73,[[["resource",4]]]],[11,"eq","","",67,[[["documentmetadata",3]]]],[11,"ne","","",67,[[["documentmetadata",3]]]],[11,"eq","identity::did","",57,[[["methoddata",4]]]],[11,"ne","","",57,[[["methoddata",4]]]],[11,"eq","","",62,[[["methodtype",4]]]],[11,"eq","identity::did::resolution","",69,[[["inputmetadata",3]]]],[11,"ne","","",69,[[["inputmetadata",3]]]],[11,"eq","","",74,[[["secondaryresource",4]]]],[11,"ne","","",74,[[["secondaryresource",4]]]],[11,"eq","","",71,[[["resolutionmetadata",3]]]],[11,"ne","","",71,[[["resolutionmetadata",3]]]],[11,"eq","identity::did","",52,[[["service",3]]]],[11,"ne","","",52,[[["service",3]]]],[11,"eq","","",53,[[["didkey",3]]]],[11,"eq","","",61,[[["methodscope",4]]]],[11,"eq","identity::did::resolution","",70,[[["resolution",3]]]],[11,"ne","","",70,[[["resolution",3]]]],[11,"eq","identity::did::verifiable","",78,[[["properties",3]]]],[11,"ne","","",78,[[["properties",3]]]],[11,"eq","identity::did","",56,[[["method",3]]]],[11,"ne","","",56,[[["method",3]]]],[11,"eq","identity::did::resolution","",66,[[["dereference",3]]]],[11,"ne","","",66,[[["dereference",3]]]],[11,"eq","identity::did","",60,[[["methodref",4]]]],[11,"ne","","",60,[[["methodref",4]]]],[11,"eq","identity::did::resolution","",72,[[["primaryresource",4]]]],[11,"ne","","",72,[[["primaryresource",4]]]],[11,"eq","","",68,[[["errorkind",4]]]],[11,"eq","identity::did","",54,[[["orderedset",3]]]],[11,"ne","","",54,[[["orderedset",3]]]],[11,"eq","","",63,[[["methodwrap",3]]]],[11,"ne","","",63,[[["methodwrap",3]]]],[11,"eq","","",49,[[["document",3]]]],[11,"ne","","",49,[[["document",3]]]],[11,"eq","identity::did::resolution","",75,[[["metadocument",3]]]],[11,"ne","","",75,[[["metadocument",3]]]],[11,"eq","identity::did","",58,[[]]],[11,"eq","","",58,[[]]],[11,"eq","","",59,[[["methodquery",3]]]],[11,"ne","","",59,[[["methodquery",3]]]],[11,"serialize","identity::did::resolution","",70,[[],["result",4]]],[11,"serialize","identity::did","",56,[[],["result",4]]],[11,"serialize","","",54,[[],["result",4]]],[11,"serialize","identity::did::resolution","",68,[[],["result",4]]],[11,"serialize","identity::did","",53,[[],["result",4]]],[11,"serialize","identity::did::resolution","",75,[[],["result",4]]],[11,"serialize","identity::did","",60,[[],["result",4]]],[11,"serialize","identity::did::resolution","",66,[[],["result",4]]],[11,"serialize","identity::did","",57,[[],["result",4]]],[11,"serialize","identity::did::resolution","",71,[[],["result",4]]],[11,"serialize","","",73,[[],["result",4]]],[11,"serialize","","",67,[[],["result",4]]],[11,"serialize","identity::did","",49,[[],["result",4]]],[11,"serialize","identity::did::resolution","",72,[[],["result",4]]],[11,"serialize","","",74,[[],["result",4]]],[11,"serialize","","",69,[[],["result",4]]],[11,"serialize","identity::did","",62,[[],["result",4]]],[11,"serialize","identity::did::verifiable","",78,[[],["result",4]]],[11,"serialize","identity::did","",52,[[],["result",4]]],[11,"from_str","","",61,[[],[["result",4],["methodscope",4]]]],[11,"from_str","","",62,[[],[["result",4],["methodtype",4]]]],[11,"borrow","","",53,[[],["did",3]]],[11,"try_from","","",54,[[["vec",3]],[["result",4],["orderedset",3]]]],[11,"try_from","","",59,[[["signature",3]],[["result",4],["methodquery",3]]]],[11,"clone","","",55,[[],["methodbuilder",3]]],[11,"clone","","",53,[[],["didkey",3]]],[11,"clone","","",63,[[],["methodwrap",3]]],[11,"clone","identity::did::resolution","",71,[[],["resolutionmetadata",3]]],[11,"clone","identity::did::verifiable","",77,[[],["ldsuite",3]]],[11,"clone","identity::did","",59,[[],["methodquery",3]]],[11,"clone","identity::did::resolution","",75,[[],["metadocument",3]]],[11,"clone","identity::did","",62,[[],["methodtype",4]]],[11,"clone","identity::did::resolution","",70,[[],["resolution",3]]],[11,"clone","identity::did","",60,[[],["methodref",4]]],[11,"clone","","",61,[[],["methodscope",4]]],[11,"clone","","",51,[[],["servicebuilder",3]]],[11,"clone","","",52,[[],["service",3]]],[11,"clone","identity::did::resolution","",66,[[],["dereference",3]]],[11,"clone","identity::did::verifiable","",78,[[],["properties",3]]],[11,"clone","identity::did::resolution","",68,[[],["errorkind",4]]],[11,"clone","identity::did","",54,[[],["orderedset",3]]],[11,"clone","identity::did::resolution","",73,[[],["resource",4]]],[11,"clone","identity::did","",48,[[],["documentbuilder",3]]],[11,"clone","","",49,[[],["document",3]]],[11,"clone","identity::did::resolution","",69,[[],["inputmetadata",3]]],[11,"clone","identity::did","",57,[[],["methoddata",4]]],[11,"clone","identity::did::resolution","",67,[[],["documentmetadata",3]]],[11,"clone","identity::did","",56,[[],["method",3]]],[11,"clone","identity::did::resolution","",72,[[],["primaryresource",4]]],[11,"clone","identity::did","",58,[[],["methodident",4]]],[11,"clone","identity::did::resolution","",74,[[],["secondaryresource",4]]],[11,"hash","identity::did","",62,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",58,[[]]],[11,"hash","identity::did::resolution","",68,[[]]],[11,"hash","identity::did","",53,[[]]],[11,"source","","",50,[[],[["option",4],["error",8]]]],[11,"from_iter","","",54,[[],["orderedset",3]]],[11,"from","","",59,[[["methodscope",4]],["methodquery",3]]],[11,"from","identity::did::resolution","",74,[[["methodref",4]],["secondaryresource",4]]],[11,"from","identity::did","",59,[[],["methodquery",3]]],[11,"from","identity::crypto","",30,[[["methodwrap",3]],["signatureoptions",3]]],[11,"from","identity::did::resolution","",73,[[["secondaryresource",4]],["resource",4]]],[11,"from","identity::did","",53,[[],["didkey",3]]],[11,"from","","",59,[[],["methodquery",3]]],[11,"from","identity::did::resolution","",74,[[["did",3]],["secondaryresource",4]]],[11,"from","identity::did","",50,[[["error",4]],["error",4]]],[11,"from","","",60,[[["method",3]],["methodref",4]]],[11,"from","identity::did::resolution","",72,[[["document",3]],["primaryresource",4]]],[11,"from","","",72,[[["url",3]],["primaryresource",4]]],[11,"from","","",74,[[["didkey",3]],["secondaryresource",4]]],[11,"from","identity::did","",58,[[],["methodident",4]]],[11,"from","","",60,[[["did",3]],["methodref",4]]],[11,"from","identity::did::resolution","",73,[[["primaryresource",4]],["resource",4]]],[11,"from","identity::did","",50,[[["error",4]],["error",4]]],[11,"from","identity::did::resolution","",74,[[["service",3]],["secondaryresource",4]]],[11,"from","identity::did","",58,[[],["methodident",4]]],[11,"from","","",59,[[],["methodquery",3]]],[11,"from","","",59,[[],["methodquery",3]]],[11,"from","identity::did::resolution","",74,[[["method",3]],["secondaryresource",4]]],[11,"from","identity::did","",59,[[],["methodquery",3]]],[11,"as_ref","","",56,[[],["did",3]]],[11,"as_ref","","",53,[[]]],[11,"as_ref","","",60,[[],["did",3]]],[11,"as_ref","","",52,[[],["did",3]]],[11,"set_signature","identity::did::verifiable","",78,[[["signature",3]]]],[11,"set_signature","identity::did","",49,[[["signature",3]]]],[11,"deserialize","","",54,[[],[["result",4],["orderedset",3]]]],[11,"deserialize","","",60,[[],[["methodref",4],["result",4]]]],[11,"deserialize","identity::did::resolution","",72,[[],[["result",4],["primaryresource",4]]]],[11,"deserialize","identity::did","",62,[[],[["result",4],["methodtype",4]]]],[11,"deserialize","","",52,[[],[["result",4],["service",3]]]],[11,"deserialize","","",53,[[],[["result",4],["didkey",3]]]],[11,"deserialize","identity::did::resolution","",71,[[],[["resolutionmetadata",3],["result",4]]]],[11,"deserialize","","",75,[[],[["result",4],["metadocument",3]]]],[11,"deserialize","identity::did::verifiable","",78,[[],[["properties",3],["result",4]]]],[11,"deserialize","identity::did","",57,[[],[["result",4],["methoddata",4]]]],[11,"deserialize","identity::did::resolution","",66,[[],[["dereference",3],["result",4]]]],[11,"deserialize","","",69,[[],[["result",4],["inputmetadata",3]]]],[11,"deserialize","","",67,[[],[["result",4],["documentmetadata",3]]]],[11,"deserialize","","",74,[[],[["secondaryresource",4],["result",4]]]],[11,"deserialize","identity::did","",49,[[],[["document",3],["result",4]]]],[11,"deserialize","identity::did::resolution","",73,[[],[["result",4],["resource",4]]]],[11,"deserialize","","",68,[[],[["result",4],["errorkind",4]]]],[11,"deserialize","","",70,[[],[["resolution",3],["result",4]]]],[11,"deserialize","identity::did","",56,[[],[["result",4],["method",3]]]],[11,"deref_mut","","",53,[[]]],[11,"deref_mut","identity::did::verifiable","",78,[[]]],[11,"partial_cmp","identity::did","",62,[[["methodtype",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",59,[[["methodquery",3]],[["ordering",4],["option",4]]]],[11,"lt","","",59,[[["methodquery",3]]]],[11,"le","","",59,[[["methodquery",3]]]],[11,"gt","","",59,[[["methodquery",3]]]],[11,"ge","","",59,[[["methodquery",3]]]],[11,"partial_cmp","","",54,[[["orderedset",3]],[["ordering",4],["option",4]]]],[11,"lt","","",54,[[["orderedset",3]]]],[11,"le","","",54,[[["orderedset",3]]]],[11,"gt","","",54,[[["orderedset",3]]]],[11,"ge","","",54,[[["orderedset",3]]]],[11,"partial_cmp","","",58,[[["methodident",4]],[["ordering",4],["option",4]]]],[11,"lt","","",58,[[["methodident",4]]]],[11,"le","","",58,[[["methodident",4]]]],[11,"gt","","",58,[[["methodident",4]]]],[11,"ge","","",58,[[["methodident",4]]]],[11,"partial_cmp","identity::did::resolution","",68,[[["errorkind",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","identity::did","",53,[[["didkey",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",61,[[["methodscope",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","identity::did::verifiable","",78,[[["properties",3]],[["ordering",4],["option",4]]]],[11,"lt","","",78,[[["properties",3]]]],[11,"le","","",78,[[["properties",3]]]],[11,"gt","","",78,[[["properties",3]]]],[11,"ge","","",78,[[["properties",3]]]],[11,"fmt","identity::did","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"signature_mut","","",49,[[],[["option",4],["signature",3]]]],[11,"signature_mut","identity::did::verifiable","",78,[[],[["option",4],["signature",3]]]],[11,"signature","","",78,[[],[["option",4],["signature",3]]]],[11,"signature","identity::did","",49,[[],[["option",4],["signature",3]]]],[11,"default","identity::iota","",96,[[],["properties",3]]],[11,"default","","",101,[[],["messageid",3]]],[11,"default","","",102,[[],["messageindex",3]]],[11,"default","","",81,[[],["diffchain",3]]],[11,"default","","",94,[[],["iotadocumentbuilder",3]]],[11,"default","","",85,[[],["network",4]]],[11,"default","","",84,[[],["clientbuilder",3]]],[11,"deref","","",91,[[]]],[11,"deref","","",102,[[]]],[11,"deref","","",93,[[]]],[11,"cmp","","",91,[[["iotadid",3]],["ordering",4]]],[11,"cmp","","",101,[[["messageid",3]],["ordering",4]]],[11,"cmp","","",85,[[["network",4]],["ordering",4]]],[11,"deserialize","","",95,[[],[["documentdiff",3],["result",4]]]],[11,"deserialize","","",91,[[],[["iotadid",3],["result",4]]]],[11,"deserialize","","",101,[[],[["result",4],["messageid",3]]]],[11,"deserialize","","",93,[[],[["iotadocument",3],["result",4]]]],[11,"deserialize","","",96,[[],[["properties",3],["result",4]]]],[11,"fmt","","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",96,[[["properties",3]]]],[11,"ne","","",96,[[["properties",3]]]],[11,"eq","","",93,[[["iotadocument",3]]]],[11,"ne","","",93,[[["iotadocument",3]]]],[11,"eq","","",85,[[["network",4]]]],[11,"eq","","",91,[[["iotadid",3]]]],[11,"ne","","",91,[[["iotadid",3]]]],[11,"eq","","",101,[[["messageid",3]]]],[11,"ne","","",101,[[["messageid",3]]]],[11,"eq","","",95,[[["documentdiff",3]]]],[11,"ne","","",95,[[["documentdiff",3]]]],[11,"eq","","",89,[[["documentvalidation",3]]]],[11,"ne","","",89,[[["documentvalidation",3]]]],[11,"eq","","",101,[[]]],[11,"eq","","",93,[[["document",3]]]],[11,"eq","","",87,[[["credentialvalidation",3]]]],[11,"ne","","",87,[[["credentialvalidation",3]]]],[11,"eq","","",91,[[["did",3]]]],[11,"eq","","",92,[[["segments",3]]]],[11,"ne","","",92,[[["segments",3]]]],[11,"eq","","",90,[[["presentationvalidation",3]]]],[11,"ne","","",90,[[["presentationvalidation",3]]]],[11,"from_str","","",91,[[],[["iotadid",3],["result",4]]]],[11,"signature","","",95,[[],[["option",4],["signature",3]]]],[11,"signature","","",93,[[],[["option",4],["signature",3]]]],[11,"try_from","","",91,[[["did",3]],[["iotadid",3],["result",4]]]],[11,"try_from","","",93,[[["document",3],["btreemap",3]],[["result",4],["iotadocument",3]]]],[11,"signature_mut","","",93,[[],[["option",4],["signature",3]]]],[11,"signature_mut","","",95,[[],[["option",4],["signature",3]]]],[11,"resolve_method","","",93,[[["methodquery",3]],[["methodwrap",3],["option",4]]]],[11,"set_signature","","",93,[[["signature",3]]]],[11,"set_signature","","",95,[[["signature",3]]]],[11,"clone","","",102,[[],["messageindex",3]]],[11,"clone","","",84,[[],["clientbuilder",3]]],[11,"clone","","",87,[[],["credentialvalidation",3]]],[11,"clone","","",101,[[],["messageid",3]]],[11,"clone","","",92,[[],["segments",3]]],[11,"clone","","",94,[[],["iotadocumentbuilder",3]]],[11,"clone","","",91,[[],["iotadid",3]]],[11,"clone","","",96,[[],["properties",3]]],[11,"clone","","",88,[[],["credentialvalidator",3]]],[11,"clone","","",85,[[],["network",4]]],[11,"clone","","",89,[[],["documentvalidation",3]]],[11,"clone","","",93,[[],["iotadocument",3]]],[11,"clone","","",90,[[],["presentationvalidation",3]]],[11,"clone","","",95,[[],["documentdiff",3]]],[11,"clone","","",83,[[],["client",3]]],[11,"hash","","",91,[[]]],[11,"hash","","",85,[[]]],[11,"source","","",97,[[],[["option",4],["error",8]]]],[11,"serialize","","",101,[[],["result",4]]],[11,"serialize","","",89,[[],["result",4]]],[11,"serialize","","",91,[[],["result",4]]],[11,"serialize","","",96,[[],["result",4]]],[11,"serialize","","",93,[[],["result",4]]],[11,"serialize","","",95,[[],["result",4]]],[11,"serialize","","",90,[[],["result",4]]],[11,"serialize","","",87,[[],["result",4]]],[11,"from_iter","","",102,[[],["messageindex",3]]],[11,"from","","",97,[[["error",4]],["error",4]]],[11,"from","","",97,[[["error",4]],["error",4]]],[11,"from","identity::did","",49,[[["iotadocument",3]],[["document",3],["properties",3]]]],[11,"from","identity::iota","",85,[[["network",4]],["network",4]]],[11,"from","identity::did","",65,[[["iotadid",3]],["did",3]]],[11,"from","identity::iota","",93,[[["document",3],["properties",3]],["iotadocument",3]]],[11,"from","","",101,[[["string",3]],["messageid",3]]],[11,"from","","",97,[[["error",4]],["error",4]]],[11,"from","","",97,[[["error",4]],["error",4]]],[11,"from","","",97,[[["error",4]],["error",4]]],[11,"from","","",97,[[["error",4]],["error",4]]],[11,"from","","",97,[[["error",4]],["error",4]]],[11,"is_supported","","",83,[[["did",3]]]],[11,"read","","",83,[[["did",3],["inputmetadata",3]],[["pin",3],["box",3]]]],[11,"as_ref","","",91,[[]]],[11,"as_ref","","",91,[[],["did",3]]],[11,"message_id","","",95,[[],["messageid",3]]],[11,"set_message_id","","",95,[[["messageid",3]]]],[11,"previous_message_id","","",95,[[],["messageid",3]]],[11,"set_previous_message_id","","",95,[[["messageid",3]]]],[11,"message_id","","",93,[[],["messageid",3]]],[11,"set_message_id","","",93,[[["messageid",3]]]],[11,"previous_message_id","","",93,[[],["messageid",3]]],[11,"set_previous_message_id","","",93,[[["messageid",3]]]],[11,"deref_mut","","",102,[[]]],[11,"partial_cmp","","",91,[[["iotadid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",91,[[["iotadid",3]]]],[11,"le","","",91,[[["iotadid",3]]]],[11,"gt","","",91,[[["iotadid",3]]]],[11,"ge","","",91,[[["iotadid",3]]]],[11,"partial_cmp","","",85,[[["network",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",101,[[["messageid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",101,[[["messageid",3]]]],[11,"le","","",101,[[["messageid",3]]]],[11,"gt","","",101,[[["messageid",3]]]],[11,"ge","","",101,[[["messageid",3]]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"get","identity::core","Index into a JSON array or map. A string index can be used…",1,[[],[["value",4],["option",4]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",1,[[],[["option",4],["value",4]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",1,[[]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",1,[[],[["option",4],["map",3]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",1,[[],[["map",3],["option",4]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",1,[[]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",1,[[],[["vec",3],["option",4]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",1,[[],[["option",4],["vec",3]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",1,[[]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",1,[[],["option",4]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",1,[[]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",1,[[]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",1,[[]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",1,[[]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",1,[[],["option",4]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",1,[[],["option",4]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",1,[[],["option",4]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",1,[[]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",1,[[],["option",4]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",1,[[]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",1,[[],["option",4]]],[11,"pointer","","Looks up a value by a JSON Pointer.",1,[[],[["value",4],["option",4]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",1,[[],[["option",4],["value",4]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",1,[[],["value",4]]],[11,"len","","Returns the number of elements in the collection",2,[[]]],[11,"is_empty","","Returns `true` if the collection is empty",2,[[]]],[11,"get","","Returns a reference to the element at the given index.",2,[[],["option",4]]],[11,"get_mut","","Returns a mutable reference to the element at the given…",2,[[],["option",4]]],[11,"contains","","Returns `true` if the collection contains the given value.",2,[[]]],[11,"push","","Adds a new value to the collection.",2,[[]]],[11,"iter","","Returns an `Iterator` that yields items from the collection.",2,[[]]],[11,"as_slice","","Returns a reference to the contents as a slice.",2,[[]]],[11,"into_vec","","Consumes the [`OneOrMany`] and returns the contents as a…",2,[[],["vec",3]]],[11,"parse","","Parses a [`Timestamp`] from the provided input string.",3,[[],[["result",4],["timestamp",3],["error",4]]]],[11,"now","","Creates a new [`Timestamp`] with the current date and time.",3,[[],["timestamp",3]]],[11,"to_unix","","Returns the [`Timestamp`] as a Unix timestamp.",3,[[]]],[11,"to_rfc3339","","Returns the [`Timestamp`] as an RFC 3339 `String`.",3,[[],["string",3]]],[11,"parse","","Parses an absolute [`Url`] from the given input string.",4,[[],[["url",3],["result",4],["error",4]]]],[11,"into_string","","Consumes the [`Url`] and returns the value as a `String`.",4,[[],["string",3]]],[11,"join","","Parses the given input string as a [`Url`], with `self` as…",4,[[],[["url",3],["result",4],["error",4]]]],[11,"diff","identity::core::diff","",10,[[],["error",4]]],[11,"merge","","",10,[[],["error",4]]],[11,"convert","","",10,[[],["error",4]]],[11,"from_slice","identity::crypto::merkle_tree","Creates a new [`struct@Hash`] from a slice.",19,[[],[["hash",3],["option",4]]]],[11,"leaves","","Returns the number of leaf nodes in the tree.",20,[[]]],[11,"height","","Returns the height of the tree.",20,[[]]],[11,"root","","Returns the root hash of the tree.",20,[[],["hash",3]]],[11,"data","","Returns a slice of the leaf nodes in the tree.",20,[[]]],[11,"layer","","Returns a slice of nodes at the specified `height`.",20,[[]]],[11,"from_leaves","","Creates a new [`MTree`] from a slice of pre-hashed data.",20,[[],[["option",4],["mtree",3]]]],[11,"proof","","Generates a proof-of-inclusion for the leaf node at the…",20,[[],[["proof",3],["option",4]]]],[11,"verify","","Verifies the computed root of `proof` with the root hash…",20,[[["hash",3],["proof",3]]]],[11,"get","","Returns the [`struct@Hash`] of the node.",21,[[],["hash",3]]],[11,"hash","","Computes the parent hash of `self` and `other` using a…",21,[[["hash",3]],["hash",3]]],[11,"hash_with","","Computes the parent hash of `self` and `other` using the…",21,[[["hash",3]],["hash",3]]],[11,"new","","Creates a new [`Proof`] from a boxed slice of nodes.",22,[[["global",3],["box",3]],["proof",3]]],[11,"nodes","","Returns the nodes as a slice.",22,[[]]],[11,"verify","","Verifies the computed root of `self` with the given `root`…",22,[[["hash",3],["hash",3]]]],[11,"root","","Computes the root hash from `target` using a default digest.",22,[[["hash",3]],["hash",3]]],[11,"root_with","","Computes the root hash from `target` using the given…",22,[[["hash",3]],["hash",3]]],[11,"new_ed25519","identity::crypto","Creates a new Ed25519 [`KeyPair`].",23,[[],[["error",4],["keypair",3],["result",4]]]],[11,"new","","Creates a new [`KeyPair`] from the given keys.",23,[[["public",4],["key",3],["secret",4],["key",3]],["keypair",3]]],[11,"public","","Returns a reference to the [`PublicKey`] object.",23,[[],["key",3]]],[11,"secret","","Returns a reference to the [`SecretKey`] object.",23,[[],["key",3]]],[18,"NAME","","The name of the signature suite.",104,null],[11,"new_keypair","","Generates a new [`KeyPair`] appropriate for this signature…",104,[[],["keypair",3]]],[11,"sign_data","","Signs the given `data` with `secret` and returns a digital…",104,[[],[["error",4],["signaturedata",4],["result",4]]]],[11,"verify_data","","Verifies the authenticity of `data` using `signature` and…",104,[[["signaturedata",4]],[["error",4],["result",4]]]],[11,"new","","Creates a new [`Signature`].",28,[[["signatureoptions",3]],["signature",3]]],[11,"type_","","Returns the `type` property of the signature.",28,[[]]],[11,"data","","Returns a reference to the signature `data`.",28,[[],["signaturevalue",3]]],[11,"data_mut","","Returns a mutable reference to the signature `data`.",28,[[],["signaturevalue",3]]],[11,"set_data","","Sets the signature `data` to the given `value`.",28,[[["signaturedata",4]]]],[11,"clear_data","","Clears the current signature value - all other properties…",28,[[]]],[11,"hide_value","","Flag the signature value so it is ignored during…",28,[[]]],[11,"show_value","","Restore the signature value state so serialization behaves…",28,[[]]],[11,"verify","","Verifies `self` with the given signature `suite` and…",28,[[],[["error",4],["result",4]]]],[11,"is_none","","Returns `true` if the signature data is a `None` type.",29,[[]]],[11,"is_jws","","Returns `true` if the signature data is a `Jws` type.",29,[[]]],[11,"is_proof","","Returns `true` if the signature data is a `Proof` type.",29,[[]]],[11,"is_signature","","Returns `true` if the signature data is a `Signature` type.",29,[[]]],[11,"as_str","","Returns the signature data as a string slice.",29,[[]]],[11,"try_jws","","Returns the `Jws` type signature data as a string slice.",29,[[],["option",4]]],[11,"try_proof","","Returns the `Proof` type signature data as a string slice.",29,[[],["option",4]]],[11,"try_signature","","Returns the `Signature` type signature data as a string…",29,[[],["option",4]]],[11,"new","","Creates a new [`SignatureOptions`] instance with the given…",30,[[],["signatureoptions",3]]],[11,"with_purpose","","Creates a new [`SignatureOptions`] instance with the given…",30,[[],["signatureoptions",3]]],[11,"new","","Creates a new [`SignatureValue`].",31,[[],["signaturevalue",3]]],[11,"is_none","","Returns `true` if the value is empty.",31,[[]]],[11,"set","","Sets the value of the underlying [`SignatureData`].",31,[[["signaturedata",4]]]],[11,"clear","","Clears the value of the underlying [`SignatureData`].",31,[[]]],[11,"hide","","Flag the signature value as \\\"hidden\\\".",31,[[]]],[11,"show","","Flag the signature value as \\\"visible\\\".",31,[[]]],[11,"new","identity::credential","Creates a new `CredentialBuilder`.",34,[[],["credentialbuilder",3]]],[11,"context","","Adds a value to the `Credential` context set.",34,[[],["credentialbuilder",3]]],[11,"id","","Sets the value of the `Credential` `id`.",34,[[["url",3]],["credentialbuilder",3]]],[11,"type_","","Adds a value to the `Credential` type set.",34,[[],["credentialbuilder",3]]],[11,"subject","","Adds a value to the `credentialSubject` set.",34,[[["subject",3]],["credentialbuilder",3]]],[11,"issuer","","Sets the value of the `Credential` `issuer`.",34,[[],["credentialbuilder",3]]],[11,"issuance_date","","Sets the value of the `Credential` `issuanceDate`.",34,[[["timestamp",3]],["credentialbuilder",3]]],[11,"expiration_date","","Sets the value of the `Credential` `expirationDate`.",34,[[["timestamp",3]],["credentialbuilder",3]]],[11,"status","","Adds a value to the `credentialStatus` set.",34,[[["status",3]],["credentialbuilder",3]]],[11,"schema","","Adds a value to the `credentialSchema` set.",34,[[["schema",3]],["credentialbuilder",3]]],[11,"refresh","","Adds a value to the `refreshService` set.",34,[[["refresh",3]],["credentialbuilder",3]]],[11,"policy","","Adds a value to the `termsOfUse` set.",34,[[["policy",3]],["credentialbuilder",3]]],[11,"evidence","","Adds a value to the `evidence` set.",34,[[["evidence",3]],["credentialbuilder",3]]],[11,"non_transferable","","Sets the value of the `Credential` `nonTransferable`…",34,[[],["credentialbuilder",3]]],[11,"build","","Returns a new `Credential` based on the…",34,[[],[["credential",3],["result",4],["error",4]]]],[11,"property","","Adds a new custom property to the `Credential`.",34,[[],[["btreemap",3],["credentialbuilder",3]]]],[11,"properties","","Adds a series of custom properties to the `Credential`.",34,[[],[["btreemap",3],["credentialbuilder",3]]]],[11,"base_context","","Returns the base JSON-LD context for `Credential`s.",35,[[],["context",4]]],[11,"base_type","","Returns the base type for `Credential`s.",35,[[]]],[11,"builder","","Creates a new `CredentialBuilder` to configure a…",35,[[],["credentialbuilder",3]]],[11,"from_builder","","Returns a new `Credential` based on the…",35,[[["credentialbuilder",3]],[["credential",3],["result",4],["error",4]]]],[11,"check_structure","","Validates the semantic structure of the `Credential`.",35,[[],[["error",4],["result",4]]]],[11,"sign","","Creates a new [`VerifiableCredential`] by signing `self`…",35,[[["key",3],["document",3]],[["result",4],["verifiablecredential",3],["error",4]]]],[11,"new","","Creates a new [`Evidence`] instance.",36,[[],["evidence",3]]],[11,"with_id","","Creates a new [`Evidence`] instance with the given `id`.",36,[[],["evidence",3]]],[11,"with_properties","","Creates a new [`Evidence`] instance with the given…",36,[[["btreemap",3],["string",3],["value",4]],["evidence",3]]],[11,"with_id_and_properties","","Creates a new [`Evidence`] instance with the given `id`…",36,[[["btreemap",3],["string",3],["value",4]],["evidence",3]]],[11,"url","","Returns a reference to the credential issuer Url.",37,[[],["url",3]]],[11,"new","","Creates a new [`Policy`] instance.",38,[[],["policy",3]]],[11,"with_id","","Creates a new [`Policy`] instance with the given `id`.",38,[[["url",3]],["policy",3]]],[11,"with_properties","","Creates a new [`Policy`] instance with the given…",38,[[["btreemap",3],["string",3],["value",4]],["policy",3]]],[11,"with_id_and_properties","","Creates a new [`Policy`] instance with the given `id` and…",38,[[["string",3],["value",4],["btreemap",3],["url",3]],["policy",3]]],[11,"new","","Creates a new [`Refresh`].",39,[[["url",3]],["refresh",3]]],[11,"with_properties","","Creates a new [`Refresh`] with the given `properties`.",39,[[["string",3],["value",4],["btreemap",3],["url",3]],["refresh",3]]],[11,"new","","Creates a new [`Schema`].",40,[[["url",3]],["schema",3]]],[11,"with_properties","","Creates a new [`Schema`] with the given `properties`.",40,[[["string",3],["value",4],["btreemap",3],["url",3]],["schema",3]]],[11,"new","","Creates a new [`Status`].",41,[[["url",3]],["status",3]]],[11,"with_properties","","Creates a new [`Status`] with the given `properties`.",41,[[["string",3],["value",4],["btreemap",3],["url",3]],["status",3]]],[11,"new","","Creates a new [`Subject`].",42,[[],["subject",3]]],[11,"with_id","","Creates a new [`Subject`] with the given `id`.",42,[[["url",3]],["subject",3]]],[11,"with_properties","","Creates a new [`Subject`] with the given `properties`.",42,[[["btreemap",3],["string",3],["value",4]],["subject",3]]],[11,"with_id_and_properties","","Creates a new [`Subject`] with the given `id` and…",42,[[["string",3],["value",4],["btreemap",3],["url",3]],["subject",3]]],[11,"new","","Creates a new `VerifiableCredential`.",43,[[["credential",3]],["verifiablecredential",3]]],[11,"proof","","Returns a reference to the `VerifiableCredential` proof.",43,[[],["oneormany",4]]],[11,"proof_mut","","Returns a mutable reference to the `VerifiableCredential`…",43,[[],["oneormany",4]]],[11,"new","","Creates a new `PresentationBuilder`.",45,[[],["presentationbuilder",3]]],[11,"context","","Adds a value to the `Presentation` context set.",45,[[],["presentationbuilder",3]]],[11,"id","","Sets the value of the `Presentation` `id`.",45,[[["url",3]],["presentationbuilder",3]]],[11,"type_","","Adds a value to the `Presentation` type set.",45,[[],["presentationbuilder",3]]],[11,"credential","","Adds a value to the `verifiableCredential` set.",45,[[["verifiablecredential",3]],["presentationbuilder",3]]],[11,"holder","","Sets the value of the `Credential` `holder`.",45,[[["url",3]],["presentationbuilder",3]]],[11,"refresh","","Adds a value to the `refreshService` set.",45,[[["refresh",3]],["presentationbuilder",3]]],[11,"policy","","Adds a value to the `termsOfUse` set.",45,[[["policy",3]],["presentationbuilder",3]]],[11,"build","","Returns a new `Presentation` based on the…",45,[[],[["result",4],["presentation",3],["error",4]]]],[11,"property","","Adds a new custom property to the `Presentation`.",45,[[],[["btreemap",3],["presentationbuilder",3]]]],[11,"properties","","Adds a series of custom properties to the `Presentation`.",45,[[],[["btreemap",3],["presentationbuilder",3]]]],[11,"base_context","","Returns the base JSON-LD context for `Presentation`s.",46,[[],["context",4]]],[11,"base_type","","Returns the base type for `Presentation`s.",46,[[]]],[11,"builder","","Creates a `PresentationBuilder` to configure a new…",46,[[],["presentationbuilder",3]]],[11,"from_builder","","Returns a new `Presentation` based on the…",46,[[["presentationbuilder",3]],[["result",4],["presentation",3],["error",4]]]],[11,"check_structure","","Validates the semantic structure of the `Presentation`.",46,[[],[["error",4],["result",4]]]],[11,"new","","Creates a new `VerifiablePresentation`.",47,[[["presentation",3]],["verifiablepresentation",3]]],[11,"proof","","Returns a reference to the `VerifiablePresentation` proof.",47,[[],["oneormany",4]]],[11,"proof_mut","","Returns a mutable reference to the…",47,[[],["oneormany",4]]],[11,"new","identity::did","Creates a new `DocumentBuilder`.",48,[[],["documentbuilder",3]]],[11,"id","","Sets the `id` value of the generated `Document`.",48,[[["did",3]],["documentbuilder",3]]],[11,"controller","","Sets the `controller` value of the generated `Document`.",48,[[["did",3]],["documentbuilder",3]]],[11,"also_known_as","","Adds a value to the `alsoKnownAs` set of the generated…",48,[[["url",3]],["documentbuilder",3]]],[11,"verification_method","","Adds a value to the `verificationMethod` set of the…",48,[[["method",3]],["documentbuilder",3]]],[11,"authentication","","Adds a value to the `authentication` set of the generated…",48,[[],["documentbuilder",3]]],[11,"assertion_method","","Adds a value to the `assertionMethod` set of the generated…",48,[[],["documentbuilder",3]]],[11,"key_agreement","","Adds a value to the `keyAgreement` set of the generated…",48,[[],["documentbuilder",3]]],[11,"capability_delegation","","Adds a value to the `capabilityDelegation` set of the…",48,[[],["documentbuilder",3]]],[11,"capability_invocation","","Adds a value to the `capabilityInvocation` set of the…",48,[[],["documentbuilder",3]]],[11,"service","","Adds a value to the `service` set of the generated…",48,[[["service",3]],["documentbuilder",3]]],[11,"build","","Returns a new `Document` based on the `DocumentBuilder`…",48,[[],[["error",4],["result",4],["document",3]]]],[11,"builder","","Creates a `DocumentBuilder` to configure a new `Document`.",49,[[],["documentbuilder",3]]],[11,"from_builder","","Returns a new `Document` based on the `DocumentBuilder`…",49,[[["documentbuilder",3]],[["error",4],["result",4],["document",3]]]],[11,"id","","Returns a reference to the `Document` id.",49,[[],["did",3]]],[11,"id_mut","","Returns a mutable reference to the `Document` id.",49,[[],["did",3]]],[11,"controller","","Returns a reference to the `Document` controller.",49,[[],[["option",4],["did",3]]]],[11,"controller_mut","","Returns a mutable reference to the `Document` controller.",49,[[],[["did",3],["option",4]]]],[11,"also_known_as","","Returns a reference to the `Document` alsoKnownAs set.",49,[[]]],[11,"also_known_as_mut","","Returns a mutable reference to the `Document` alsoKnownAs…",49,[[],["vec",3]]],[11,"verification_method","","Returns a reference to the `Document` verificationMethod…",49,[[],["orderedset",3]]],[11,"verification_method_mut","","Returns a mutable reference to the `Document`…",49,[[],["orderedset",3]]],[11,"authentication","","Returns a reference to the `Document` authentication set.",49,[[],["orderedset",3]]],[11,"authentication_mut","","Returns a mutable reference to the `Document`…",49,[[],["orderedset",3]]],[11,"assertion_method","","Returns a reference to the `Document` assertionMethod set.",49,[[],["orderedset",3]]],[11,"assertion_method_mut","","Returns a mutable reference to the `Document`…",49,[[],["orderedset",3]]],[11,"key_agreement","","Returns a reference to the `Document` keyAgreement set.",49,[[],["orderedset",3]]],[11,"key_agreement_mut","","Returns a mutable reference to the `Document` keyAgreement…",49,[[],["orderedset",3]]],[11,"capability_delegation","","Returns a reference to the `Document` capabilityDelegation…",49,[[],["orderedset",3]]],[11,"capability_delegation_mut","","Returns a mutable reference to the `Document`…",49,[[],["orderedset",3]]],[11,"capability_invocation","","Returns a reference to the `Document` capabilityInvocation…",49,[[],["orderedset",3]]],[11,"capability_invocation_mut","","Returns a mutable reference to the `Document`…",49,[[],["orderedset",3]]],[11,"service","","Returns a reference to the `Document` service set.",49,[[],["orderedset",3]]],[11,"service_mut","","Returns a mutable reference to the `Document` service set.",49,[[],["orderedset",3]]],[11,"properties","","Returns a reference to the custom `Document` properties.",49,[[]]],[11,"properties_mut","","Returns a mutable reference to the custom `Document`…",49,[[]]],[11,"map","","Maps `Document<T>` to `Document<U>` by applying a function…",49,[[],["document",3]]],[11,"try_map","","A fallible version of `Document::map(..)`.",49,[[],[["document",3],["result",4]]]],[11,"resolve","","Finds and returns the first verification `Method` matching…",49,[[],[["option",4],["methodwrap",3]]]],[11,"try_resolve","","Finds and returns the first verification `Method` matching…",49,[[],[["error",4],["result",4],["methodwrap",3]]]],[11,"resolve_bytes","","",49,[[],[["option",4],["vec",3]]]],[11,"try_resolve_bytes","","",49,[[],[["error",4],["result",4],["vec",3]]]],[11,"resolve_options","","",49,[[],[["result",4],["signatureoptions",3],["error",4]]]],[11,"into_verifiable","","",49,[[],[["document",3],["properties",3]]]],[11,"into_verifiable2","","",49,[[["signature",3]],[["document",3],["properties",3]]]],[11,"proof","","",49,[[],[["option",4],["signature",3]]]],[11,"proof_mut","","",49,[[],[["option",4],["signature",3]]]],[11,"set_proof","","",49,[[["signature",3]]]],[11,"new","","Creates a new `ServiceBuilder`.",51,[[],["servicebuilder",3]]],[11,"id","","Sets the `id` value of the generated `Service`.",51,[[["did",3]],["servicebuilder",3]]],[11,"type_","","Sets the `type` value of the generated `Service`.",51,[[],["servicebuilder",3]]],[11,"service_endpoint","","Sets the `serviceEndpoint` value of the generated `Service`.",51,[[["url",3]],["servicebuilder",3]]],[11,"build","","Returns a new `Service` based on the `ServiceBuilder`…",51,[[],[["result",4],["service",3],["error",4]]]],[11,"builder","","Creates a `ServiceBuilder` to configure a new `Service`.",52,[[],["servicebuilder",3]]],[11,"from_builder","","Returns a new `Service` based on the `ServiceBuilder`…",52,[[["servicebuilder",3]],[["result",4],["service",3],["error",4]]]],[11,"id","","Returns a reference to the `Service` id.",52,[[],["did",3]]],[11,"id_mut","","Returns a mutable reference to the `Service` id.",52,[[],["did",3]]],[11,"type_","","Returns a reference to the `Service` type.",52,[[]]],[11,"type_mut","","Returns a mutable reference to the `Service` type.",52,[[],["string",3]]],[11,"service_endpoint","","Returns a reference to the `Service` endpoint.",52,[[],["url",3]]],[11,"service_endpoint_mut","","Returns a mutable reference to the `Service` endpoint.",52,[[],["url",3]]],[11,"properties","","Returns a reference to the custom `Service` properties.",52,[[]]],[11,"properties_mut","","Returns a mutable reference to the custom `Service`…",52,[[]]],[11,"new","","Create a new `DIDKey`.",53,[[],["didkey",3]]],[11,"into_inner","","Consumes the `DIDKey` and returns the inner `T`.",53,[[]]],[11,"as_did","","Returns a reference to the `DID`.",53,[[],["did",3]]],[11,"new","","Creates a new `OrderedSet`.",54,[[],["orderedset",3]]],[11,"with_capacity","","Creates a new `OrderedSet` with the specified capacity.",54,[[],["orderedset",3]]],[11,"len","","Returns the number of elements in the `OrderedSet`.",54,[[]]],[11,"is_empty","","Returns `true` if the `OrderedSet` contains no elements.",54,[[]]],[11,"iter","","Returns an iterator over the slice of elements.",54,[[],["iter",3]]],[11,"head","","Returns the first element in the set, or `None` if the set…",54,[[],["option",4]]],[11,"head_mut","","Returns a mutable referece to the first element in the…",54,[[],["option",4]]],[11,"tail","","Returns the last element in the set, or `None` if the set…",54,[[],["option",4]]],[11,"tail_mut","","Returns a mutable referece the last element in the set, or…",54,[[],["option",4]]],[11,"as_slice","","Returns a slice containing all elements in the `OrderedSet`.",54,[[]]],[11,"into_vec","","Consumes the `OrderedSet` and returns the elements as a…",54,[[],["vec",3]]],[11,"clear","","Clears the `OrderedSet`, removing all values.",54,[[]]],[11,"contains","","Returns `true` if the `OrderedSet` contains the given value.",54,[[]]],[11,"append","","Adds a new value to the end of the `OrderedSet`; returns…",54,[[]]],[11,"prepend","","Adds a new value to the start of the `OrderedSet`; returns…",54,[[]]],[11,"replace","","Replaces a `current` value with the given `update` value;…",54,[[]]],[11,"update","","Updates an existing value in the `OrderedSet`; returns…",54,[[]]],[11,"new","","Creates a new `MethodBuilder`.",55,[[],["methodbuilder",3]]],[11,"id","","Sets the `id` value of the generated verification `Method`.",55,[[["did",3]],["methodbuilder",3]]],[11,"controller","","Sets the `controller` value of the generated verification…",55,[[["did",3]],["methodbuilder",3]]],[11,"key_type","","Sets the `type` value of the generated verification…",55,[[["methodtype",4]],["methodbuilder",3]]],[11,"key_data","","Sets the `data` value of the generated verification…",55,[[["methoddata",4]],["methodbuilder",3]]],[11,"build","","Returns a new `Method` based on the `MethodBuilder`…",55,[[],[["error",4],["result",4],["method",3]]]],[11,"builder","","Creates a `MethodBuilder` to configure a new `Method`.",56,[[],["methodbuilder",3]]],[11,"from_builder","","Returns a new `Method` based on the `MethodBuilder`…",56,[[["methodbuilder",3]],[["error",4],["result",4],["method",3]]]],[11,"id","","Returns a reference to the verification `Method` id.",56,[[],["did",3]]],[11,"id_mut","","Returns a mutable reference to the verification `Method` id.",56,[[],["did",3]]],[11,"controller","","Returns a reference to the verification `Method` controller.",56,[[],["did",3]]],[11,"controller_mut","","Returns a mutable reference to the verification `Method`…",56,[[],["did",3]]],[11,"key_type","","Returns a reference to the verification `Method` type.",56,[[],["methodtype",4]]],[11,"key_type_mut","","Returns a mutable reference to the verification `Method`…",56,[[],["methodtype",4]]],[11,"key_data","","Returns a reference to the verification `Method` data.",56,[[],["methoddata",4]]],[11,"key_data_mut","","Returns a mutable reference to the verification `Method`…",56,[[],["methoddata",4]]],[11,"properties","","Returns a reference to the custom verification `Method`…",56,[[]]],[11,"properties_mut","","Returns a mutable reference to the custom verification…",56,[[]]],[11,"try_into_fragment","","",56,[[],[["string",3],["error",4],["result",4]]]],[11,"new_b16","","Creates a new `MethodData` variant with base16-encoded…",57,[[],["methoddata",4]]],[11,"new_b58","","Creates a new `MethodData` variant with base58-encoded…",57,[[],["methoddata",4]]],[11,"try_decode","","Returns a `Vec<u8>` containing the decoded bytes of the…",57,[[],[["error",4],["result",4],["vec",3]]]],[11,"matches","","Returns a `bool` indicating if the given `DID` matches the…",58,[[["did",3]]]],[11,"new","","Creates a new `MethodQuery`.",59,[[],["methodquery",3]]],[11,"with_scope","","Creates a new `MethodQuery` with the given `MethodScope`.",59,[[["methodscope",4]],["methodquery",3]]],[11,"id","","Returns a reference to the `MethodRef` id.",60,[[],["did",3]]],[11,"controller","","Returns a reference to the `MethodRef` controller.",60,[[],[["option",4],["did",3]]]],[11,"is_embedded","","Returns a `bool` indicating if the `MethodRef` is an…",60,[[]]],[11,"is_referred","","Returns a `bool` indicating if the `MethodRef` is a `DID`…",60,[[]]],[11,"try_into_embedded","","Returns the inner `Method` if this is an embedded…",60,[[],[["result",4],["methodref",4],["method",3]]]],[11,"try_into_referenced","","Returns the inner `Method` if this is an referenced…",60,[[],[["methodref",4],["did",3],["result",4]]]],[11,"as_str","","",61,[[]]],[11,"as_str","","",62,[[]]],[11,"index","","Returns the index of the method within the verification…",63,[[]]],[11,"scope","","Returns the scope of the resolved verification method.",63,[[],["methodscope",4]]],[11,"into_method","","Consumes the `MethodWrap` and returns a reference to the…",63,[[],["method",3]]],[11,"as_str","","",64,[[]]],[18,"SCHEME","","The URL scheme for Decentralized Identifiers.",65,null],[11,"parse","","Parses a [`DID`] from the provided `input`.",65,[[],[["did",3],["result",4],["error",4]]]],[11,"inspect","","Returns a wrapped `DID` with a more detailed `Debug`…",65,[[],["inspect",3]]],[11,"as_str","","Returns the serialized [`DID`].",65,[[]]],[11,"into_string","","Consumes the [`DID`] and returns the serialization.",65,[[],["string",3]]],[11,"scheme","","Returns the [`DID`] scheme. See [`DID::SCHEME`].",65,[[]]],[11,"authority","","Returns the [`DID`] authority.",65,[[]]],[11,"method","","Returns the [`DID`] method name.",65,[[]]],[11,"method_id","","Returns the [`DID`] method-specific ID.",65,[[]]],[11,"path","","Returns the [`DID`] path.",65,[[]]],[11,"query","","Returns the [`DID`] method query, if any.",65,[[],["option",4]]],[11,"fragment","","Returns the [`DID`] method fragment, if any.",65,[[],["option",4]]],[11,"query_pairs","","Parses the [`DID`] query and returns an iterator of (key,…",65,[[],["parse",3]]],[11,"set_method","","Change the method of the [`DID`].",65,[[]]],[11,"set_method_id","","Change the method-specific-id of the [`DID`].",65,[[]]],[11,"set_path","","Change the path of the [`DID`].",65,[[]]],[11,"set_query","","Change the query of the [`DID`].",65,[[["option",4]]]],[11,"set_fragment","","Change the fragment of the [`DID`].",65,[[["option",4]]]],[11,"join","","Creates a new [`DID`] by joining `self` with the relative…",65,[[],[["did",3],["result",4],["error",4]]]],[11,"new","identity::did::resolution","Creates a new [`Dereference`].",66,[[],["dereference",3]]],[11,"new","","Creates a new [`DocumentMetadata`].",67,[[],["documentmetadata",3]]],[11,"new","","Creates a new [`InputMetadata`].",69,[[],["inputmetadata",3]]],[11,"new","","Creates a new [`Resolution`].",70,[[],["resolution",3]]],[11,"new","","Creates a new [`ResolutionMetadata`].",71,[[],["resolutionmetadata",3]]],[11,"new","identity::did::verifiable","",77,[[],["ldsuite",3]]],[11,"with_methods","","",77,[[],["ldsuite",3]]],[11,"sign","","",77,[[["signatureoptions",3]],[["result",4],["error",4]]]],[11,"verify","","",77,[[],[["result",4],["error",4]]]],[11,"verify_data","","",77,[[],[["result",4],["error",4]]]],[11,"new","","",78,[[],["properties",3]]],[11,"with_proof","","",78,[[["signature",3]],["properties",3]]],[11,"proof","","",78,[[],[["option",4],["signature",3]]]],[11,"proof_mut","","",78,[[],[["option",4],["signature",3]]]],[11,"set_proof","","",78,[[["signature",3]]]],[11,"try_from_messages","identity::iota","Constructs a new `AuthChain` from a slice of `Message`s.",80,[[["iotadid",3]],[["result",4],["authchain",3],["error",4]]]],[11,"new","","Creates a new `AuthChain` with the given `IotaDocument` as…",80,[[["iotadocument",3]],[["result",4],["authchain",3],["error",4]]]],[11,"current","","Returns a reference to the latest document in the auth…",80,[[],["iotadocument",3]]],[11,"current_mut","","Returns a mutable reference to the latest document in the…",80,[[],["iotadocument",3]]],[11,"current_message_id","","Returns the Tangle message Id of the latest auth document.",80,[[],["messageid",3]]],[11,"try_push","","Adds a new document to the auth chain.",80,[[["iotadocument",3]],[["error",4],["result",4]]]],[11,"is_valid","","Returns `true` if the `IotaDocument` can be added to the…",80,[[["iotadocument",3]]]],[11,"check_validity","","Checks if the `IotaDocument` can be added to the auth chain.",80,[[["iotadocument",3]],[["error",4],["result",4]]]],[11,"try_from_messages","","Constructs a new `DiffChain` for the given `AuthChain`…",81,[[["authchain",3]],[["diffchain",3],["error",4],["result",4]]]],[11,"new","","Creates a new `DiffChain`.",81,[[],["diffchain",3]]],[11,"len","","Returns the total number of diffs in the chain.",81,[[]]],[11,"is_empty","","Returns `true` if the diff chain is empty.",81,[[]]],[11,"clear","","Empties the diff chain, removing all diffs.",81,[[]]],[11,"iter","","Returns an iterator yielding references to `DocumentDiff`s.",81,[[],[["documentdiff",3],["iter",3]]]],[11,"current_message_id","","Returns the `MessageId` of the latest diff if the chain,…",81,[[],[["option",4],["messageid",3]]]],[11,"try_push","","Adds a new diff to the diff chain.",81,[[["documentdiff",3],["authchain",3]],[["error",4],["result",4]]]],[11,"push_unchecked","","Adds a new diff to the diff chain with performing…",81,[[["documentdiff",3]]]],[11,"is_valid","","Returns `true` if the `DocumentDiff` can be added to the…",81,[[["authchain",3],["documentdiff",3]]]],[11,"check_validity","","Checks if the `DocumentDiff` can be added to the diff chain.",81,[[["authchain",3],["documentdiff",3]],[["error",4],["result",4]]]],[11,"new","","Creates a new `DocumentChain` from given the `AuthChain`.",82,[[["authchain",3]],["documentchain",3]]],[11,"with_diff_chain","","Creates a new `DocumentChain` from given the `AuthChain`…",82,[[["diffchain",3],["authchain",3]],[["error",4],["result",4],["documentchain",3]]]],[11,"id","","Returns a reference to the DID identifying the document…",82,[[],["iotadid",3]]],[11,"auth","","Returns a reference to the `AuthChain`.",82,[[],["authchain",3]]],[11,"auth_mut","","Returns a mutable reference to the `AuthChain`.",82,[[],["authchain",3]]],[11,"diff","","Returns a reference to the `DiffChain`.",82,[[],["diffchain",3]]],[11,"diff_mut","","Returns a mutable reference to the `DiffChain`.",82,[[],["diffchain",3]]],[11,"fold","","",82,[[],[["result",4],["error",4],["iotadocument",3]]]],[11,"current","","Returns a reference to the latest document in the chain.",82,[[],["iotadocument",3]]],[11,"current_mut","","Returns a mutable reference to the latest document in the…",82,[[],["iotadocument",3]]],[11,"auth_message_id","","Returns the Tangle message Id of the latest auth document.",82,[[],["messageid",3]]],[11,"diff_message_id","","Returns the Tangle message Id of the latest diff or auth…",82,[[],["messageid",3]]],[11,"try_push_auth","","Adds a new auth document to the chain.",82,[[["iotadocument",3]],[["error",4],["result",4]]]],[11,"try_push_diff","","Adds a new diff to the current diff chain.",82,[[["documentdiff",3]],[["error",4],["result",4]]]],[11,"new","","Creates a new `Client`  with default settings.",83,[[],[["error",4],["result",4],["client",3]]]],[11,"builder","","Creates a `ClientBuilder` to configure a new `Client`.",83,[[],["clientbuilder",3]]],[11,"from_network","","Creates a new `Client` with default settings for the given…",83,[[["network",4]],[["error",4],["result",4],["client",3]]]],[11,"from_builder","","Creates a new `Client` based on the `ClientBuilder`…",83,[[["clientbuilder",3]],[["error",4],["result",4],["client",3]]]],[11,"network","","Returns the `Client` Tangle network.",83,[[],["network",4]]],[11,"default_node_url","","Returns the default node URL of the `Client` network.",83,[[],["url",3]]],[11,"explorer_url","","Returns the web explorer URL of the `Client` network.",83,[[],["url",3]]],[11,"transaction_url","","Returns the web explorer URL of the given `transaction`.",83,[[["bundledtransaction",3]],["url",3]]],[11,"transaction_hash","","Returns the hash of the Tangle transaction as a…",83,[[["bundledtransaction",3]],["string",3]]],[11,"publish_document","","Publishes an `IotaDocument` to the Tangle.",83,[[["iotadocument",3]]]],[11,"publish_diff","","Publishes a `DocumentDiff` to the Tangle.",83,[[["messageid",3],["documentdiff",3]]]],[11,"read_document","","",83,[[["iotadid",3]]]],[11,"read_document_chain","","",83,[[["iotadid",3]]]],[11,"read_messages","","",83,[[]]],[11,"send_transfer","","",83,[[["transfer",3]]]],[11,"check_network","","",83,[[["iotadid",3]],[["error",4],["result",4]]]],[11,"new","","Creates a new `ClientBuilder`.",84,[[],["clientbuilder",3]]],[11,"network","","Sets the network of the generated `Client`.",84,[[["network",4]],["clientbuilder",3]]],[11,"node","","Adds an IOTA node to the generated `Client`.",84,[[],["clientbuilder",3]]],[11,"nodes","","Adds an iterator of IOTA nodes to the generated `Client`.",84,[[],["clientbuilder",3]]],[11,"build","","Creates a new `Client` based on the `ClientBuilder`…",84,[[],[["error",4],["result",4],["client",3]]]],[11,"from_name","","",85,[[],["network",4]]],[11,"matches_did","","",85,[[["iotadid",3]]]],[11,"node_url","","Returns the default node URL of the Tangle network.",85,[[],["url",3]]],[11,"explorer_url","","Returns the web explorer URL of the Tangle network.",85,[[],["url",3]]],[11,"as_str","","Returns the name of the network as a static `str`.",85,[[]]],[11,"full","","",86,[[["bundledtransaction",3]],[["txnprinter",3],["__full",4]]]],[11,"mini","","",86,[[["bundledtransaction",3]],[["txnprinter",3],["__mini",4]]]],[11,"hash","","",86,[[["bundledtransaction",3]],[["txnprinter",3],["__hash",4]]]],[11,"new","","Creates a new `CredentialValidator`.",88,[[["client",3]],["credentialvalidator",3]]],[11,"check","","Deserializes the given JSON-encoded `VerifiableCredential`…",88,[[]]],[11,"check_presentation","","Deserializes the given JSON-encoded…",88,[[]]],[11,"validate_credential","","Validates the `VerifiableCredential` proof and all…",88,[[["verifiablecredential",3]]]],[11,"validate_presentation","","Validates the `VerifiablePresentation` proof and all…",88,[[["verifiablepresentation",3]]]],[18,"METHOD","","The DID method name.",91,null],[18,"DEFAULT_NETWORK","","The default Tangle network.",91,null],[11,"generate_ed25519","","Generates an `IotaDID` and `KeyPair` suitable for…",91,[[],[["error",4],["result",4]]]],[11,"try_from_borrowed","","Converts a borrowed `DID` to an `IotaDID.`",91,[[["did",3]],[["iotadid",3],["error",4],["result",4]]]],[11,"try_from_owned","","Converts an owned `DID` to an `IotaDID.`",91,[[["did",3]],[["result",4],["iotadid",3],["error",4]]]],[11,"new_unchecked_ref","","Converts a `DID` reference to an `IotaDID` reference…",91,[[["did",3]],["iotadid",3]]],[11,"parse","","Parses an `IotaDID` from the given `input`.",91,[[],[["result",4],["iotadid",3],["error",4]]]],[11,"new","","Creates a new `IotaDID` with a tag derived from the given…",91,[[],[["result",4],["iotadid",3],["error",4]]]],[11,"with_network","","Creates a new `IotaDID` for the given `public` key and…",91,[[],[["result",4],["iotadid",3],["error",4]]]],[11,"with_network_and_shard","","Creates a new `IotaDID` for the given `public` key,…",91,[[],[["result",4],["iotadid",3],["error",4]]]],[11,"join","","Creates a new [`IotaDID`] by joining `self` with the…",91,[[],[["result",4],["iotadid",3],["error",4]]]],[11,"check_method","","Checks if the given `DID` has a valid `IotaDID` `method`.",91,[[["did",3]],[["error",4],["result",4]]]],[11,"check_method_id","","Checks if the given `DID` has a valid `IotaDID` `method_id`.",91,[[["did",3]],[["error",4],["result",4]]]],[11,"check_validity","","Checks if the given `DID` is a valid `IotaDID`.",91,[[["did",3]],[["error",4],["result",4]]]],[11,"is_valid","","Returns a `bool` indicating if the given `DID` is a valid…",91,[[["did",3]]]],[11,"network","","Returns the Tangle `network` of the `IotaDID`.",91,[[]]],[11,"shard","","Returns the Tangle network `shard` of the `IotaDID`.",91,[[],["option",4]]],[11,"tag","","Returns the unique Tangle tag of the `IotaDID`.",91,[[]]],[11,"segments","","",91,[[],["segments",3]]],[11,"address","","Returns the Tangle address of the DID auth chain.",91,[[],["string",3]]],[11,"is_default_network","","",92,[[]]],[11,"network","","",92,[[]]],[11,"shard","","",92,[[],["option",4]]],[11,"tag","","",92,[[]]],[11,"count","","",92,[[]]],[11,"generate_ed25519","","",93,[[],[["error",4],["result",4]]]],[11,"try_from_document","","Converts a generic DID `Document` to an `IotaDocument`.",93,[[["document",3],["btreemap",3]],[["result",4],["error",4],["iotadocument",3]]]],[11,"builder","","Creates a `IotaDocumentBuilder` to configure a new…",93,[[],["iotadocumentbuilder",3]]],[11,"id","","Returns the DID document `id`.",93,[[],["iotadid",3]]],[11,"authentication","","Returns the default authentication method of the DID…",93,[[],["methodwrap",3]]],[11,"authentication_bytes","","Returns the key bytes of the default DID document…",93,[[],[["error",4],["result",4],["vec",3]]]],[11,"authentication_type","","Returns the method type of the default DID document…",93,[[],["methodtype",4]]],[11,"created","","Returns the timestamp of when the DID document was created.",93,[[],["timestamp",3]]],[11,"set_created","","Sets the timestamp of when the DID document was created.",93,[[["timestamp",3]]]],[11,"set_created_now","","Sets the DID document \\\"created\\\" timestamp to…",93,[[]]],[11,"updated","","Returns the timestamp of the last DID document update.",93,[[],["timestamp",3]]],[11,"set_updated","","Sets the timestamp of the last DID document update.",93,[[["timestamp",3]]]],[11,"set_updated_now","","Sets the DID document \\\"updated\\\" timestamp to…",93,[[]]],[11,"previous_message_id","","Returns the Tangle message id of the previous DID…",93,[[],["messageid",3]]],[11,"set_previous_message_id","","Sets the Tangle message id the previous DID document.",93,[[]]],[11,"immutable","","Returns true if the `IotaDocument` is flagged as immutable.",93,[[]]],[11,"set_immutable","","Sets the value of the `immutable` flag.",93,[[]]],[11,"properties","","Returns a reference to the custom `IotaDocument` properties.",93,[[],["btreemap",3]]],[11,"properties_mut","","Returns a mutable reference to the custom `IotaDocument`…",93,[[],["btreemap",3]]],[11,"as_document","","Returns a reference to the underlying `Document`.",93,[[],["document",3]]],[11,"as_document_mut","","Returns a mutable reference to the underlying `Document`.",93,[[],["document",3]]],[11,"sign","","Signs the DID document with the default authentication…",93,[[["key",3]],[["error",4],["result",4]]]],[11,"verify","","Verifies the signature of the DID document.",93,[[],[["error",4],["result",4]]]],[11,"sign_data","","Signs the provided data with the default authentication…",93,[[["key",3]],[["error",4],["result",4]]]],[11,"verify_data","","Verfies the signature of the provided data.",93,[[],[["error",4],["result",4]]]],[11,"resolve_options","","",93,[[],[["error",4],["signatureoptions",3],["result",4]]]],[11,"diff","","Creates a `DocumentDiff` representing the changes between…",93,[[["iotadocument",3],["key",3],["messageid",3]],[["documentdiff",3],["result",4],["error",4]]]],[11,"merge","","Verifies a `DocumentDiff` signature and merges the changes…",93,[[["documentdiff",3]],[["error",4],["result",4]]]],[11,"publish","","Publishes the `IotaDocument` to the Tangle using a default…",93,[[]]],[11,"publish_with_client","","Publishes the `IotaDocument` to the Tangle using the…",93,[[["client",3]]]],[11,"diff_address","","Returns the Tangle address of the DID diff chain.",93,[[["messageid",3]],[["result",4],["string",3],["error",4]]]],[11,"new","","",94,[[],["iotadocumentbuilder",3]]],[11,"authentication_tag","","",94,[[],["iotadocumentbuilder",3]]],[11,"authentication_type","","",94,[[["methodtype",4]],["iotadocumentbuilder",3]]],[11,"did_network","","",94,[[],["iotadocumentbuilder",3]]],[11,"did_shard","","",94,[[],["iotadocumentbuilder",3]]],[11,"immutable","","",94,[[],["iotadocumentbuilder",3]]],[11,"build","","",94,[[],[["error",4],["result",4]]]],[11,"new","","",95,[[["iotadocument",3],["messageid",3]],[["documentdiff",3],["result",4],["error",4]]]],[11,"id","","Returns the DID of associated document.",95,[[],["iotadid",3]]],[11,"diff","","Returns the raw contents of the DID document diff.",95,[[]]],[11,"previous_message_id","","Returns the Tangle message id of the previous DID document…",95,[[],["messageid",3]]],[11,"proof","","Returns a reference to the `DocumentDiff` proof.",95,[[],[["option",4],["signature",3]]]],[11,"publish","","Publishes the `DocumentDiff` to the Tangle using a default…",95,[[["messageid",3]]]],[11,"publish_with_client","","Publishes the `DocumentDiff` to the Tangle using the…",95,[[["messageid",3],["client",3]]]],[11,"new","","",96,[[],["properties",3]]],[11,"try_from_bundle","","",100,[[["vec",3],["bundledtransaction",3]],[["error",4],["result",4],["message",3]]]],[11,"message_str","","Returns the contents of the message as a tryte-encoded…",100,[[],["string",3]]],[11,"message_utf8","","Returns the contents of the message as a utf8-encoded…",100,[[],[["result",4],["string",3],["error",4]]]],[11,"message_id","","Returns the `MessageId` identifying the Tangle message.",100,[[],["messageid",3]]],[11,"try_extract_document","","",100,[[["iotadid",3]],[["option",4],["iotadocument",3]]]],[11,"try_extract_diff","","",100,[[["iotadid",3]],[["documentdiff",3],["option",4]]]],[18,"NONE","","",101,null],[11,"new","","",101,[[],["messageid",3]]],[11,"is_none","","",101,[[]]],[11,"is_some","","",101,[[]]],[11,"as_str","","",101,[[]]],[11,"new","","Creates a new `MessageIndex`.",102,[[],["messageindex",3]]],[11,"size","","Returns the total size of the index.",102,[[]]],[11,"remove_where","","",102,[[],["option",4]]],[11,"insert","","",102,[[]]],[11,"extend","","",102,[[]]]],"p":[[4,"Context"],[4,"Value"],[4,"OneOrMany"],[3,"Timestamp"],[3,"Url"],[8,"AsJson"],[8,"FromJson"],[8,"ToJson"],[8,"SerdeInto"],[4,"Error"],[4,"Error"],[3,"DiffHashMap"],[3,"DiffHashSet"],[4,"DiffOption"],[3,"DiffString"],[8,"Diff"],[3,"DiffVec"],[8,"Digest"],[8,"DigestExt"],[3,"Hash"],[3,"MTree"],[4,"Node"],[3,"Proof"],[3,"KeyPair"],[8,"SetSignature"],[8,"SigName"],[8,"SigSign"],[8,"SigVerify"],[3,"Signature"],[4,"SignatureData"],[3,"SignatureOptions"],[3,"SignatureValue"],[8,"TrySignature"],[8,"TrySignatureMut"],[3,"CredentialBuilder"],[3,"Credential"],[3,"Evidence"],[4,"Issuer"],[3,"Policy"],[3,"Refresh"],[3,"Schema"],[3,"Status"],[3,"Subject"],[3,"VerifiableCredential"],[4,"Error"],[3,"PresentationBuilder"],[3,"Presentation"],[3,"VerifiablePresentation"],[3,"DocumentBuilder"],[3,"Document"],[4,"Error"],[3,"ServiceBuilder"],[3,"Service"],[3,"DIDKey"],[3,"OrderedSet"],[3,"MethodBuilder"],[3,"Method"],[4,"MethodData"],[4,"MethodIdent"],[3,"MethodQuery"],[4,"MethodRef"],[4,"MethodScope"],[4,"MethodType"],[3,"MethodWrap"],[4,"DIDError"],[3,"DID"],[3,"Dereference"],[3,"DocumentMetadata"],[4,"ErrorKind"],[3,"InputMetadata"],[3,"Resolution"],[3,"ResolutionMetadata"],[4,"PrimaryResource"],[4,"Resource"],[4,"SecondaryResource"],[3,"MetaDocument"],[8,"ResolverMethod"],[3,"LdSuite"],[3,"Properties"],[8,"ResolveMethod"],[3,"AuthChain"],[3,"DiffChain"],[3,"DocumentChain"],[3,"Client"],[3,"ClientBuilder"],[4,"Network"],[3,"TxnPrinter"],[3,"CredentialValidation"],[3,"CredentialValidator"],[3,"DocumentValidation"],[3,"PresentationValidation"],[3,"IotaDID"],[3,"Segments"],[3,"IotaDocument"],[3,"IotaDocumentBuilder"],[3,"DocumentDiff"],[3,"Properties"],[4,"Error"],[13,"InvalidDocument"],[13,"ChainError"],[3,"Message"],[3,"MessageId"],[3,"MessageIndex"],[8,"TangleRef"],[3,"JcsEd25519Signature2020"]]},\
"identity_core":{"doc":"Identity Core","i":[[14,"json","identity_core","Construct a `serde_json::Value` from a JSON literal.",null,null],[4,"Error","identity_core::diff","",null,null],[13,"DiffError","","",0,null],[13,"MergeError","","",0,null],[13,"ConversionError","","",0,null],[6,"Result","","",null,null],[3,"DiffHashMap","","A `DiffHashMap` type which represents a Diffed `HashMap`.…",null,null],[12,"0","","",1,null],[3,"DiffHashSet","","",null,null],[12,"0","","",2,null],[6,"DiffObject","","",null,null],[4,"DiffOption","","A `DiffOption<T>` type which represents a Diffed…",null,null],[13,"Some","","",3,null],[13,"None","","",3,null],[3,"DiffString","","The Diff Type for a `String` type.",null,null],[12,"0","","",4,null],[8,"Diff","","The primary `Diff` Trait type.",null,null],[16,"Type","","The Corresponding Diff Type for the implemented Type.",5,null],[10,"diff","","Finds the difference between two types; `self` and `other`…",5,[[],[["result",4],["error",4]]]],[10,"merge","","Merges a `Self::Type` with `Self`",5,[[],[["result",4],["error",4]]]],[10,"from_diff","","Converts a `diff` of type `Self::Type` to a `Self`.",5,[[],[["result",4],["error",4]]]],[10,"into_diff","","Converts a type of `Self` to a `diff` of `Self::Type`.",5,[[],[["result",4],["error",4]]]],[24,"Diff","","Entry point for the `Diff` derive proc macro. `Diff`…",null,null],[3,"DiffVec","","The Diff Type for `Vec`.",null,null],[12,"0","","",6,null],[0,"common","identity_core","Definitions of common types.",null,null],[4,"Value","identity_core::common","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",7,null],[13,"Bool","","Represents a JSON boolean.",7,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",7,null],[13,"String","","Represents a JSON string.",7,null],[13,"Array","","Represents a JSON array.",7,null],[13,"Object","","Represents a JSON object.",7,null],[3,"Timestamp","","A parsed Timestamp.",null,null],[12,"0","","",8,null],[3,"Url","","A parsed URL.",null,null],[12,"0","","",9,null],[4,"Context","","A reference to a JSON-LD context",null,null],[13,"Url","","A JSON-LD context expressed as a Url.",10,null],[13,"Obj","","A JSON-LD context expressed as a JSON object.",10,null],[4,"OneOrMany","","A generic container that stores one or many values of a…",null,null],[13,"One","","A single instance of `T`.",11,null],[13,"Many","","Multiple instances of `T`.",11,null],[0,"context","","",null,null],[4,"Context","identity_core::common::context","A reference to a JSON-LD context",null,null],[13,"Url","","A JSON-LD context expressed as a Url.",10,null],[13,"Obj","","A JSON-LD context expressed as a JSON object.",10,null],[0,"object","identity_core::common","",null,null],[4,"Value","identity_core::common::object","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",7,null],[13,"Bool","","Represents a JSON boolean.",7,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",7,null],[13,"String","","Represents a JSON string.",7,null],[13,"Array","","Represents a JSON array.",7,null],[13,"Object","","Represents a JSON object.",7,null],[6,"Object","","An alias for an ordered map of key-[value][`Value`] pairs.",null,null],[0,"one_or_many","identity_core::common","",null,null],[3,"OneOrManyIter","identity_core::common::one_or_many","",null,null],[12,"inner","","",12,null],[12,"index","","",12,null],[4,"OneOrMany","","A generic container that stores one or many values of a…",null,null],[13,"One","","A single instance of `T`.",11,null],[13,"Many","","Multiple instances of `T`.",11,null],[11,"len","identity_core::common","Returns the number of elements in the collection",11,[[]]],[11,"is_empty","","Returns `true` if the collection is empty",11,[[]]],[11,"get","","Returns a reference to the element at the given index.",11,[[],["option",4]]],[11,"get_mut","","Returns a mutable reference to the element at the given…",11,[[],["option",4]]],[11,"contains","","Returns `true` if the collection contains the given value.",11,[[]]],[11,"push","","Adds a new value to the collection.",11,[[]]],[11,"iter","","Returns an `Iterator` that yields items from the collection.",11,[[]]],[11,"as_slice","","Returns a reference to the contents as a slice.",11,[[]]],[11,"into_vec","","Consumes the [`OneOrMany`] and returns the contents as a…",11,[[],["vec",3]]],[11,"new","identity_core::common::one_or_many","",12,[[["oneormany",4]]]],[0,"timestamp","identity_core::common","",null,null],[3,"Timestamp","identity_core::common::timestamp","A parsed Timestamp.",null,null],[12,"0","","",8,null],[11,"parse","identity_core::common","Parses a [`Timestamp`] from the provided input string.",8,[[],["result",6]]],[11,"now","","Creates a new [`Timestamp`] with the current date and time.",8,[[]]],[11,"to_unix","","Returns the [`Timestamp`] as a Unix timestamp.",8,[[]]],[11,"to_rfc3339","","Returns the [`Timestamp`] as an RFC 3339 `String`.",8,[[],["string",3]]],[0,"url","","",null,null],[3,"Url","identity_core::common::url","A parsed URL.",null,null],[12,"0","","",9,null],[11,"parse","identity_core::common","Parses an absolute [`Url`] from the given input string.",9,[[],["result",6]]],[11,"into_string","","Consumes the [`Url`] and returns the value as a `String`.",9,[[],["string",3]]],[11,"join","","Parses the given input string as a [`Url`], with `self` as…",9,[[],["result",6]]],[6,"Object","","An alias for an ordered map of key-[value][`Value`] pairs.",null,null],[0,"convert","identity_core","Traits for conversions between types.",null,null],[0,"json","identity_core::convert","",null,null],[8,"ToJson","identity_core::convert::json","A convenience-trait for types that can be serialized as…",null,null],[11,"to_json","","Serialize `self` as a string of JSON.",13,[[],[["result",6],["string",3]]]],[11,"to_json_vec","","Serialize `self` as a JSON byte vector.",13,[[],[["result",6],["vec",3]]]],[11,"to_json_value","","Serialize `self` as a [`serde_json::Value`].",13,[[],[["value",4],["result",6]]]],[11,"to_json_pretty","","Serialize `self` as a pretty-printed string of JSON.",13,[[],[["result",6],["string",3]]]],[11,"to_jcs","","Serialize `self` as a JSON byte vector, normalized using…",13,[[],[["result",6],["vec",3]]]],[8,"FromJson","","A convenience-trait for types that can be deserialized…",null,null],[11,"from_json","","Deserialize `Self` from a string of JSON text.",14,[[],["result",6]]],[11,"from_json_slice","","Deserialize `Self` from bytes of JSON text.",14,[[],["result",6]]],[11,"from_json_value","","Deserialize `Self` from a [`serde_json::Value`].",14,[[["value",4]],["result",6]]],[8,"AsJson","","A convenience-trait for types that can be converted to and…",null,null],[11,"from_json","","Deserialize `Self` from a string of JSON text.",15,[[],["result",6]]],[11,"from_json_slice","","Deserialize `Self` from bytes of JSON text.",15,[[],["result",6]]],[11,"from_json_value","","Deserialize `Self` from a [`serde_json::Value`].",15,[[["value",4]],["result",6]]],[11,"to_json","","Serialize `self` as a string of JSON.",15,[[],[["result",6],["string",3]]]],[11,"to_json_vec","","Serialize `self` as a JSON byte vector.",15,[[],[["result",6],["vec",3]]]],[11,"to_json_value","","Serialize `self` as a [`serde_json::Value`].",15,[[],[["value",4],["result",6]]]],[11,"to_json_pretty","","Serialize `self` as a pretty-printed string of JSON.",15,[[],[["result",6],["string",3]]]],[11,"to_jcs","","Serialize `self` as a JSON byte vector, normalized using…",15,[[],[["result",6],["vec",3]]]],[0,"serde_into","identity_core::convert","",null,null],[8,"SerdeInto","identity_core::convert::serde_into","An escape-hatch for converting between types that…",null,null],[11,"serde_into","","Converts `self` to `T` by converting to/from JSON.",16,[[],["result",6]]],[8,"AsJson","identity_core::convert","A convenience-trait for types that can be converted to and…",null,null],[11,"from_json","identity_core::convert::json","Deserialize `Self` from a string of JSON text.",15,[[],["result",6]]],[11,"from_json_slice","","Deserialize `Self` from bytes of JSON text.",15,[[],["result",6]]],[11,"from_json_value","","Deserialize `Self` from a [`serde_json::Value`].",15,[[["value",4]],["result",6]]],[11,"to_json","","Serialize `self` as a string of JSON.",15,[[],[["result",6],["string",3]]]],[11,"to_json_vec","","Serialize `self` as a JSON byte vector.",15,[[],[["result",6],["vec",3]]]],[11,"to_json_value","","Serialize `self` as a [`serde_json::Value`].",15,[[],[["value",4],["result",6]]]],[11,"to_json_pretty","","Serialize `self` as a pretty-printed string of JSON.",15,[[],[["result",6],["string",3]]]],[11,"to_jcs","","Serialize `self` as a JSON byte vector, normalized using…",15,[[],[["result",6],["vec",3]]]],[8,"FromJson","identity_core::convert","A convenience-trait for types that can be deserialized…",null,null],[11,"from_json","identity_core::convert::json","Deserialize `Self` from a string of JSON text.",14,[[],["result",6]]],[11,"from_json_slice","","Deserialize `Self` from bytes of JSON text.",14,[[],["result",6]]],[11,"from_json_value","","Deserialize `Self` from a [`serde_json::Value`].",14,[[["value",4]],["result",6]]],[8,"ToJson","identity_core::convert","A convenience-trait for types that can be serialized as…",null,null],[11,"to_json","identity_core::convert::json","Serialize `self` as a string of JSON.",13,[[],[["result",6],["string",3]]]],[11,"to_json_vec","","Serialize `self` as a JSON byte vector.",13,[[],[["result",6],["vec",3]]]],[11,"to_json_value","","Serialize `self` as a [`serde_json::Value`].",13,[[],[["value",4],["result",6]]]],[11,"to_json_pretty","","Serialize `self` as a pretty-printed string of JSON.",13,[[],[["result",6],["string",3]]]],[11,"to_jcs","","Serialize `self` as a JSON byte vector, normalized using…",13,[[],[["result",6],["vec",3]]]],[8,"SerdeInto","identity_core::convert","An escape-hatch for converting between types that…",null,null],[11,"serde_into","identity_core::convert::serde_into","Converts `self` to `T` by converting to/from JSON.",16,[[],["result",6]]],[0,"crypto","identity_core","Cryptographic Utilities",null,null],[3,"KeyPair","identity_core::crypto","A convenience for storing a pair of cryptographic keys",null,null],[12,"public","","",17,null],[12,"secret","","",17,null],[3,"JcsEd25519Signature2020","","An implementation of the JCS Ed25519 Signature 2020…",null,null],[3,"Signature","","A DID Document digital signature.",null,null],[12,"type_","","",18,null],[12,"data","","",18,null],[12,"options","","",18,null],[3,"SignatureOptions","","Customizable properties of a DID Document signature.",null,null],[12,"verification_method","","The unique identifier of the DID method used to create…",19,null],[12,"proof_purpose","","The intended purpose of the signature.",19,null],[12,"created","","A timestamp of when the signature was created.",19,null],[12,"nonce","","The signature `nonce` property.",19,null],[12,"domain","","The signature `domain` property.",19,null],[3,"SignatureValue","","A [`SignatureData`] wrapper with a visiblity toggle.",null,null],[12,"data","","",20,null],[12,"hide","","",20,null],[4,"SignatureData","","A DID Document signature with a dynamic JSON field name.",null,null],[13,"None","","An empty signature value.",21,null],[13,"Jws","","A signature value with the property name `jws`.",21,null],[13,"Proof","","A signature value with the property name `proofValue`.",21,null],[13,"Signature","","A signature value with the property name `signatureValue`.",21,null],[0,"key","","",null,null],[0,"key","identity_core::crypto::key","",null,null],[3,"Key","identity_core::crypto::key::key","A cryptographic key.",null,null],[12,"key","","",22,null],[12,"vis","","",22,null],[4,"Public","","",null,null],[4,"Secret","","",null,null],[0,"private","","",null,null],[8,"Sealed","identity_core::crypto::key::key::private","",null,null],[6,"PublicKey","identity_core::crypto::key::key","A cryptographic key with `Public` components.",null,null],[6,"SecretKey","","A cryptographic key with `Secret` components.",null,null],[0,"pair","identity_core::crypto::key","",null,null],[3,"KeyPair","identity_core::crypto::key::pair","A convenience for storing a pair of cryptographic keys",null,null],[12,"public","","",17,null],[12,"secret","","",17,null],[11,"new_ed25519","identity_core::crypto","Creates a new Ed25519 [`KeyPair`].",17,[[],["result",6]]],[11,"new","","Creates a new [`KeyPair`] from the given keys.",17,[[["secretkey",6],["publickey",6]]]],[11,"public","","Returns a reference to the [`PublicKey`] object.",17,[[],["publickey",6]]],[11,"secret","","Returns a reference to the [`SecretKey`] object.",17,[[],["secretkey",6]]],[0,"merkle_tree","","Types and traits for Merkle tree operations.",null,null],[8,"Digest","identity_core::crypto::merkle_tree","The `Digest` trait specifies an interface common for…",null,null],[16,"OutputSize","","Output size for `Digest`",23,null],[10,"new","","Create new hasher instance",23,[[]]],[10,"update","","Digest data, updating the internal state.",23,[[]]],[10,"chain","","Digest input data in a chained manner.",23,[[]]],[10,"finalize","","Retrieve result and consume hasher instance.",23,[[],["genericarray",3]]],[10,"finalize_reset","","Retrieve result and reset hasher instance.",23,[[],["genericarray",3]]],[10,"reset","","Reset hasher instance to its initial state.",23,[[]]],[10,"output_size","","Get output size of the hasher",23,[[]]],[10,"digest","","Convenience function to compute hash of the `data`. It…",23,[[],["genericarray",3]]],[3,"Hash","","The output of a hash function.",null,null],[12,"0","","",24,null],[3,"MTree","","A Merkle tree designed for static data.",null,null],[12,"nodes","","",25,null],[12,"marker","","",25,null],[3,"Proof","","An inclusion proof that allows proving the existence of…",null,null],[12,"nodes","","",26,null],[4,"Node","","A tagged [`struct@Hash`].",null,null],[13,"L","","A node tagged with `L`.",27,null],[13,"R","","A node tagged with `R`.",27,null],[0,"consts","","",null,null],[17,"PREFIX_L","identity_core::crypto::merkle_tree::consts","",null,null],[17,"PREFIX_B","","",null,null],[17,"SIZE_USIZE","","",null,null],[0,"digest","identity_core::crypto::merkle_tree","",null,null],[8,"Digest","identity_core::crypto::merkle_tree::digest","The `Digest` trait specifies an interface common for…",null,null],[16,"OutputSize","","Output size for `Digest`",23,null],[10,"new","","Create new hasher instance",23,[[]]],[10,"update","","Digest data, updating the internal state.",23,[[]]],[10,"chain","","Digest input data in a chained manner.",23,[[]]],[10,"finalize","","Retrieve result and consume hasher instance.",23,[[],["genericarray",3]]],[10,"finalize_reset","","Retrieve result and reset hasher instance.",23,[[],["genericarray",3]]],[10,"reset","","Reset hasher instance to its initial state.",23,[[]]],[10,"output_size","","Get output size of the hasher",23,[[]]],[10,"digest","","Convenience function to compute hash of the `data`. It…",23,[[],["genericarray",3]]],[8,"DigestExt","","An extension of the [`Digest`] trait for Merkle tree…",null,null],[11,"hash_leaf","","Computes the [`struct@Hash`] of a Merkle tree leaf node.",28,[[],["hash",3]]],[11,"hash_branch","","Computes the parent [`struct@Hash`] of two Merkle tree…",28,[[["hash",3]],["hash",3]]],[0,"hash","identity_core::crypto::merkle_tree","",null,null],[3,"Hash","identity_core::crypto::merkle_tree::hash","The output of a hash function.",null,null],[12,"0","","",24,null],[11,"from_slice","identity_core::crypto::merkle_tree","Creates a new [`struct@Hash`] from a slice.",24,[[],["option",4]]],[0,"math","","",null,null],[5,"is_pow2","identity_core::crypto::merkle_tree::math","Return true if `value` is a power of two greater than `1`.",null,[[]]],[5,"log2c","","Returns the base-2 logarithm of `value`, rounded up.",null,[[]]],[0,"merkle","identity_core::crypto::merkle_tree","",null,null],[3,"MTree","identity_core::crypto::merkle_tree::merkle","A Merkle tree designed for static data.",null,null],[12,"nodes","","",25,null],[12,"marker","","",25,null],[11,"leaves","identity_core::crypto::merkle_tree","Returns the number of leaf nodes in the tree.",25,[[]]],[11,"height","","Returns the height of the tree.",25,[[]]],[11,"root","","Returns the root hash of the tree.",25,[[],["hash",3]]],[11,"data","","Returns a slice of the leaf nodes in the tree.",25,[[]]],[11,"layer","","Returns a slice of nodes at the specified `height`.",25,[[]]],[11,"from_leaves","","Creates a new [`MTree`] from a slice of pre-hashed data.",25,[[],["option",4]]],[11,"proof","","Generates a proof-of-inclusion for the leaf node at the…",25,[[],[["option",4],["proof",3]]]],[11,"verify","","Verifies the computed root of `proof` with the root hash…",25,[[["proof",3],["hash",3]]]],[0,"node","","",null,null],[4,"Node","identity_core::crypto::merkle_tree::node","A tagged [`struct@Hash`].",null,null],[13,"L","","A node tagged with `L`.",27,null],[13,"R","","A node tagged with `R`.",27,null],[11,"get","identity_core::crypto::merkle_tree","Returns the [`struct@Hash`] of the node.",27,[[],["hash",3]]],[11,"hash","","Computes the parent hash of `self` and `other` using a…",27,[[["hash",3]],["hash",3]]],[11,"hash_with","","Computes the parent hash of `self` and `other` using the…",27,[[["hash",3]],["hash",3]]],[0,"proof","","",null,null],[3,"Proof","identity_core::crypto::merkle_tree::proof","An inclusion proof that allows proving the existence of…",null,null],[12,"nodes","","",26,null],[11,"new","identity_core::crypto::merkle_tree","Creates a new [`Proof`] from a boxed slice of nodes.",26,[[["box",3]]]],[11,"nodes","","Returns the nodes as a slice.",26,[[]]],[11,"verify","","Verifies the computed root of `self` with the given `root`…",26,[[["hash",3],["hash",3]]]],[11,"root","","Computes the root hash from `target` using a default digest.",26,[[["hash",3]],["hash",3]]],[11,"root_with","","Computes the root hash from `target` using the given…",26,[[["hash",3]],["hash",3]]],[0,"tree","","",null,null],[5,"height","identity_core::crypto::merkle_tree::tree","",null,[[]]],[5,"total","","",null,[[]]],[5,"leaves","","",null,[[]]],[5,"index_lhs","","",null,[[]]],[5,"index_rhs","","",null,[[]]],[5,"compute_nodes","","",null,[[],["box",3]]],[5,"compute","","",null,[[["vec",3]]]],[8,"DigestExt","identity_core::crypto::merkle_tree","An extension of the [`Digest`] trait for Merkle tree…",null,null],[11,"hash_leaf","identity_core::crypto::merkle_tree::digest","Computes the [`struct@Hash`] of a Merkle tree leaf node.",28,[[],["hash",3]]],[11,"hash_branch","","Computes the parent [`struct@Hash`] of two Merkle tree…",28,[[["hash",3]],["hash",3]]],[0,"proof","identity_core::crypto","Types and traits for helping ensure the authenticity and…",null,null],[0,"jcsed25519signature2020","identity_core::crypto::proof","",null,null],[3,"JcsEd25519Signature2020","identity_core::crypto::proof::jcsed25519signature2020","An implementation of the JCS Ed25519 Signature 2020…",null,null],[5,"parse_public","","",null,[[],[["verificationkey",3],["option",4]]]],[5,"parse_secret","","",null,[[],[["signingkey",3],["option",4]]]],[5,"parse_signature","","",null,[[],["option",4]]],[5,"ed25519_sign","","",null,[[],[["result",6],["vec",3]]]],[5,"ed25519_verify","","",null,[[],["result",6]]],[17,"SIGNATURE_NAME","","",null,null],[17,"SIGNATURE_SIZE","","",null,null],[17,"PUBLIC_KEY_BYTES","","",null,null],[17,"SECRET_KEY_BYTES","","",null,null],[18,"NAME","identity_core::crypto","The name of the signature suite.",29,null],[11,"new_keypair","","Generates a new [`KeyPair`] appropriate for this signature…",29,[[],["keypair",3]]],[11,"sign_data","","Signs the given `data` with `secret` and returns a digital…",29,[[],[["result",6],["signaturedata",4]]]],[11,"verify_data","","Verifies the authenticity of `data` using `signature` and…",29,[[["signaturedata",4]],["result",6]]],[0,"signature","","",null,null],[0,"signature","identity_core::crypto::signature","",null,null],[3,"Signature","identity_core::crypto::signature::signature","A DID Document digital signature.",null,null],[12,"type_","","",18,null],[12,"data","","",18,null],[12,"options","","",18,null],[11,"new","identity_core::crypto","Creates a new [`Signature`].",18,[[["signatureoptions",3]]]],[11,"type_","","Returns the `type` property of the signature.",18,[[]]],[11,"data","","Returns a reference to the signature `data`.",18,[[],["signaturevalue",3]]],[11,"data_mut","","Returns a mutable reference to the signature `data`.",18,[[],["signaturevalue",3]]],[11,"set_data","","Sets the signature `data` to the given `value`.",18,[[["signaturedata",4]]]],[11,"clear_data","","Clears the current signature value - all other properties…",18,[[]]],[11,"hide_value","","Flag the signature value so it is ignored during…",18,[[]]],[11,"show_value","","Restore the signature value state so serialization behaves…",18,[[]]],[11,"verify","","Verifies `self` with the given signature `suite` and…",18,[[],["result",6]]],[0,"signature_data","identity_core::crypto::signature","",null,null],[4,"SignatureData","identity_core::crypto::signature::signature_data","A DID Document signature with a dynamic JSON field name.",null,null],[13,"None","","An empty signature value.",21,null],[13,"Jws","","A signature value with the property name `jws`.",21,null],[13,"Proof","","A signature value with the property name `proofValue`.",21,null],[13,"Signature","","A signature value with the property name `signatureValue`.",21,null],[11,"is_none","identity_core::crypto","Returns `true` if the signature data is a `None` type.",21,[[]]],[11,"is_jws","","Returns `true` if the signature data is a `Jws` type.",21,[[]]],[11,"is_proof","","Returns `true` if the signature data is a `Proof` type.",21,[[]]],[11,"is_signature","","Returns `true` if the signature data is a `Signature` type.",21,[[]]],[11,"as_str","","Returns the signature data as a string slice.",21,[[]]],[11,"try_jws","","Returns the `Jws` type signature data as a string slice.",21,[[],["option",4]]],[11,"try_proof","","Returns the `Proof` type signature data as a string slice.",21,[[],["option",4]]],[11,"try_signature","","Returns the `Signature` type signature data as a string…",21,[[],["option",4]]],[0,"signature_options","identity_core::crypto::signature","",null,null],[3,"SignatureOptions","identity_core::crypto::signature::signature_options","Customizable properties of a DID Document signature.",null,null],[12,"verification_method","","The unique identifier of the DID method used to create…",19,null],[12,"proof_purpose","","The intended purpose of the signature.",19,null],[12,"created","","A timestamp of when the signature was created.",19,null],[12,"nonce","","The signature `nonce` property.",19,null],[12,"domain","","The signature `domain` property.",19,null],[11,"new","identity_core::crypto","Creates a new [`SignatureOptions`] instance with the given…",19,[[]]],[11,"with_purpose","","Creates a new [`SignatureOptions`] instance with the given…",19,[[]]],[0,"signature_value","identity_core::crypto::signature","",null,null],[3,"SignatureValue","identity_core::crypto::signature::signature_value","A [`SignatureData`] wrapper with a visiblity toggle.",null,null],[12,"data","","",20,null],[12,"hide","","",20,null],[11,"new","identity_core::crypto","Creates a new [`SignatureValue`].",20,[[]]],[11,"is_none","","Returns `true` if the value is empty.",20,[[]]],[11,"set","","Sets the value of the underlying [`SignatureData`].",20,[[["signaturedata",4]]]],[11,"clear","","Clears the value of the underlying [`SignatureData`].",20,[[]]],[11,"hide","","Flag the signature value as \\\"hidden\\\".",20,[[]]],[11,"show","","Flag the signature value as \\\"visible\\\".",20,[[]]],[0,"traits","identity_core::crypto::signature","",null,null],[8,"SigName","identity_core::crypto::signature::traits","A trait for signature suites identified by a particular…",null,null],[10,"name","","Returns the name identifying this signature suite.",30,[[],["string",3]]],[8,"SigSign","","A trait for general-purpose signature creation",null,null],[10,"sign","","Signs the given `data` with `secret` and returns a digital…",31,[[],[["result",6],["signaturedata",4]]]],[8,"SigVerify","","A trait for general-purpose signature verification",null,null],[10,"verify","","Verifies the authenticity of `data` using `signature` and…",32,[[["signaturedata",4]],["result",6]]],[8,"TrySignature","","A trait for types that can provide a reference to a…",null,null],[10,"signature","","Returns a reference to the [`Signature`] object, if any.",33,[[],[["option",4],["signature",3]]]],[11,"try_signature","","Returns a reference to the [`Signature`] object.",33,[[],[["signature",3],["result",6]]]],[8,"TrySignatureMut","","A trait for types that can provide a mutable reference to…",null,null],[10,"signature_mut","","Returns a mutable reference to the [`Signature`] object.",34,[[],[["option",4],["signature",3]]]],[11,"try_signature_mut","","Returns a mutable reference to the [`Signature`] object.",34,[[],[["result",6],["signature",3]]]],[8,"SetSignature","","A trait for types that can store a digital…",null,null],[10,"set_signature","","Sets the [`Signature`] object of `self`.",35,[[["signature",3]]]],[6,"PublicKey","identity_core::crypto","A cryptographic key with `Public` components.",null,null],[6,"SecretKey","","A cryptographic key with `Secret` components.",null,null],[8,"SetSignature","","A trait for types that can store a digital…",null,null],[10,"set_signature","","Sets the [`Signature`] object of `self`.",35,[[["signature",3]]]],[8,"SigName","","A trait for signature suites identified by a particular…",null,null],[10,"name","","Returns the name identifying this signature suite.",30,[[],["string",3]]],[8,"SigSign","","A trait for general-purpose signature creation",null,null],[10,"sign","","Signs the given `data` with `secret` and returns a digital…",31,[[],[["result",6],["signaturedata",4]]]],[8,"SigVerify","","A trait for general-purpose signature verification",null,null],[10,"verify","","Verifies the authenticity of `data` using `signature` and…",32,[[["signaturedata",4]],["result",6]]],[8,"TrySignature","","A trait for types that can provide a reference to a…",null,null],[10,"signature","","Returns a reference to the [`Signature`] object, if any.",33,[[],[["option",4],["signature",3]]]],[11,"try_signature","identity_core::crypto::signature::traits","Returns a reference to the [`Signature`] object.",33,[[],[["signature",3],["result",6]]]],[8,"TrySignatureMut","identity_core::crypto","A trait for types that can provide a mutable reference to…",null,null],[10,"signature_mut","","Returns a mutable reference to the [`Signature`] object.",34,[[],[["option",4],["signature",3]]]],[11,"try_signature_mut","identity_core::crypto::signature::traits","Returns a mutable reference to the [`Signature`] object.",34,[[],[["result",6],["signature",3]]]],[0,"error","identity_core","Errors that may occur when Self-sovereign Identity goes…",null,null],[4,"Error","identity_core::error","This type represents all possible errors that can occur in…",null,null],[13,"EncodeJSON","","Caused by a failure to encode Rust types as JSON.",36,null],[13,"DecodeJSON","","Caused by a failure to decode Rust types from JSON.",36,null],[13,"DecodeBase16","","Caused by a failure to decode base16-encoded data.",36,null],[13,"DecodeBase58","","Caused by a failure to decode base58-encoded data.",36,null],[13,"InvalidDiff","","Caused by attempting to perform an invalid `Diff` operation.",36,null],[13,"InvalidUrl","","Caused by attempting to parse an invalid `Url`.",36,null],[13,"InvalidTimestamp","","Caused by attempting to parse an invalid `Timestamp`.",36,null],[13,"InvalidProofFormat","","Caused by attempting to parse an invalid DID proof.",36,null],[13,"InvalidKeyFormat","","Caused by attempting to parse an invalid cryptographic key.",36,null],[13,"MissingSignature","","Caused by a failed attempt at retrieving a digital…",36,null],[6,"Result","","Alias for a `Result` with the error type [`Error`].",null,null],[0,"utils","identity_core","Misc. utility functions.",null,null],[5,"decode_b58","identity_core::utils","Decodes the given `data` as base58-btc.",null,[[],[["result",6],["vec",3]]]],[5,"encode_b58","","Encodes the given `data` as base58-btc.",null,[[],["string",3]]],[5,"decode_b16","","Decodes the given `data` as base16 (hex).",null,[[],[["result",6],["vec",3]]]],[5,"encode_b16","","Encodes the given `data` as base16 (hex).",null,[[],["string",3]]],[5,"generate_ed25519","","Generates a new ed25519 [`KeyPair`].",null,[[],[["keypair",3],["result",6]]]],[5,"jcs_sha256","","Returns the given `data` serialized using JSON…",null,[[],[["output",6],["result",6]]]],[0,"base_encoding","","",null,null],[5,"decode_b58","identity_core::utils::base_encoding","Decodes the given `data` as base58-btc.",null,[[],[["result",6],["vec",3]]]],[5,"encode_b58","","Encodes the given `data` as base58-btc.",null,[[],["string",3]]],[5,"decode_b16","","Decodes the given `data` as base16 (hex).",null,[[],[["result",6],["vec",3]]]],[5,"encode_b16","","Encodes the given `data` as base16 (hex).",null,[[],["string",3]]],[0,"generate_ed25519","identity_core::utils","",null,null],[5,"generate_ed25519","identity_core::utils::generate_ed25519","Generates a new ed25519 [`KeyPair`].",null,[[],[["keypair",3],["result",6]]]],[0,"jcs_sha256","identity_core::utils","",null,null],[5,"jcs_sha256","identity_core::utils::jcs_sha256","Returns the given `data` serialized using JSON…",null,[[],[["output",6],["result",6]]]],[11,"from","identity_core::diff","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","identity_core::common::object","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"equivalent","","",7,[[]]],[11,"vzip","","",7,[[]]],[11,"from","identity_core::common","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"equivalent","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"equivalent","","",11,[[]]],[11,"encode_hex","","",11,[[]]],[11,"encode_hex_upper","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from","identity_core::common::one_or_many","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","identity_core::crypto","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"zeroize","","",17,[[]]],[11,"vzip","","",17,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"equivalent","","",18,[[]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"equivalent","","",19,[[]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"equivalent","","",20,[[]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"equivalent","","",21,[[]]],[11,"vzip","","",21,[[]]],[11,"from","identity_core::crypto::key::key","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"zeroize","","",22,[[]]],[11,"encode_hex","","",22,[[]]],[11,"encode_hex_upper","","",22,[[]]],[11,"vzip","","",22,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","identity_core::crypto::merkle_tree","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"equivalent","","",24,[[]]],[11,"encode_hex","","",24,[[]]],[11,"encode_hex_upper","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","identity_core::error","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"index_mut","identity_core::common::object","Write into a `serde_json::Value` using the syntax…",7,[[],["value",4]]],[11,"default","","",7,[[],["value",4]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",7,[[]]],[11,"eq","","",7,[[]]],[11,"eq","","",7,[[]]],[11,"eq","","",7,[[]]],[11,"eq","","",7,[[["string",3]]]],[11,"eq","","",7,[[]]],[11,"eq","","",7,[[]]],[11,"eq","","",7,[[]]],[11,"eq","","",7,[[]]],[11,"eq","","",7,[[]]],[11,"eq","","",7,[[]]],[11,"eq","","",7,[[["value",4]]]],[11,"ne","","",7,[[["value",4]]]],[11,"eq","","",7,[[]]],[11,"eq","","",7,[[]]],[11,"eq","","",7,[[]]],[11,"eq","","",7,[[]]],[11,"eq","","",7,[[]]],[11,"clone","","",7,[[],["value",4]]],[11,"from_iter","","Convert an iteratable type to a `Value`",7,[[],["value",4]]],[11,"from_iter","","Convert an iteratable type to a `Value`",7,[[],["value",4]]],[11,"deserialize","","",7,[[],[["value",4],["result",4]]]],[11,"deserialize_any","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_i8","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_i16","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_i32","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_i64","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_u8","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_u16","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_u32","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_u64","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_f32","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_f64","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_i128","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_u128","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_option","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_enum","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_newtype_struct","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_bool","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_char","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_str","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_string","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_bytes","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_byte_buf","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_unit","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_unit_struct","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_seq","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_tuple","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_tuple_struct","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_map","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_struct","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_identifier","","",7,[[],[["error",3],["result",4]]]],[11,"deserialize_ignored_any","","",7,[[],[["error",3],["result",4]]]],[11,"index","","Index into a `serde_json::Value` using the syntax…",7,[[],["value",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"from_str","","",7,[[],[["value",4],["error",3],["result",4]]]],[11,"into_deserializer","","",7,[[]]],[11,"from","","",7,[[],["value",4]]],[11,"from","","",7,[[],["value",4]]],[11,"from","","",7,[[],["value",4]]],[11,"from","","Convert boolean to `Value`",7,[[],["value",4]]],[11,"from","","",7,[[],["value",4]]],[11,"from","","Convert 32-bit floating point number to `Value`",7,[[],["value",4]]],[11,"from","","",7,[[],["value",4]]],[11,"from","","",7,[[],["value",4]]],[11,"from","","Convert copy-on-write string to `Value`",7,[[["cow",4]],["value",4]]],[11,"from","","",7,[[],["value",4]]],[11,"from","","Convert `String` to `Value`",7,[[["string",3]],["value",4]]],[11,"from","","Convert `()` to `Value`",7,[[],["value",4]]],[11,"from","","Convert 64-bit floating point number to `Value`",7,[[],["value",4]]],[11,"from","","Convert a `Vec` to `Value`",7,[[["vec",3]],["value",4]]],[11,"from","","Convert map (with string keys) to `Value`",7,[[["string",3],["value",4],["map",3]],["value",4]]],[11,"from","","Convert string slice to `Value`",7,[[],["value",4]]],[11,"from","","Convert `Number` to `Value`",7,[[["number",3]],["value",4]]],[11,"from","","Convert a slice to `Value`",7,[[],["value",4]]],[11,"from","","",7,[[],["value",4]]],[11,"from","","",7,[[],["value",4]]],[11,"from","","",7,[[],["value",4]]],[11,"fmt","","Display a JSON value as a string.",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","identity_core::diff","",1,[[],["diffhashmap",3]]],[11,"clone","","",4,[[],["diffstring",3]]],[11,"clone","","",2,[[],["diffhashset",3]]],[11,"clone","","",6,[[],["diffvec",3]]],[11,"clone","","",3,[[],["diffoption",4]]],[11,"hash","","",4,[[]]],[11,"default","","",4,[[],["diffstring",3]]],[11,"default","","",6,[[],["diffvec",3]]],[11,"default","","",1,[[],["diffhashmap",3]]],[11,"default","","",3,[[],["diffoption",4]]],[11,"from","","",3,[[["option",4]],["diffoption",4]]],[11,"into","","",3,[[],["option",4]]],[11,"cmp","","",4,[[["diffstring",3]],["ordering",4]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",3,[[["diffoption",4]]]],[11,"ne","","",3,[[["diffoption",4]]]],[11,"eq","","",1,[[["diffhashmap",3]]]],[11,"ne","","",1,[[["diffhashmap",3]]]],[11,"eq","","",6,[[["diffvec",3]]]],[11,"ne","","",6,[[["diffvec",3]]]],[11,"eq","","",4,[[["diffstring",3]]]],[11,"ne","","",4,[[["diffstring",3]]]],[11,"eq","","",2,[[["diffhashset",3]]]],[11,"ne","","",2,[[["diffhashset",3]]]],[11,"partial_cmp","","",4,[[["diffstring",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["diffstring",3]]]],[11,"le","","",4,[[["diffstring",3]]]],[11,"gt","","",4,[[["diffstring",3]]]],[11,"ge","","",4,[[["diffstring",3]]]],[11,"deserialize","","",2,[[],[["diffhashset",3],["result",4]]]],[11,"deserialize","","",1,[[],[["diffhashmap",3],["result",4]]]],[11,"deserialize","","",4,[[],[["result",4],["diffstring",3]]]],[11,"deserialize","","",3,[[],[["result",4],["diffoption",4]]]],[11,"deserialize","","",6,[[],[["diffvec",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"diff","identity_core::common::object","Compares two `serde_json::Value` types; `self`, `diff` and…",7,[[["value",4]],[["result",4],["error",4]]]],[11,"merge","","Merges a `DiffValue`; `diff` with `self`; a…",7,[[],[["value",4],["result",4],["error",4]]]],[11,"from_diff","","Converts from a `diff` of type `DiffValue` to a…",7,[[],[["value",4],["result",4],["error",4]]]],[11,"into_diff","","converts a `serde_json::Value` to a `DiffValue`.",7,[[],[["result",4],["error",4]]]],[11,"serialize","identity_core::diff","",1,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"name","identity_core::crypto","",29,[[],["string",3]]],[11,"sign","","",29,[[],[["result",6],["signaturedata",4]]]],[11,"verify","","",29,[[["signaturedata",4]],["result",6]]],[11,"drop","identity_core::crypto::key::key","",22,[[]]],[11,"drop","identity_core::crypto","",17,[[]]],[11,"as_ref","identity_core::common","",11,[[]]],[11,"as_ref","identity_core::crypto::key::key","",22,[[]]],[11,"as_ref","identity_core::crypto::merkle_tree","",24,[[]]],[11,"from","identity_core::common","",10,[[["url",3]]]],[11,"from","","",10,[[["object",6]]]],[11,"from","","",11,[[]]],[11,"from","","",11,[[["vec",3]]]],[11,"from","","",9,[[["url",3]]]],[11,"from","identity_core::crypto::key::key","",22,[[["box",3]]]],[11,"from","","",22,[[["vec",3]]]],[11,"from","identity_core::crypto::merkle_tree","",24,[[["output",6]]]],[11,"from","identity_core::error","",36,[[["fromhexerror",4]]]],[11,"from","","",36,[[["error",4]]]],[11,"from","","",36,[[["error",4]]]],[11,"from","","",36,[[["parseerror",4]]]],[11,"from","","",36,[[["parseerror",3]]]],[11,"next","identity_core::common::one_or_many","",12,[[],["option",4]]],[11,"clone","identity_core::common","",10,[[],["context",4]]],[11,"clone","","",11,[[],["oneormany",4]]],[11,"clone","","",8,[[],["timestamp",3]]],[11,"clone","","",9,[[],["url",3]]],[11,"clone","identity_core::crypto::key::key","",37,[[],["public",4]]],[11,"clone","","",38,[[],["secret",4]]],[11,"clone","","",22,[[],["key",3]]],[11,"clone","identity_core::crypto","",17,[[],["keypair",3]]],[11,"clone","identity_core::crypto::merkle_tree","",24,[[]]],[11,"clone","identity_core::crypto","",29,[[],["jcsed25519signature2020",3]]],[11,"clone","","",18,[[],["signature",3]]],[11,"clone","","",21,[[],["signaturedata",4]]],[11,"clone","","",19,[[],["signatureoptions",3]]],[11,"clone","","",20,[[],["signaturevalue",3]]],[11,"default","identity_core::common","",11,[[]]],[11,"default","","",8,[[]]],[11,"default","identity_core::crypto::merkle_tree","",24,[[]]],[11,"default","identity_core::crypto","",19,[[],["signatureoptions",3]]],[11,"default","","",20,[[]]],[11,"cmp","identity_core::common","",11,[[["oneormany",4]],["ordering",4]]],[11,"cmp","","",8,[[["timestamp",3]],["ordering",4]]],[11,"cmp","","",9,[[["url",3]],["ordering",4]]],[11,"cmp","identity_core::crypto::merkle_tree","",24,[[],["ordering",4]]],[11,"cmp","identity_core::crypto","",18,[[["signature",3]],["ordering",4]]],[11,"cmp","","",21,[[["signaturedata",4]],["ordering",4]]],[11,"cmp","","",19,[[["signatureoptions",3]],["ordering",4]]],[11,"cmp","","",20,[[["signaturevalue",3]],["ordering",4]]],[11,"eq","identity_core::common","",10,[[["context",4]]]],[11,"ne","","",10,[[["context",4]]]],[11,"eq","","",10,[[]]],[11,"eq","","",11,[[["oneormany",4]]]],[11,"ne","","",11,[[["oneormany",4]]]],[11,"eq","","",8,[[["timestamp",3]]]],[11,"ne","","",8,[[["timestamp",3]]]],[11,"eq","","",9,[[["url",3]]]],[11,"ne","","",9,[[["url",3]]]],[11,"eq","","",9,[[]]],[11,"eq","identity_core::crypto::merkle_tree","",24,[[]]],[11,"eq","identity_core::crypto","",18,[[["signature",3]]]],[11,"ne","","",18,[[["signature",3]]]],[11,"eq","","",21,[[["signaturedata",4]]]],[11,"ne","","",21,[[["signaturedata",4]]]],[11,"eq","","",19,[[["signatureoptions",3]]]],[11,"ne","","",19,[[["signatureoptions",3]]]],[11,"eq","","",20,[[["signaturevalue",3]]]],[11,"ne","","",20,[[["signaturevalue",3]]]],[11,"partial_cmp","identity_core::common","",11,[[["oneormany",4]],[["ordering",4],["option",4]]]],[11,"lt","","",11,[[["oneormany",4]]]],[11,"le","","",11,[[["oneormany",4]]]],[11,"gt","","",11,[[["oneormany",4]]]],[11,"ge","","",11,[[["oneormany",4]]]],[11,"partial_cmp","","",8,[[["timestamp",3]],[["ordering",4],["option",4]]]],[11,"lt","","",8,[[["timestamp",3]]]],[11,"le","","",8,[[["timestamp",3]]]],[11,"gt","","",8,[[["timestamp",3]]]],[11,"ge","","",8,[[["timestamp",3]]]],[11,"partial_cmp","","",9,[[["url",3]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["url",3]]]],[11,"le","","",9,[[["url",3]]]],[11,"gt","","",9,[[["url",3]]]],[11,"ge","","",9,[[["url",3]]]],[11,"partial_cmp","identity_core::crypto::merkle_tree","",24,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","identity_core::crypto","",18,[[["signature",3]],[["ordering",4],["option",4]]]],[11,"lt","","",18,[[["signature",3]]]],[11,"le","","",18,[[["signature",3]]]],[11,"gt","","",18,[[["signature",3]]]],[11,"ge","","",18,[[["signature",3]]]],[11,"partial_cmp","","",21,[[["signaturedata",4]],[["ordering",4],["option",4]]]],[11,"lt","","",21,[[["signaturedata",4]]]],[11,"le","","",21,[[["signaturedata",4]]]],[11,"gt","","",21,[[["signaturedata",4]]]],[11,"ge","","",21,[[["signaturedata",4]]]],[11,"partial_cmp","","",19,[[["signatureoptions",3]],[["ordering",4],["option",4]]]],[11,"lt","","",19,[[["signatureoptions",3]]]],[11,"le","","",19,[[["signatureoptions",3]]]],[11,"gt","","",19,[[["signatureoptions",3]]]],[11,"ge","","",19,[[["signatureoptions",3]]]],[11,"partial_cmp","","",20,[[["signaturevalue",3]],[["ordering",4],["option",4]]]],[11,"lt","","",20,[[["signaturevalue",3]]]],[11,"le","","",20,[[["signaturevalue",3]]]],[11,"gt","","",20,[[["signaturevalue",3]]]],[11,"ge","","",20,[[["signaturevalue",3]]]],[11,"deref","identity_core::common","",11,[[]]],[11,"deref","","",9,[[]]],[11,"deref","identity_core::crypto","",18,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","identity_core::common","",9,[[]]],[11,"deref_mut","identity_core::crypto","",18,[[]]],[11,"deref_mut","","",20,[[]]],[11,"fmt","identity_core::common","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",8,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",9,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_core::crypto::key::key","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::crypto","",17,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::crypto::merkle_tree","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::crypto","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::error","",36,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::common","",11,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",8,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",9,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_core::crypto::key::key","",22,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::error","",36,[[["formatter",3]],["result",6]]],[11,"hash","identity_core::common","",11,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","identity_core::crypto","",21,[[]]],[11,"hash","","",19,[[]]],[11,"try_from","identity_core::common","",8,[[],["result",6]]],[11,"try_from","","",8,[[["string",3]],["result",6]]],[11,"from_str","","",8,[[],["result",6]]],[11,"from_str","","",9,[[],["result",6]]],[11,"source","identity_core::error","",36,[[],[["option",4],["error",8]]]],[11,"serialize","identity_core::common","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","identity_core::crypto","",18,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"deserialize","identity_core::common","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","identity_core::crypto","",18,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"diff","identity_core::common","",9,[[],["result",6]]],[11,"merge","","",9,[[],["result",6]]],[11,"from_diff","","",9,[[],["result",6]]],[11,"into_diff","","",9,[[],["result",6]]],[11,"zeroize","identity_core::crypto::key::key","",22,[[]]],[11,"zeroize","identity_core::crypto","",17,[[]]],[11,"ct_eq","identity_core::crypto::merkle_tree","",24,[[],["choice",3]]],[11,"diff","identity_core::diff","",0,[[],["error",4]]],[11,"merge","","",0,[[],["error",4]]],[11,"convert","","",0,[[],["error",4]]],[11,"get","identity_core::common::object","Index into a JSON array or map. A string index can be used…",7,[[],[["option",4],["value",4]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",7,[[],[["value",4],["option",4]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",7,[[]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",7,[[],[["map",3],["option",4]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",7,[[],[["option",4],["map",3]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",7,[[]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",7,[[],[["vec",3],["option",4]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",7,[[],[["vec",3],["option",4]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",7,[[]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",7,[[],["option",4]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",7,[[]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",7,[[]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",7,[[]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",7,[[]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",7,[[],["option",4]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",7,[[],["option",4]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",7,[[],["option",4]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",7,[[]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",7,[[],["option",4]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",7,[[]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",7,[[],["option",4]]],[11,"pointer","","Looks up a value by a JSON Pointer.",7,[[],[["option",4],["value",4]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",7,[[],[["value",4],["option",4]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",7,[[],["value",4]]]],"p":[[4,"Error"],[3,"DiffHashMap"],[3,"DiffHashSet"],[4,"DiffOption"],[3,"DiffString"],[8,"Diff"],[3,"DiffVec"],[4,"Value"],[3,"Timestamp"],[3,"Url"],[4,"Context"],[4,"OneOrMany"],[3,"OneOrManyIter"],[8,"ToJson"],[8,"FromJson"],[8,"AsJson"],[8,"SerdeInto"],[3,"KeyPair"],[3,"Signature"],[3,"SignatureOptions"],[3,"SignatureValue"],[4,"SignatureData"],[3,"Key"],[8,"Digest"],[3,"Hash"],[3,"MTree"],[3,"Proof"],[4,"Node"],[8,"DigestExt"],[3,"JcsEd25519Signature2020"],[8,"SigName"],[8,"SigSign"],[8,"SigVerify"],[8,"TrySignature"],[8,"TrySignatureMut"],[8,"SetSignature"],[4,"Error"],[4,"Public"],[4,"Secret"]]},\
"identity_credential":{"doc":"Types and traits for working with Verifiable…","i":[[0,"credential","identity_credential","The core types used to create Verifiable Credentials",null,null],[3,"CredentialBuilder","identity_credential::credential","A `CredentialBuilder` is used to create a customized…",null,null],[12,"context","","",0,null],[12,"id","","",0,null],[12,"types","","",0,null],[12,"subject","","",0,null],[12,"issuer","","",0,null],[12,"issuance_date","","",0,null],[12,"expiration_date","","",0,null],[12,"status","","",0,null],[12,"schema","","",0,null],[12,"refresh","","",0,null],[12,"policy","","",0,null],[12,"evidence","","",0,null],[12,"non_transferable","","",0,null],[12,"properties","","",0,null],[3,"Credential","","A `Credential` represents a set of claims describing an…",null,null],[12,"context","","The JSON-LD context(s) applicable to the `Credential`.",1,null],[12,"id","","A unique `URI` referencing the subject of the `Credential`.",1,null],[12,"types","","One or more URIs defining the type of the `Credential`.",1,null],[12,"credential_subject","","One or more `Object`s representing the `Credential`…",1,null],[12,"issuer","","A reference to the issuer of the `Credential`.",1,null],[12,"issuance_date","","A timestamp of when the `Credential` becomes valid.",1,null],[12,"expiration_date","","A timestamp of when the `Credential` should no longer be…",1,null],[12,"credential_status","","Information used to determine the current status of the…",1,null],[12,"credential_schema","","Information used to assist in the enforcement of a…",1,null],[12,"refresh_service","","Service(s) used to refresh an expired `Credential`.",1,null],[12,"terms_of_use","","Terms-of-use specified by the `Credential` issuer.",1,null],[12,"evidence","","Human-readable evidence used to support the claims within…",1,null],[12,"non_transferable","","Indicates that the `Credential` must only be contained…",1,null],[12,"properties","","Miscellaneous properties.",1,null],[3,"Evidence","","Information used to increase confidence in the claims of a…",null,null],[12,"id","","A Url that allows retrieval of information about the…",2,null],[12,"types","","The type(s) of the credential evidence.",2,null],[12,"properties","","Additional properties of the credential evidence.",2,null],[3,"Policy","","Information used to express obligations, prohibitions, and…",null,null],[12,"id","","The instance id of the credential terms-of-use.",3,null],[12,"types","","The type(s) of the credential terms-of-use.",3,null],[12,"properties","","Additional properties of the credential terms-of-use.",3,null],[3,"Refresh","","Information used to refresh or assert the status of a…",null,null],[12,"id","","The Url of the credential refresh service.",4,null],[12,"types","","The type(s) of the credential refresh service.",4,null],[12,"properties","","Additional properties of the credential refresh service.",4,null],[3,"Schema","","Information used to validate the structure of a…",null,null],[12,"id","","A Url identifying the credential schema file.",5,null],[12,"types","","The type(s) of the credential schema.",5,null],[12,"properties","","Additional properties of the credential schema.",5,null],[3,"Status","","Information used to determine the current status of a…",null,null],[12,"id","","A Url identifying the credential status.",6,null],[12,"types","","The type(s) of the credential status.",6,null],[12,"properties","","Additional properties of the credential status.",6,null],[3,"Subject","","An entity who is the target of a set of claims.",null,null],[12,"id","","A Url identifying the credential subject.",7,null],[12,"properties","","Additional properties of the credential subject.",7,null],[3,"VerifiableCredential","","A `VerifiableCredential` represents a `Credential` with an…",null,null],[12,"credential","","",8,null],[12,"proof","","",8,null],[4,"Issuer","","An identifier representing the issuer of a `Credential`.",null,null],[13,"Url","","A credential issuer expressed as a Url.",9,null],[13,"Obj","","A credential issuer expressed as a JSON object.",9,null],[0,"builder","","",null,null],[3,"CredentialBuilder","identity_credential::credential::builder","A `CredentialBuilder` is used to create a customized…",null,null],[12,"context","","",0,null],[12,"id","","",0,null],[12,"types","","",0,null],[12,"subject","","",0,null],[12,"issuer","","",0,null],[12,"issuance_date","","",0,null],[12,"expiration_date","","",0,null],[12,"status","","",0,null],[12,"schema","","",0,null],[12,"refresh","","",0,null],[12,"policy","","",0,null],[12,"evidence","","",0,null],[12,"non_transferable","","",0,null],[12,"properties","","",0,null],[11,"new","identity_credential::credential","Creates a new `CredentialBuilder`.",0,[[]]],[11,"context","","Adds a value to the `Credential` context set.",0,[[]]],[11,"id","","Sets the value of the `Credential` `id`.",0,[[["url",3]]]],[11,"type_","","Adds a value to the `Credential` type set.",0,[[]]],[11,"subject","","Adds a value to the `credentialSubject` set.",0,[[["subject",3]]]],[11,"issuer","","Sets the value of the `Credential` `issuer`.",0,[[]]],[11,"issuance_date","","Sets the value of the `Credential` `issuanceDate`.",0,[[["timestamp",3]]]],[11,"expiration_date","","Sets the value of the `Credential` `expirationDate`.",0,[[["timestamp",3]]]],[11,"status","","Adds a value to the `credentialStatus` set.",0,[[["status",3]]]],[11,"schema","","Adds a value to the `credentialSchema` set.",0,[[["schema",3]]]],[11,"refresh","","Adds a value to the `refreshService` set.",0,[[["refresh",3]]]],[11,"policy","","Adds a value to the `termsOfUse` set.",0,[[["policy",3]]]],[11,"evidence","","Adds a value to the `evidence` set.",0,[[["evidence",3]]]],[11,"non_transferable","","Sets the value of the `Credential` `nonTransferable`…",0,[[]]],[11,"build","","Returns a new `Credential` based on the…",0,[[],[["credential",3],["result",6]]]],[11,"property","","Adds a new custom property to the `Credential`.",0,[[]]],[11,"properties","","Adds a series of custom properties to the `Credential`.",0,[[]]],[0,"credential","","",null,null],[3,"BASE_CONTEXT","identity_credential::credential::credential","",null,null],[12,"__private_field","","",10,null],[3,"Credential","","A `Credential` represents a set of claims describing an…",null,null],[12,"context","","The JSON-LD context(s) applicable to the `Credential`.",1,null],[12,"id","","A unique `URI` referencing the subject of the `Credential`.",1,null],[12,"types","","One or more URIs defining the type of the `Credential`.",1,null],[12,"credential_subject","","One or more `Object`s representing the `Credential`…",1,null],[12,"issuer","","A reference to the issuer of the `Credential`.",1,null],[12,"issuance_date","","A timestamp of when the `Credential` becomes valid.",1,null],[12,"expiration_date","","A timestamp of when the `Credential` should no longer be…",1,null],[12,"credential_status","","Information used to determine the current status of the…",1,null],[12,"credential_schema","","Information used to assist in the enforcement of a…",1,null],[12,"refresh_service","","Service(s) used to refresh an expired `Credential`.",1,null],[12,"terms_of_use","","Terms-of-use specified by the `Credential` issuer.",1,null],[12,"evidence","","Human-readable evidence used to support the claims within…",1,null],[12,"non_transferable","","Indicates that the `Credential` must only be contained…",1,null],[12,"properties","","Miscellaneous properties.",1,null],[11,"base_context","identity_credential::credential","Returns the base JSON-LD context for `Credential`s.",1,[[],["context",4]]],[11,"base_type","","Returns the base type for `Credential`s.",1,[[]]],[11,"builder","","Creates a new `CredentialBuilder` to configure a…",1,[[],["credentialbuilder",3]]],[11,"from_builder","","Returns a new `Credential` based on the…",1,[[["credentialbuilder",3]],["result",6]]],[11,"check_structure","","Validates the semantic structure of the `Credential`.",1,[[],["result",6]]],[11,"sign","","Creates a new [`VerifiableCredential`] by signing `self`…",1,[[["document",3],["secretkey",6]],[["result",6],["verifiablecredential",3]]]],[0,"evidence","","",null,null],[3,"Evidence","identity_credential::credential::evidence","Information used to increase confidence in the claims of a…",null,null],[12,"id","","A Url that allows retrieval of information about the…",2,null],[12,"types","","The type(s) of the credential evidence.",2,null],[12,"properties","","Additional properties of the credential evidence.",2,null],[11,"new","identity_credential::credential","Creates a new [`Evidence`] instance.",2,[[]]],[11,"with_id","","Creates a new [`Evidence`] instance with the given `id`.",2,[[]]],[11,"with_properties","","Creates a new [`Evidence`] instance with the given…",2,[[["object",6]]]],[11,"with_id_and_properties","","Creates a new [`Evidence`] instance with the given `id`…",2,[[["object",6]]]],[0,"issuer","","",null,null],[3,"IssuerData","identity_credential::credential::issuer","A `Credential` issuer in object form.",null,null],[12,"id","","A Url identifying the credential issuer.",11,null],[12,"properties","","Additional properties of the credential issuer.",11,null],[4,"Issuer","","An identifier representing the issuer of a `Credential`.",null,null],[13,"Url","","A credential issuer expressed as a Url.",9,null],[13,"Obj","","A credential issuer expressed as a JSON object.",9,null],[11,"url","identity_credential::credential","Returns a reference to the credential issuer Url.",9,[[],["url",3]]],[0,"policy","","",null,null],[3,"Policy","identity_credential::credential::policy","Information used to express obligations, prohibitions, and…",null,null],[12,"id","","The instance id of the credential terms-of-use.",3,null],[12,"types","","The type(s) of the credential terms-of-use.",3,null],[12,"properties","","Additional properties of the credential terms-of-use.",3,null],[11,"new","identity_credential::credential","Creates a new [`Policy`] instance.",3,[[]]],[11,"with_id","","Creates a new [`Policy`] instance with the given `id`.",3,[[["url",3]]]],[11,"with_properties","","Creates a new [`Policy`] instance with the given…",3,[[["object",6]]]],[11,"with_id_and_properties","","Creates a new [`Policy`] instance with the given `id` and…",3,[[["url",3],["object",6]]]],[0,"refresh","","",null,null],[3,"Refresh","identity_credential::credential::refresh","Information used to refresh or assert the status of a…",null,null],[12,"id","","The Url of the credential refresh service.",4,null],[12,"types","","The type(s) of the credential refresh service.",4,null],[12,"properties","","Additional properties of the credential refresh service.",4,null],[11,"new","identity_credential::credential","Creates a new [`Refresh`].",4,[[["url",3]]]],[11,"with_properties","","Creates a new [`Refresh`] with the given `properties`.",4,[[["url",3],["object",6]]]],[0,"schema","","",null,null],[3,"Schema","identity_credential::credential::schema","Information used to validate the structure of a…",null,null],[12,"id","","A Url identifying the credential schema file.",5,null],[12,"types","","The type(s) of the credential schema.",5,null],[12,"properties","","Additional properties of the credential schema.",5,null],[11,"new","identity_credential::credential","Creates a new [`Schema`].",5,[[["url",3]]]],[11,"with_properties","","Creates a new [`Schema`] with the given `properties`.",5,[[["url",3],["object",6]]]],[0,"status","","",null,null],[3,"Status","identity_credential::credential::status","Information used to determine the current status of a…",null,null],[12,"id","","A Url identifying the credential status.",6,null],[12,"types","","The type(s) of the credential status.",6,null],[12,"properties","","Additional properties of the credential status.",6,null],[11,"new","identity_credential::credential","Creates a new [`Status`].",6,[[["url",3]]]],[11,"with_properties","","Creates a new [`Status`] with the given `properties`.",6,[[["url",3],["object",6]]]],[0,"subject","","",null,null],[3,"Subject","identity_credential::credential::subject","An entity who is the target of a set of claims.",null,null],[12,"id","","A Url identifying the credential subject.",7,null],[12,"properties","","Additional properties of the credential subject.",7,null],[11,"new","identity_credential::credential","Creates a new [`Subject`].",7,[[]]],[11,"with_id","","Creates a new [`Subject`] with the given `id`.",7,[[["url",3]]]],[11,"with_properties","","Creates a new [`Subject`] with the given `properties`.",7,[[["object",6]]]],[11,"with_id_and_properties","","Creates a new [`Subject`] with the given `id` and…",7,[[["url",3],["object",6]]]],[0,"verifiable","","",null,null],[3,"VerifiableCredential","identity_credential::credential::verifiable","A `VerifiableCredential` represents a `Credential` with an…",null,null],[12,"credential","","",8,null],[12,"proof","","",8,null],[11,"new","identity_credential::credential","Creates a new `VerifiableCredential`.",8,[[["credential",3]]]],[11,"proof","","Returns a reference to the `VerifiableCredential` proof.",8,[[],["oneormany",4]]],[11,"proof_mut","","Returns a mutable reference to the `VerifiableCredential`…",8,[[],["oneormany",4]]],[0,"error","identity_credential","Errors that may occur when working with Verifiable…",null,null],[4,"Error","identity_credential::error","This type represents all possible errors that can occur in…",null,null],[13,"DIDError","","Caused by errors from the `identity_did` crate.",12,null],[13,"MissingBaseContext","","Caused when validating a Credential without a valid base…",12,null],[13,"MissingBaseType","","Caused when validating a Credential without a valid base…",12,null],[13,"MissingIssuer","","Caused when validating a Credential without an issuer.",12,null],[13,"MissingSubject","","Caused when validating a Credential without a subject.",12,null],[13,"InvalidSubject","","Caused when validating a Credential with a malformed…",12,null],[6,"Result","","Alias for a `Result` with the error type [`Error`].",null,null],[0,"presentation","identity_credential","The core types used to create Verifiable Presentations",null,null],[3,"PresentationBuilder","identity_credential::presentation","A `PresentationBuilder` is used to create a customized…",null,null],[12,"context","","",13,null],[12,"id","","",13,null],[12,"types","","",13,null],[12,"credentials","","",13,null],[12,"holder","","",13,null],[12,"refresh","","",13,null],[12,"policy","","",13,null],[12,"properties","","",13,null],[3,"Presentation","","A `Presentation` represents a bundle of one or more…",null,null],[12,"context","","The JSON-LD context(s) applicable to the `Presentation`.",14,null],[12,"id","","A unique `URI` referencing the subject of the…",14,null],[12,"types","","One or more URIs defining the type of the `Presentation`.",14,null],[12,"verifiable_credential","","Credential(s) expressing the claims of the `Presentation`.",14,null],[12,"holder","","The entity that generated the presentation.",14,null],[12,"refresh_service","","Service(s) used to refresh an expired `Presentation`.",14,null],[12,"terms_of_use","","Terms-of-use specified by the `Presentation` holder.",14,null],[12,"properties","","Miscellaneous properties.",14,null],[3,"VerifiablePresentation","","A `VerifiablePresentation` represents a `Presentation`…",null,null],[12,"presentation","","",15,null],[12,"proof","","",15,null],[0,"builder","","",null,null],[3,"PresentationBuilder","identity_credential::presentation::builder","A `PresentationBuilder` is used to create a customized…",null,null],[12,"context","","",13,null],[12,"id","","",13,null],[12,"types","","",13,null],[12,"credentials","","",13,null],[12,"holder","","",13,null],[12,"refresh","","",13,null],[12,"policy","","",13,null],[12,"properties","","",13,null],[11,"new","identity_credential::presentation","Creates a new `PresentationBuilder`.",13,[[]]],[11,"context","","Adds a value to the `Presentation` context set.",13,[[]]],[11,"id","","Sets the value of the `Presentation` `id`.",13,[[["url",3]]]],[11,"type_","","Adds a value to the `Presentation` type set.",13,[[]]],[11,"credential","","Adds a value to the `verifiableCredential` set.",13,[[["verifiablecredential",3]]]],[11,"holder","","Sets the value of the `Credential` `holder`.",13,[[["url",3]]]],[11,"refresh","","Adds a value to the `refreshService` set.",13,[[["refresh",3]]]],[11,"policy","","Adds a value to the `termsOfUse` set.",13,[[["policy",3]]]],[11,"build","","Returns a new `Presentation` based on the…",13,[[],[["presentation",3],["result",6]]]],[11,"property","","Adds a new custom property to the `Presentation`.",13,[[]]],[11,"properties","","Adds a series of custom properties to the `Presentation`.",13,[[]]],[0,"presentation","","",null,null],[3,"Presentation","identity_credential::presentation::presentation","A `Presentation` represents a bundle of one or more…",null,null],[12,"context","","The JSON-LD context(s) applicable to the `Presentation`.",14,null],[12,"id","","A unique `URI` referencing the subject of the…",14,null],[12,"types","","One or more URIs defining the type of the `Presentation`.",14,null],[12,"verifiable_credential","","Credential(s) expressing the claims of the `Presentation`.",14,null],[12,"holder","","The entity that generated the presentation.",14,null],[12,"refresh_service","","Service(s) used to refresh an expired `Presentation`.",14,null],[12,"terms_of_use","","Terms-of-use specified by the `Presentation` holder.",14,null],[12,"properties","","Miscellaneous properties.",14,null],[11,"base_context","identity_credential::presentation","Returns the base JSON-LD context for `Presentation`s.",14,[[],["context",4]]],[11,"base_type","","Returns the base type for `Presentation`s.",14,[[]]],[11,"builder","","Creates a `PresentationBuilder` to configure a new…",14,[[],["presentationbuilder",3]]],[11,"from_builder","","Returns a new `Presentation` based on the…",14,[[["presentationbuilder",3]],["result",6]]],[11,"check_structure","","Validates the semantic structure of the `Presentation`.",14,[[],["result",6]]],[0,"verifiable","","",null,null],[3,"VerifiablePresentation","identity_credential::presentation::verifiable","A `VerifiablePresentation` represents a `Presentation`…",null,null],[12,"presentation","","",15,null],[12,"proof","","",15,null],[11,"new","identity_credential::presentation","Creates a new `VerifiablePresentation`.",15,[[["presentation",3]]]],[11,"proof","","Returns a reference to the `VerifiablePresentation` proof.",15,[[],["oneormany",4]]],[11,"proof_mut","","Returns a mutable reference to the…",15,[[],["oneormany",4]]],[11,"from","identity_credential::credential","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","identity_credential::credential::credential","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","identity_credential::credential::issuer","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","identity_credential::error","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","identity_credential::presentation","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","identity_credential::credential","",9,[[]]],[11,"from","identity_credential::error","",12,[[["error",4]]]],[11,"clone","identity_credential::credential","",0,[[],["credentialbuilder",3]]],[11,"clone","","",1,[[],["credential",3]]],[11,"clone","","",2,[[],["evidence",3]]],[11,"clone","identity_credential::credential::issuer","",11,[[],["issuerdata",3]]],[11,"clone","identity_credential::credential","",9,[[],["issuer",4]]],[11,"clone","","",3,[[],["policy",3]]],[11,"clone","","",4,[[],["refresh",3]]],[11,"clone","","",5,[[],["schema",3]]],[11,"clone","","",6,[[],["status",3]]],[11,"clone","","",7,[[],["subject",3]]],[11,"clone","","",8,[[],["verifiablecredential",3]]],[11,"clone","identity_credential::presentation","",13,[[],["presentationbuilder",3]]],[11,"clone","","",14,[[],["presentation",3]]],[11,"clone","","",15,[[],["verifiablepresentation",3]]],[11,"default","identity_credential::credential","",0,[[]]],[11,"default","","",2,[[],["evidence",3]]],[11,"default","","",3,[[],["policy",3]]],[11,"default","","",7,[[],["subject",3]]],[11,"default","identity_credential::presentation","",13,[[]]],[11,"eq","identity_credential::credential","",1,[[["credential",3]]]],[11,"ne","","",1,[[["credential",3]]]],[11,"eq","","",2,[[["evidence",3]]]],[11,"ne","","",2,[[["evidence",3]]]],[11,"eq","identity_credential::credential::issuer","",11,[[["issuerdata",3]]]],[11,"ne","","",11,[[["issuerdata",3]]]],[11,"eq","identity_credential::credential","",9,[[["issuer",4]]]],[11,"ne","","",9,[[["issuer",4]]]],[11,"eq","","",3,[[["policy",3]]]],[11,"ne","","",3,[[["policy",3]]]],[11,"eq","","",4,[[["refresh",3]]]],[11,"ne","","",4,[[["refresh",3]]]],[11,"eq","","",5,[[["schema",3]]]],[11,"ne","","",5,[[["schema",3]]]],[11,"eq","","",6,[[["status",3]]]],[11,"ne","","",6,[[["status",3]]]],[11,"eq","","",7,[[["subject",3]]]],[11,"ne","","",7,[[["subject",3]]]],[11,"eq","","",8,[[["verifiablecredential",3]]]],[11,"ne","","",8,[[["verifiablecredential",3]]]],[11,"eq","identity_credential::presentation","",14,[[["presentation",3]]]],[11,"ne","","",14,[[["presentation",3]]]],[11,"eq","","",15,[[["verifiablepresentation",3]]]],[11,"ne","","",15,[[["verifiablepresentation",3]]]],[11,"deref","identity_credential::credential::credential","",10,[[],["context",4]]],[11,"deref","identity_credential::credential","",8,[[]]],[11,"deref","identity_credential::presentation","",15,[[]]],[11,"deref_mut","identity_credential::credential","",8,[[]]],[11,"deref_mut","identity_credential::presentation","",15,[[]]],[11,"fmt","identity_credential::credential","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","identity_credential::credential::issuer","",11,[[["formatter",3]],["result",6]]],[11,"fmt","identity_credential::credential","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","identity_credential::error","",12,[[["formatter",3]],["result",6]]],[11,"fmt","identity_credential::presentation","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","identity_credential::credential","",1,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",8,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_credential::error","",12,[[["formatter",3]],["result",6]]],[11,"fmt","identity_credential::presentation","",14,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",15,[[["formatter",3]],["fmtresult",6]]],[11,"source","identity_credential::error","",12,[[],[["option",4],["error",8]]]],[11,"initialize","identity_credential::credential::credential","",10,[[]]],[11,"serialize","identity_credential::credential","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","identity_credential::credential::issuer","",11,[[],["result",4]]],[11,"serialize","identity_credential::credential","",9,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","identity_credential::presentation","",14,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"deserialize","identity_credential::credential","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","identity_credential::credential::issuer","",11,[[],["result",4]]],[11,"deserialize","identity_credential::credential","",9,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","identity_credential::presentation","",14,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"signature","identity_credential::credential","",8,[[],[["signature",3],["option",4]]]],[11,"signature","identity_credential::presentation","",15,[[],[["signature",3],["option",4]]]],[11,"signature_mut","identity_credential::credential","",8,[[],[["option",4],["signature",3]]]],[11,"signature_mut","identity_credential::presentation","",15,[[],[["option",4],["signature",3]]]],[11,"set_signature","identity_credential::credential","",8,[[["signature",3]]]],[11,"set_signature","identity_credential::presentation","",15,[[["signature",3]]]]],"p":[[3,"CredentialBuilder"],[3,"Credential"],[3,"Evidence"],[3,"Policy"],[3,"Refresh"],[3,"Schema"],[3,"Status"],[3,"Subject"],[3,"VerifiableCredential"],[4,"Issuer"],[3,"BASE_CONTEXT"],[3,"IssuerData"],[4,"Error"],[3,"PresentationBuilder"],[3,"Presentation"],[3,"VerifiablePresentation"]]},\
"identity_derive":{"doc":"","i":[[5,"internal","identity_derive","Function for dealing with the internal logic of the macro.",null,[[["deriveinput",3]],["tokenstream",3]]],[0,"impls","","",null,null],[0,"enums","identity_derive::impls","",null,null],[5,"derive_diff_enum","identity_derive::impls::enums","derive a Diff type Enum from an incoming `InputModel`.",null,[[["inputmodel",4]],["tokenstream",3]]],[5,"impl_debug_enum","","",null,[[["inputmodel",4]],["tokenstream",3]]],[5,"impl_diff_enum","","derive the `Diff` trait for incoming Enum in `InputModel`.",null,[[["inputmodel",4]],["tokenstream",3]]],[5,"parse_evariants","","function that parses and sorts the variants into twp Vec…",null,[[["ident",3]]]],[5,"parse_merge","","",null,[[["ident",3],["svariant",4]]]],[5,"parse_diff","","parses data for the derived diff function.",null,[[["ident",3],["svariant",4]]]],[5,"parse_from_into","","",null,[[["ident",3],["evariant",3],["svariant",4]]]],[5,"populate_field_names","","",null,[[["svariant",4]]]],[0,"structs","identity_derive::impls","",null,null],[5,"derive_diff_struct","identity_derive::impls::structs","Derive the difference struct code from the `InputModel`",null,[[["inputmodel",4]],["tokenstream",3]]],[5,"debug_impl","","Implement the Debug trait on a derived struct.",null,[[["inputmodel",4]],["tokenstream",3]]],[5,"impl_from_into","","",null,[[["inputmodel",4]],["tokenstream",3]]],[5,"diff_impl","","implement Diff for the struct.",null,[[["inputmodel",4]],["tokenstream",3]]],[0,"model","identity_derive","",null,null],[3,"InputEnum","identity_derive::model","Sorts attributes regarding incoming Enums.",null,null],[12,"name","","",0,null],[12,"diff","","",0,null],[12,"variants","","",0,null],[12,"param_decls","","",0,null],[12,"params","","",0,null],[12,"clause","","",0,null],[12,"from_into","","",0,null],[3,"InputStruct","","Sorts data regarding incoming Structs.",null,null],[12,"variant","","",1,null],[12,"name","","",1,null],[12,"diff","","",1,null],[12,"fields","","",1,null],[12,"param_decls","","",1,null],[12,"params","","",1,null],[12,"clause","","",1,null],[12,"from_into","","",1,null],[3,"EVariant","","Enum variant data.",null,null],[12,"variant","","",2,null],[12,"name","","",2,null],[12,"fields","","",2,null],[4,"InputModel","","A model for dealing with the different input from the…",null,null],[13,"Enum","","",3,null],[13,"Struct","","",3,null],[4,"SVariant","","Struct Variant structure types.",null,null],[13,"Named","","",4,null],[13,"Tuple","","",4,null],[13,"Unit","","",4,null],[4,"DataFields","","sorts data for fields inside of a struct or enum.",null,null],[13,"Named","","",5,null],[12,"name","identity_derive::model::DataFields","",6,null],[12,"typ","","",6,null],[12,"should_ignore","","",6,null],[13,"Unnamed","identity_derive::model","",5,null],[12,"position","identity_derive::model::DataFields","",7,null],[12,"typ","","",7,null],[12,"should_ignore","","",7,null],[11,"parse","identity_derive::model","",3,[[["deriveinput",3]]]],[11,"parse_struct","","parse structs.",3,[[["fields",4],["deriveinput",3]]]],[11,"parse_unit","","parse unit structs.",3,[[["deriveinput",3]]]],[11,"parse_enum","","parse enums.",3,[[["punctuated",3],["deriveinput",3]]]],[11,"s_variant","","get struct variant.",3,[[],["svariant",4]]],[11,"e_variants","","get enum variant.",3,[[],["vec",3]]],[11,"name","","get name of struct or enum.",3,[[],["ident",3]]],[11,"diff","","get diff name for enum or struct.",3,[[],["ident",3]]],[11,"params","","get the params for the Enum or Struct.",3,[[],["punctuated",3]]],[11,"param_decls","","get the param declarations for the Enum or Struct.",3,[[],["punctuated",3]]],[11,"fields","","get the fields for the Enum or Struct.",3,[[],["vec",3]]],[11,"clause","","Get the where clause.",3,[[],["whereclause",3]]],[11,"impl_debug","","Implement the `Debug` trait on Enums and Structs.",3,[[],["tokenstream",3]]],[11,"impl_from_into","","",3,[[],["tokenstream",3]]],[11,"impl_diff","","Implement the `Diff` trait on Enums and Structs.",3,[[],["tokenstream",3]]],[11,"derive_diff","","Build the Diff Type for the Enum or Struct.",3,[[],["tokenstream",3]]],[11,"from_into","","",3,[[]]],[11,"new","","create a new `InputEnum`.",0,[[["deriveinput",3]]]],[11,"parse","","parse the enum.",0,[[["punctuated",3],["deriveinput",3]]]],[11,"new","","create a new `InputStruct`.",1,[[["deriveinput",3]]]],[11,"parse","","parse the ast into for the `InputStruct`.",1,[[["fields",4],["deriveinput",3]]]],[11,"parse_unit","","parse data for a unit struct.",1,[[["deriveinput",3]]]],[11,"new","","create a new enum variant type.",2,[[["ident",3]]]],[11,"name","","get the field name.",5,[[],["ident",3]]],[11,"position","","get the field position.",5,[[],["literal",3]]],[11,"typ","","get the field type.",5,[[],["type",4]]],[11,"typ_as_tokens","","get the type of the field wrapped in an `Option<T>` where…",5,[[],["tokenstream",3]]],[11,"is_option","","check if the field is an Option to avoid nested Options.",5,[[]]],[11,"should_ignore","","check to see if the should ignore flag is set for the field.",5,[[]]],[0,"utils","identity_derive","",null,null],[5,"extract_option_segment","identity_derive::utils","checks to see if a field\'s type is `Option`. This logic is…",null,[[["path",3]],[["pathsegment",3],["option",4]]]],[5,"should_ignore","","checks to see if the `should_ignore` attribute has been…",null,[[["field",3]]]],[5,"parse_from_into","","",null,[[["deriveinput",3]]]],[17,"PARENS","","",null,null],[24,"Diff","identity_derive","Entry point for the `Diff` derive proc macro. `Diff`…",null,null],[11,"from","identity_derive::model","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"clone","","",3,[[],["inputmodel",4]]],[11,"clone","","",0,[[],["inputenum",3]]],[11,"clone","","",1,[[],["inputstruct",3]]],[11,"clone","","",2,[[],["evariant",3]]],[11,"clone","","",4,[[],["svariant",4]]],[11,"clone","","",5,[[],["datafields",4]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]]],"p":[[3,"InputEnum"],[3,"InputStruct"],[3,"EVariant"],[4,"InputModel"],[4,"SVariant"],[4,"DataFields"],[13,"Named"],[13,"Unnamed"]]},\
"identity_did":{"doc":"Agnostic implementation of the Decentralized Identifiers…","i":[[3,"DID","identity_did::did","A Decentralized Identifier (DID).",null,null],[12,"data","","",0,null],[12,"core","","",0,null],[4,"Error","","",null,null],[13,"InvalidAuthority","","",1,null],[13,"InvalidFragment","","",1,null],[13,"InvalidMethodId","","",1,null],[13,"InvalidMethodName","","",1,null],[13,"InvalidPath","","",1,null],[13,"InvalidQuery","","",1,null],[13,"InvalidScheme","","",1,null],[6,"Result","","",null,null],[14,"did","","A helper macro to assist with the construction of [`DID`]s.",null,null],[0,"diff","identity_did","",null,null],[3,"DiffDocument","identity_did::diff","",null,null],[12,"id","","",2,null],[12,"controller","","",2,null],[12,"also_known_as","","",2,null],[12,"verification_method","","",2,null],[12,"authentication","","",2,null],[12,"assertion_method","","",2,null],[12,"key_agreement","","",2,null],[12,"capability_delegation","","",2,null],[12,"capability_invocation","","",2,null],[12,"service","","",2,null],[12,"properties","","",2,null],[3,"DiffMethod","","",null,null],[12,"id","","",3,null],[12,"controller","","",3,null],[12,"key_type","","",3,null],[12,"key_data","","",3,null],[12,"properties","","",3,null],[3,"DiffService","","",null,null],[12,"id","","",4,null],[12,"type_","","",4,null],[12,"service_endpoint","","",4,null],[12,"properties","","",4,null],[4,"DiffMethodData","","",null,null],[13,"PublicKeyBase58","","",5,null],[13,"PublicKeyHex","","",5,null],[13,"PublicKeyJwk","","",5,null],[4,"DiffMethodRef","","",null,null],[13,"Embed","","",6,null],[13,"Refer","","",6,null],[0,"did_key","","",null,null],[0,"document","","",null,null],[3,"DiffDocument","identity_did::diff::document","",null,null],[12,"id","","",2,null],[12,"controller","","",2,null],[12,"also_known_as","","",2,null],[12,"verification_method","","",2,null],[12,"authentication","","",2,null],[12,"assertion_method","","",2,null],[12,"key_agreement","","",2,null],[12,"capability_delegation","","",2,null],[12,"capability_invocation","","",2,null],[12,"service","","",2,null],[12,"properties","","",2,null],[0,"method","identity_did::diff","",null,null],[3,"DiffMethod","identity_did::diff::method","",null,null],[12,"id","","",3,null],[12,"controller","","",3,null],[12,"key_type","","",3,null],[12,"key_data","","",3,null],[12,"properties","","",3,null],[0,"method_data","identity_did::diff","",null,null],[4,"DiffMethodData","identity_did::diff::method_data","",null,null],[13,"PublicKeyBase58","","",5,null],[13,"PublicKeyHex","","",5,null],[13,"PublicKeyJwk","","",5,null],[0,"method_ref","identity_did::diff","",null,null],[4,"DiffMethodRef","identity_did::diff::method_ref","",null,null],[13,"Embed","","",6,null],[13,"Refer","","",6,null],[0,"method_type","identity_did::diff","",null,null],[0,"ordered_set","","",null,null],[0,"service","","",null,null],[3,"DiffService","identity_did::diff::service","",null,null],[12,"id","","",4,null],[12,"type_","","",4,null],[12,"service_endpoint","","",4,null],[12,"properties","","",4,null],[0,"document","identity_did","",null,null],[3,"DocumentBuilder","identity_did::document","A `DocumentBuilder` is used to generate a customized…",null,null],[12,"id","","",7,null],[12,"controller","","",7,null],[12,"also_known_as","","",7,null],[12,"verification_method","","",7,null],[12,"authentication","","",7,null],[12,"assertion_method","","",7,null],[12,"key_agreement","","",7,null],[12,"capability_delegation","","",7,null],[12,"capability_invocation","","",7,null],[12,"service","","",7,null],[12,"properties","","",7,null],[3,"Document","","A DID Document",null,null],[12,"id","","",8,null],[12,"controller","","",8,null],[12,"also_known_as","","",8,null],[12,"verification_method","","",8,null],[12,"authentication","","",8,null],[12,"assertion_method","","",8,null],[12,"key_agreement","","",8,null],[12,"capability_delegation","","",8,null],[12,"capability_invocation","","",8,null],[12,"service","","",8,null],[12,"properties","","",8,null],[0,"builder","","",null,null],[3,"DocumentBuilder","identity_did::document::builder","A `DocumentBuilder` is used to generate a customized…",null,null],[12,"id","","",7,null],[12,"controller","","",7,null],[12,"also_known_as","","",7,null],[12,"verification_method","","",7,null],[12,"authentication","","",7,null],[12,"assertion_method","","",7,null],[12,"key_agreement","","",7,null],[12,"capability_delegation","","",7,null],[12,"capability_invocation","","",7,null],[12,"service","","",7,null],[12,"properties","","",7,null],[11,"new","identity_did::document","Creates a new `DocumentBuilder`.",7,[[]]],[11,"id","","Sets the `id` value of the generated `Document`.",7,[[["did",3]]]],[11,"controller","","Sets the `controller` value of the generated `Document`.",7,[[["did",3]]]],[11,"also_known_as","","Adds a value to the `alsoKnownAs` set of the generated…",7,[[["url",3]]]],[11,"verification_method","","Adds a value to the `verificationMethod` set of the…",7,[[["method",3]]]],[11,"authentication","","Adds a value to the `authentication` set of the generated…",7,[[]]],[11,"assertion_method","","Adds a value to the `assertionMethod` set of the generated…",7,[[]]],[11,"key_agreement","","Adds a value to the `keyAgreement` set of the generated…",7,[[]]],[11,"capability_delegation","","Adds a value to the `capabilityDelegation` set of the…",7,[[]]],[11,"capability_invocation","","Adds a value to the `capabilityInvocation` set of the…",7,[[]]],[11,"service","","Adds a value to the `service` set of the generated…",7,[[["service",3]]]],[11,"build","","Returns a new `Document` based on the `DocumentBuilder`…",7,[[],[["document",3],["result",6]]]],[0,"document","","",null,null],[3,"Document","identity_did::document::document","A DID Document",null,null],[12,"id","","",8,null],[12,"controller","","",8,null],[12,"also_known_as","","",8,null],[12,"verification_method","","",8,null],[12,"authentication","","",8,null],[12,"assertion_method","","",8,null],[12,"key_agreement","","",8,null],[12,"capability_delegation","","",8,null],[12,"capability_invocation","","",8,null],[12,"service","","",8,null],[12,"properties","","",8,null],[11,"builder","identity_did::document","Creates a `DocumentBuilder` to configure a new `Document`.",8,[[],["documentbuilder",3]]],[11,"from_builder","","Returns a new `Document` based on the `DocumentBuilder`…",8,[[["documentbuilder",3]],["result",6]]],[11,"id","","Returns a reference to the `Document` id.",8,[[],["did",3]]],[11,"id_mut","","Returns a mutable reference to the `Document` id.",8,[[],["did",3]]],[11,"controller","","Returns a reference to the `Document` controller.",8,[[],[["did",3],["option",4]]]],[11,"controller_mut","","Returns a mutable reference to the `Document` controller.",8,[[],[["did",3],["option",4]]]],[11,"also_known_as","","Returns a reference to the `Document` alsoKnownAs set.",8,[[]]],[11,"also_known_as_mut","","Returns a mutable reference to the `Document` alsoKnownAs…",8,[[],["vec",3]]],[11,"verification_method","","Returns a reference to the `Document` verificationMethod…",8,[[],["orderedset",3]]],[11,"verification_method_mut","","Returns a mutable reference to the `Document`…",8,[[],["orderedset",3]]],[11,"authentication","","Returns a reference to the `Document` authentication set.",8,[[],["orderedset",3]]],[11,"authentication_mut","","Returns a mutable reference to the `Document`…",8,[[],["orderedset",3]]],[11,"assertion_method","","Returns a reference to the `Document` assertionMethod set.",8,[[],["orderedset",3]]],[11,"assertion_method_mut","","Returns a mutable reference to the `Document`…",8,[[],["orderedset",3]]],[11,"key_agreement","","Returns a reference to the `Document` keyAgreement set.",8,[[],["orderedset",3]]],[11,"key_agreement_mut","","Returns a mutable reference to the `Document` keyAgreement…",8,[[],["orderedset",3]]],[11,"capability_delegation","","Returns a reference to the `Document` capabilityDelegation…",8,[[],["orderedset",3]]],[11,"capability_delegation_mut","","Returns a mutable reference to the `Document`…",8,[[],["orderedset",3]]],[11,"capability_invocation","","Returns a reference to the `Document` capabilityInvocation…",8,[[],["orderedset",3]]],[11,"capability_invocation_mut","","Returns a mutable reference to the `Document`…",8,[[],["orderedset",3]]],[11,"service","","Returns a reference to the `Document` service set.",8,[[],["orderedset",3]]],[11,"service_mut","","Returns a mutable reference to the `Document` service set.",8,[[],["orderedset",3]]],[11,"properties","","Returns a reference to the custom `Document` properties.",8,[[]]],[11,"properties_mut","","Returns a mutable reference to the custom `Document`…",8,[[]]],[11,"map","","Maps `Document<T>` to `Document<U>` by applying a function…",8,[[],["document",3]]],[11,"try_map","","A fallible version of `Document::map(..)`.",8,[[],[["document",3],["result",6]]]],[11,"resolve","","Finds and returns the first verification `Method` matching…",8,[[],[["methodwrap",3],["option",4]]]],[11,"try_resolve","","Finds and returns the first verification `Method` matching…",8,[[],[["result",6],["methodwrap",3]]]],[11,"resolve_bytes","","",8,[[],[["vec",3],["option",4]]]],[11,"try_resolve_bytes","","",8,[[],[["vec",3],["result",6]]]],[11,"resolve_options","","",8,[[],[["signatureoptions",3],["result",6]]]],[11,"resolve_method","","",8,[[["methodquery",3]],[["methodwrap",3],["option",4]]]],[11,"resolve_verification_method","","",8,[[["methodquery",3]],[["methodwrap",3],["option",4]]]],[0,"error","identity_did","Errors that may occur when working with Decentralized…",null,null],[4,"Error","identity_did::error","This type represents all possible errors that can occur in…",null,null],[13,"CoreError","","Caused by errors from the `identity_core` crate.",9,null],[13,"DIDError","","Caused by errors from the `did_url` crate.",9,null],[13,"OrderedSetDuplicate","","",9,null],[13,"QueryMethodNotFound","","",9,null],[13,"InvalidDocumentId","","",9,null],[13,"InvalidServiceId","","",9,null],[13,"InvalidServiceType","","",9,null],[13,"InvalidServiceEndpoint","","",9,null],[13,"InvalidMethodId","","",9,null],[13,"InvalidMethodIdFragment","","",9,null],[13,"InvalidMethodController","","",9,null],[13,"InvalidMethodType","","",9,null],[13,"InvalidMethodData","","",9,null],[13,"UnknownMethodScope","","",9,null],[13,"UnknownMethodType","","",9,null],[13,"UnknownSignatureType","","",9,null],[13,"InvalidKeyData","","",9,null],[13,"InvalidKeyDataBase16","","",9,null],[13,"InvalidKeyDataBase58","","",9,null],[13,"MissingResolutionDID","","",9,null],[13,"MissingResolutionMetadata","","",9,null],[13,"MissingResolutionDocument","","",9,null],[13,"MissingResolutionData","","",9,null],[13,"InvalidDIDQuery","","",9,null],[13,"InvalidDIDFragment","","",9,null],[13,"InvalidServiceProtocol","","",9,null],[6,"Result","","Alias for a `Result` with the error type [`Error`].",null,null],[0,"resolution","identity_did","Types and traits for DID Document resolution.",null,null],[3,"Dereference","identity_did::resolution","The output returned from DID URL dereferencing.",null,null],[12,"metadata","","Metadata regarding the base resolution process.",10,null],[12,"content","","The output resource of a successful dereference.",10,null],[12,"content_metadata","","Content-specific metadata.",10,null],[3,"DocumentMetadata","","Metadata associated with a resolved DID Document.",null,null],[12,"created","","The timestamp of the Create operation.",11,null],[12,"updated","","The timestamp of the last Update operation.",11,null],[12,"properties","","Additional document metadata properties.",11,null],[3,"InputMetadata","","Input options used to configure a DID resolution process.",null,null],[12,"accept","","The MIME type of the preferred representation of the DID…",12,null],[12,"properties","","Additional input metadata properties.",12,null],[3,"Resolution","","The output returned from DID resolution.",null,null],[12,"metadata","","Resolution-specific metadata.",13,null],[12,"document","","The DID Document of a successful resolution.",13,null],[12,"document_metadata","","Document-specific metadata.",13,null],[3,"ResolutionMetadata","","Metadata associated with a DID resolution process.",null,null],[12,"error","","The error code from the resolution process, if an error…",14,null],[12,"content_type","","The MIME type of the returned document stream.",14,null],[12,"duration","","The elapsed time of the resolution operation.",14,null],[12,"resolved","","The parsed DID that was used for resolution.",14,null],[12,"properties","","Additional resolution metadata properties.",14,null],[3,"MetaDocument","","A resolved [`Document`] and associated [`DocumentMetadata`].",null,null],[12,"data","","A resolved DID Document.",15,null],[12,"meta","","Information regarding the associated Documents resolution…",15,null],[4,"ErrorKind","","Types of errors that be returned from a DID resolution…",null,null],[13,"InvalidDID","","The DID supplied to the DID resolution function does not…",16,null],[13,"NotSupported","","The DID resolver does not support the specified method.",16,null],[13,"NotFound","","The DID resolver was unable to return the DID document…",16,null],[4,"PrimaryResource","","A primary resource returned from a DID URL dereferencing…",null,null],[13,"Document","","A dereferenced DID Document.",17,null],[13,"Service","","A dereferenced DID Document service endpoint.",17,null],[4,"Resource","","A resource returned from a DID URL dereferencing process.",null,null],[13,"Primary","","A dereferenced primary resource.",18,null],[13,"Secondary","","A dereferenced secondary resource.",18,null],[4,"SecondaryResource","","A secondary resource returned from a DID URL dereferencing…",null,null],[13,"VerificationDID","","A DID Document Method Id.",19,null],[13,"VerificationKey","","A DID Document Verification Method.",19,null],[13,"Service","","A DID Document Service.",19,null],[5,"dereference","","Dereferences a DID URL into a primary or secondary resource.",null,[[["inputmetadata",3]]]],[5,"resolve","","Resolves a DID into a DID Document by using the \\\"Read\\\"…",null,[[["inputmetadata",3]]]],[0,"dereference","","",null,null],[3,"Dereference","identity_did::resolution::dereference","The output returned from DID URL dereferencing.",null,null],[12,"metadata","","Metadata regarding the base resolution process.",10,null],[12,"content","","The output resource of a successful dereference.",10,null],[12,"content_metadata","","Content-specific metadata.",10,null],[11,"new","identity_did::resolution","Creates a new [`Dereference`].",10,[[]]],[0,"document_metadata","","",null,null],[3,"DocumentMetadata","identity_did::resolution::document_metadata","Metadata associated with a resolved DID Document.",null,null],[12,"created","","The timestamp of the Create operation.",11,null],[12,"updated","","The timestamp of the last Update operation.",11,null],[12,"properties","","Additional document metadata properties.",11,null],[11,"new","identity_did::resolution","Creates a new [`DocumentMetadata`].",11,[[]]],[0,"error_kind","","",null,null],[4,"ErrorKind","identity_did::resolution::error_kind","Types of errors that be returned from a DID resolution…",null,null],[13,"InvalidDID","","The DID supplied to the DID resolution function does not…",16,null],[13,"NotSupported","","The DID resolver does not support the specified method.",16,null],[13,"NotFound","","The DID resolver was unable to return the DID document…",16,null],[0,"impls","identity_did::resolution","",null,null],[3,"ResolveContext","identity_did::resolution::impls","",null,null],[12,"0","","",20,null],[12,"1","","",20,null],[3,"DerefContext","","",null,null],[12,"0","","",21,null],[12,"1","","",21,null],[5,"resolve","","Resolves a DID into a DID Document by using the \\\"Read\\\"…",null,[[["inputmetadata",3]]]],[5,"dereference","","Dereferences a DID URL into a primary or secondary resource.",null,[[["inputmetadata",3]]]],[5,"dereference_primary","","",null,[[["did",3],["document",3]],[["result",6],["option",4]]]],[5,"dereference_document","","",null,[[["document",3]],[["option",4],["result",6]]]],[5,"service_endpoint_ctor","","",null,[[["did",3],["url",3]],[["result",6],["url",3]]]],[11,"new","","",20,[[]]],[11,"set_document","","",20,[[["document",3]]]],[11,"set_metadata","","",20,[[["documentmetadata",3]]]],[11,"set_resolved","","",20,[[["did",3]]]],[11,"set_error","","",20,[[["errorkind",4]]]],[11,"finish_error","","",20,[[["errorkind",4]],["resolution",3]]],[11,"finish","","",20,[[],["resolution",3]]],[11,"new","","",21,[[]]],[11,"set_content","","",21,[[]]],[11,"set_metadata","","",21,[[["documentmetadata",3]]]],[11,"set_error","","",21,[[["errorkind",4]]]],[11,"finish_error","","",21,[[["errorkind",4]],["dereference",3]]],[11,"finish","","",21,[[],["dereference",3]]],[0,"input_metadata","identity_did::resolution","",null,null],[3,"InputMetadata","identity_did::resolution::input_metadata","Input options used to configure a DID resolution process.",null,null],[12,"accept","","The MIME type of the preferred representation of the DID…",12,null],[12,"properties","","Additional input metadata properties.",12,null],[17,"MIME_DID","","The content type of a JSON DID Document.",null,null],[17,"MIME_DID_LD","","The content type of a JSON-LD DID Document.",null,null],[11,"new","identity_did::resolution","Creates a new [`InputMetadata`].",12,[[]]],[0,"resolution","","",null,null],[3,"Resolution","identity_did::resolution::resolution","The output returned from DID resolution.",null,null],[12,"metadata","","Resolution-specific metadata.",13,null],[12,"document","","The DID Document of a successful resolution.",13,null],[12,"document_metadata","","Document-specific metadata.",13,null],[11,"new","identity_did::resolution","Creates a new [`Resolution`].",13,[[]]],[0,"resolution_metadata","","",null,null],[3,"ResolutionMetadata","identity_did::resolution::resolution_metadata","Metadata associated with a DID resolution process.",null,null],[12,"error","","The error code from the resolution process, if an error…",14,null],[12,"content_type","","The MIME type of the returned document stream.",14,null],[12,"duration","","The elapsed time of the resolution operation.",14,null],[12,"resolved","","The parsed DID that was used for resolution.",14,null],[12,"properties","","Additional resolution metadata properties.",14,null],[11,"new","identity_did::resolution","Creates a new [`ResolutionMetadata`].",14,[[]]],[0,"resource","","",null,null],[4,"Resource","identity_did::resolution::resource","A resource returned from a DID URL dereferencing process.",null,null],[13,"Primary","","A dereferenced primary resource.",18,null],[13,"Secondary","","A dereferenced secondary resource.",18,null],[4,"PrimaryResource","","A primary resource returned from a DID URL dereferencing…",null,null],[13,"Document","","A dereferenced DID Document.",17,null],[13,"Service","","A dereferenced DID Document service endpoint.",17,null],[4,"SecondaryResource","","A secondary resource returned from a DID URL dereferencing…",null,null],[13,"VerificationDID","","A DID Document Method Id.",19,null],[13,"VerificationKey","","A DID Document Verification Method.",19,null],[13,"Service","","A DID Document Service.",19,null],[0,"traits","identity_did::resolution","",null,null],[3,"MetaDocument","identity_did::resolution::traits","A resolved [`Document`] and associated [`DocumentMetadata`].",null,null],[12,"data","","A resolved DID Document.",15,null],[12,"meta","","Information regarding the associated Documents resolution…",15,null],[8,"ResolverMethod","","A trait for generic DID Resolvers.",null,null],[10,"is_supported","","Returns `true` if the given `did` is supported by this DID…",22,[[["did",3]]]],[10,"read","","Performs the \\\"Read\\\" operation of the DID method.",22,[[["did",3],["inputmetadata",3]],[["pin",3],["box",3]]]],[17,"MIME_DID","identity_did::resolution","The content type of a JSON DID Document.",null,null],[17,"MIME_DID_LD","","The content type of a JSON-LD DID Document.",null,null],[8,"ResolverMethod","","A trait for generic DID Resolvers.",null,null],[10,"is_supported","","Returns `true` if the given `did` is supported by this DID…",22,[[["did",3]]]],[10,"read","","Performs the \\\"Read\\\" operation of the DID method.",22,[[["did",3],["inputmetadata",3]],[["pin",3],["box",3]]]],[0,"service","identity_did","",null,null],[3,"ServiceBuilder","identity_did::service","A `ServiceBuilder` is used to generate a customized…",null,null],[12,"id","","",23,null],[12,"type_","","",23,null],[12,"service_endpoint","","",23,null],[12,"properties","","",23,null],[3,"Service","","A DID Document Service",null,null],[12,"id","","",24,null],[12,"type_","","",24,null],[12,"service_endpoint","","",24,null],[12,"properties","","",24,null],[0,"builder","","",null,null],[3,"ServiceBuilder","identity_did::service::builder","A `ServiceBuilder` is used to generate a customized…",null,null],[12,"id","","",23,null],[12,"type_","","",23,null],[12,"service_endpoint","","",23,null],[12,"properties","","",23,null],[11,"new","identity_did::service","Creates a new `ServiceBuilder`.",23,[[]]],[11,"id","","Sets the `id` value of the generated `Service`.",23,[[["did",3]]]],[11,"type_","","Sets the `type` value of the generated `Service`.",23,[[]]],[11,"service_endpoint","","Sets the `serviceEndpoint` value of the generated `Service`.",23,[[["url",3]]]],[11,"build","","Returns a new `Service` based on the `ServiceBuilder`…",23,[[],[["service",3],["result",6]]]],[0,"service","","",null,null],[3,"Service","identity_did::service::service","A DID Document Service",null,null],[12,"id","","",24,null],[12,"type_","","",24,null],[12,"service_endpoint","","",24,null],[12,"properties","","",24,null],[11,"builder","identity_did::service","Creates a `ServiceBuilder` to configure a new `Service`.",24,[[],["servicebuilder",3]]],[11,"from_builder","","Returns a new `Service` based on the `ServiceBuilder`…",24,[[["servicebuilder",3]],["result",6]]],[11,"id","","Returns a reference to the `Service` id.",24,[[],["did",3]]],[11,"id_mut","","Returns a mutable reference to the `Service` id.",24,[[],["did",3]]],[11,"type_","","Returns a reference to the `Service` type.",24,[[]]],[11,"type_mut","","Returns a mutable reference to the `Service` type.",24,[[],["string",3]]],[11,"service_endpoint","","Returns a reference to the `Service` endpoint.",24,[[],["url",3]]],[11,"service_endpoint_mut","","Returns a mutable reference to the `Service` endpoint.",24,[[],["url",3]]],[11,"properties","","Returns a reference to the custom `Service` properties.",24,[[]]],[11,"properties_mut","","Returns a mutable reference to the custom `Service`…",24,[[]]],[0,"utils","identity_did","",null,null],[3,"DIDKey","identity_did::utils","A helper struct for comparing types only by `DID`.",null,null],[12,"0","","",25,null],[3,"OrderedSet","","An ordered set based on a `Vec<T>`.",null,null],[12,"0","","",26,null],[0,"did_key","","",null,null],[3,"DIDKey","identity_did::utils::did_key","A helper struct for comparing types only by `DID`.",null,null],[12,"0","","",25,null],[11,"new","identity_did::utils","Create a new `DIDKey`.",25,[[]]],[11,"into_inner","","Consumes the `DIDKey` and returns the inner `T`.",25,[[]]],[11,"as_did","","Returns a reference to the `DID`.",25,[[],["did",3]]],[0,"ordered_set","","",null,null],[3,"OrderedSet","identity_did::utils::ordered_set","An ordered set based on a `Vec<T>`.",null,null],[12,"0","","",26,null],[11,"new","identity_did::utils","Creates a new `OrderedSet`.",26,[[]]],[11,"with_capacity","","Creates a new `OrderedSet` with the specified capacity.",26,[[]]],[11,"len","","Returns the number of elements in the `OrderedSet`.",26,[[]]],[11,"is_empty","","Returns `true` if the `OrderedSet` contains no elements.",26,[[]]],[11,"iter","","Returns an iterator over the slice of elements.",26,[[],["iter",3]]],[11,"head","","Returns the first element in the set, or `None` if the set…",26,[[],["option",4]]],[11,"head_mut","","Returns a mutable referece to the first element in the…",26,[[],["option",4]]],[11,"tail","","Returns the last element in the set, or `None` if the set…",26,[[],["option",4]]],[11,"tail_mut","","Returns a mutable referece the last element in the set, or…",26,[[],["option",4]]],[11,"as_slice","","Returns a slice containing all elements in the `OrderedSet`.",26,[[]]],[11,"into_vec","","Consumes the `OrderedSet` and returns the elements as a…",26,[[],["vec",3]]],[11,"clear","","Clears the `OrderedSet`, removing all values.",26,[[]]],[11,"contains","","Returns `true` if the `OrderedSet` contains the given value.",26,[[]]],[11,"append","","Adds a new value to the end of the `OrderedSet`; returns…",26,[[]]],[11,"prepend","","Adds a new value to the start of the `OrderedSet`; returns…",26,[[]]],[11,"replace","","Replaces a `current` value with the given `update` value;…",26,[[]]],[11,"update","","Updates an existing value in the `OrderedSet`; returns…",26,[[]]],[11,"change","","",26,[[]]],[0,"verifiable","identity_did","",null,null],[3,"LdSuite","identity_did::verifiable","",null,null],[12,"suite","","",27,null],[12,"methods","","",27,null],[3,"Properties","","",null,null],[12,"properties","","",28,null],[12,"proof","","",28,null],[0,"document","","",null,null],[11,"into_verifiable","identity_did::document","",8,[[],[["document",3],["properties",3]]]],[11,"into_verifiable2","","",8,[[["signature",3]],[["document",3],["properties",3]]]],[11,"proof","","",8,[[],[["option",4],["signature",3]]]],[11,"proof_mut","","",8,[[],[["signature",3],["option",4]]]],[11,"set_proof","","",8,[[["signature",3]]]],[0,"ld_suite","identity_did::verifiable","",null,null],[3,"LdSuite","identity_did::verifiable::ld_suite","",null,null],[12,"suite","","",27,null],[12,"methods","","",27,null],[11,"new","identity_did::verifiable","",27,[[]]],[11,"with_methods","","",27,[[]]],[11,"sign","","",27,[[["signatureoptions",3]],["result",6]]],[11,"verify","","",27,[[],["result",6]]],[11,"verify_data","","",27,[[],["result",6]]],[0,"properties","","",null,null],[3,"Properties","identity_did::verifiable::properties","",null,null],[12,"properties","","",28,null],[12,"proof","","",28,null],[11,"new","identity_did::verifiable","",28,[[]]],[11,"with_proof","","",28,[[["signature",3]]]],[11,"proof","","",28,[[],[["option",4],["signature",3]]]],[11,"proof_mut","","",28,[[],[["signature",3],["option",4]]]],[11,"set_proof","","",28,[[["signature",3]]]],[0,"traits","","",null,null],[8,"ResolveMethod","identity_did::verifiable::traits","",null,null],[10,"resolve_method","","",29,[[["methodquery",3]],[["option",4],["methodwrap",3]]]],[11,"try_resolve_method","","",29,[[["methodquery",3]],[["result",6],["methodwrap",3]]]],[8,"ResolveMethod","identity_did::verifiable","",null,null],[10,"resolve_method","","",29,[[["methodquery",3]],[["option",4],["methodwrap",3]]]],[11,"try_resolve_method","identity_did::verifiable::traits","",29,[[["methodquery",3]],[["result",6],["methodwrap",3]]]],[0,"verification","identity_did","",null,null],[3,"MethodBuilder","identity_did::verification","A `MethodBuilder` is used to generate a customized `Method`.",null,null],[12,"id","","",30,null],[12,"controller","","",30,null],[12,"key_type","","",30,null],[12,"key_data","","",30,null],[12,"properties","","",30,null],[3,"Method","","A DID Document Verification Method",null,null],[12,"id","","",31,null],[12,"controller","","",31,null],[12,"key_type","","",31,null],[12,"key_data","","",31,null],[12,"properties","","",31,null],[3,"MethodQuery","","Specifies the conditions of a DID document method…",null,null],[12,"ident","","",32,null],[12,"scope","","",32,null],[3,"MethodWrap","","A queried `Method` with additional metadata about the…",null,null],[12,"method","","",33,null],[12,"index","","",33,null],[12,"scope","","",33,null],[4,"MethodData","","Supported verification method data formats.",null,null],[13,"PublicKeyBase58","","",34,null],[13,"PublicKeyHex","","",34,null],[13,"PublicKeyJwk","","",34,null],[4,"MethodIdent","","Index or identifier used to identify the target…",null,null],[13,"Index","","",35,null],[13,"Ident","","",35,null],[4,"MethodRef","","A reference to a verification method, either a `DID` or…",null,null],[13,"Embed","","",36,null],[13,"Refer","","",36,null],[4,"MethodScope","","Verification method group used to refine the scope of a…",null,null],[13,"VerificationMethod","","",37,null],[13,"Authentication","","",37,null],[13,"AssertionMethod","","",37,null],[13,"KeyAgreement","","",37,null],[13,"CapabilityDelegation","","",37,null],[13,"CapabilityInvocation","","",37,null],[4,"MethodType","","Supported verification method types.",null,null],[13,"JcsEd25519Key2020","","",38,null],[13,"JwsVerificationKey2020","","",38,null],[13,"Ed25519VerificationKey2018","","",38,null],[13,"MerkleKeyCollection2021","","",38,null],[0,"builder","","",null,null],[3,"MethodBuilder","identity_did::verification::builder","A `MethodBuilder` is used to generate a customized `Method`.",null,null],[12,"id","","",30,null],[12,"controller","","",30,null],[12,"key_type","","",30,null],[12,"key_data","","",30,null],[12,"properties","","",30,null],[11,"new","identity_did::verification","Creates a new `MethodBuilder`.",30,[[]]],[11,"id","","Sets the `id` value of the generated verification `Method`.",30,[[["did",3]]]],[11,"controller","","Sets the `controller` value of the generated verification…",30,[[["did",3]]]],[11,"key_type","","Sets the `type` value of the generated verification…",30,[[["methodtype",4]]]],[11,"key_data","","Sets the `data` value of the generated verification…",30,[[["methoddata",4]]]],[11,"build","","Returns a new `Method` based on the `MethodBuilder`…",30,[[],[["method",3],["result",6]]]],[0,"method","","",null,null],[3,"Method","identity_did::verification::method","A DID Document Verification Method",null,null],[12,"id","","",31,null],[12,"controller","","",31,null],[12,"key_type","","",31,null],[12,"key_data","","",31,null],[12,"properties","","",31,null],[11,"builder","identity_did::verification","Creates a `MethodBuilder` to configure a new `Method`.",31,[[],["methodbuilder",3]]],[11,"from_builder","","Returns a new `Method` based on the `MethodBuilder`…",31,[[["methodbuilder",3]],["result",6]]],[11,"id","","Returns a reference to the verification `Method` id.",31,[[],["did",3]]],[11,"id_mut","","Returns a mutable reference to the verification `Method` id.",31,[[],["did",3]]],[11,"controller","","Returns a reference to the verification `Method` controller.",31,[[],["did",3]]],[11,"controller_mut","","Returns a mutable reference to the verification `Method`…",31,[[],["did",3]]],[11,"key_type","","Returns a reference to the verification `Method` type.",31,[[],["methodtype",4]]],[11,"key_type_mut","","Returns a mutable reference to the verification `Method`…",31,[[],["methodtype",4]]],[11,"key_data","","Returns a reference to the verification `Method` data.",31,[[],["methoddata",4]]],[11,"key_data_mut","","Returns a mutable reference to the verification `Method`…",31,[[],["methoddata",4]]],[11,"properties","","Returns a reference to the custom verification `Method`…",31,[[]]],[11,"properties_mut","","Returns a mutable reference to the custom verification…",31,[[]]],[11,"try_into_fragment","","",31,[[],[["string",3],["result",6]]]],[0,"method_data","","",null,null],[4,"MethodData","identity_did::verification::method_data","Supported verification method data formats.",null,null],[13,"PublicKeyBase58","","",34,null],[13,"PublicKeyHex","","",34,null],[13,"PublicKeyJwk","","",34,null],[11,"new_b16","identity_did::verification","Creates a new `MethodData` variant with base16-encoded…",34,[[]]],[11,"new_b58","","Creates a new `MethodData` variant with base58-encoded…",34,[[]]],[11,"try_decode","","Returns a `Vec<u8>` containing the decoded bytes of the…",34,[[],[["vec",3],["result",6]]]],[0,"method_ident","","",null,null],[4,"MethodIdent","identity_did::verification::method_ident","Index or identifier used to identify the target…",null,null],[13,"Index","","",35,null],[13,"Ident","","",35,null],[11,"matches","identity_did::verification","Returns a `bool` indicating if the given `DID` matches the…",35,[[["did",3]]]],[11,"matches_fragment","","",35,[[["did",3]]]],[0,"method_query","","",null,null],[3,"MethodQuery","identity_did::verification::method_query","Specifies the conditions of a DID document method…",null,null],[12,"ident","","",32,null],[12,"scope","","",32,null],[11,"new","identity_did::verification","Creates a new `MethodQuery`.",32,[[]]],[11,"with_scope","","Creates a new `MethodQuery` with the given `MethodScope`.",32,[[["methodscope",4]]]],[0,"method_ref","","",null,null],[4,"MethodRef","identity_did::verification::method_ref","A reference to a verification method, either a `DID` or…",null,null],[13,"Embed","","",36,null],[13,"Refer","","",36,null],[11,"id","identity_did::verification","Returns a reference to the `MethodRef` id.",36,[[],["did",3]]],[11,"controller","","Returns a reference to the `MethodRef` controller.",36,[[],[["did",3],["option",4]]]],[11,"is_embedded","","Returns a `bool` indicating if the `MethodRef` is an…",36,[[]]],[11,"is_referred","","Returns a `bool` indicating if the `MethodRef` is a `DID`…",36,[[]]],[11,"try_into_embedded","","Returns the inner `Method` if this is an embedded…",36,[[],[["method",3],["result",4]]]],[11,"try_into_referenced","","Returns the inner `Method` if this is an referenced…",36,[[],[["did",3],["result",4]]]],[0,"method_scope","","",null,null],[4,"MethodScope","identity_did::verification::method_scope","Verification method group used to refine the scope of a…",null,null],[13,"VerificationMethod","","",37,null],[13,"Authentication","","",37,null],[13,"AssertionMethod","","",37,null],[13,"KeyAgreement","","",37,null],[13,"CapabilityDelegation","","",37,null],[13,"CapabilityInvocation","","",37,null],[11,"as_str","identity_did::verification","",37,[[]]],[0,"method_type","","",null,null],[4,"MethodType","identity_did::verification::method_type","Supported verification method types.",null,null],[13,"JcsEd25519Key2020","","",38,null],[13,"JwsVerificationKey2020","","",38,null],[13,"Ed25519VerificationKey2018","","",38,null],[13,"MerkleKeyCollection2021","","",38,null],[11,"as_str","identity_did::verification","",38,[[]]],[0,"method_wrap","","",null,null],[3,"MethodWrap","identity_did::verification::method_wrap","A queried `Method` with additional metadata about the…",null,null],[12,"method","","",33,null],[12,"index","","",33,null],[12,"scope","","",33,null],[11,"new","identity_did::verification","Creates a new `MethodWrap`.",33,[[["methodscope",4],["method",3]]]],[11,"index","","Returns the index of the method within the verification…",33,[[]]],[11,"scope","","Returns the scope of the resolved verification method.",33,[[],["methodscope",4]]],[11,"into_method","","Consumes the `MethodWrap` and returns a reference to the…",33,[[],["method",3]]],[11,"from","identity_did::did","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","identity_did::diff","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","identity_did::document","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","identity_did::error","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","identity_did::resolution","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"equivalent","","",16,[[]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","identity_did::resolution::impls","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","identity_did::service","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","identity_did::utils","",25,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"equivalent","","",25,[[]]],[11,"encode_hex","","",25,[[]]],[11,"encode_hex_upper","","",25,[[]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"equivalent","","",26,[[]]],[11,"vzip","","",26,[[]]],[11,"from","identity_did::verifiable","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"equivalent","","",28,[[]]],[11,"vzip","","",28,[[]]],[11,"from","identity_did::verification","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"equivalent","","",32,[[]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"equivalent","","",35,[[]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"equivalent","","",37,[[]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"equivalent","","",38,[[]]],[11,"vzip","","",38,[[]]],[11,"eq","identity_did::did","",1,[[["error",4]]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[["did",3]]]],[11,"from_str","","",0,[[],[["result",4],["did",3]]]],[11,"cmp","","",0,[[["did",3]],["ordering",4]]],[11,"cmp","","",1,[[["error",4]],["ordering",4]]],[11,"as_ref","","",0,[[]]],[11,"partial_cmp","","",0,[[["did",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",1,[[["error",4]],[["ordering",4],["option",4]]]],[11,"deserialize","","",0,[[],[["result",4],["did",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",1,[[],["error",4]]],[11,"clone","","",0,[[],["did",3]]],[11,"try_from","","",0,[[["string",3]],[["result",4],["did",3]]]],[11,"serialize","","",0,[[],["result",4]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"diff","","",0,[[["did",3]],[["error",4],["result",4]]]],[11,"merge","","",0,[[],[["did",3],["error",4],["result",4]]]],[11,"from_diff","","",0,[[],[["did",3],["error",4],["result",4]]]],[11,"into_diff","","",0,[[],[["error",4],["result",4]]]],[11,"resolve_method","identity_did::document","",8,[[["methodquery",3]],[["methodwrap",3],["option",4]]]],[11,"as_mut","identity_did::utils","",25,[[]]],[11,"as_ref","identity_did::service","",24,[[],["did",3]]],[11,"as_ref","identity_did::utils","",25,[[]]],[11,"as_ref","identity_did::verification","",31,[[],["did",3]]],[11,"as_ref","","",36,[[],["did",3]]],[11,"from","identity_did::error","",9,[[["error",4]]]],[11,"from","","",9,[[["error",4]]]],[11,"from","identity_did::resolution","",18,[[["primaryresource",4]]]],[11,"from","","",18,[[["secondaryresource",4]]]],[11,"from","","",17,[[["document",3]]]],[11,"from","","",17,[[["url",3]]]],[11,"from","","",19,[[["did",3]]]],[11,"from","","",19,[[["method",3]]]],[11,"from","","",19,[[["methodref",4]]]],[11,"from","","",19,[[["service",3]]]],[11,"from","","",19,[[["didkey",3]]]],[11,"from","identity_did::utils","",25,[[]]],[11,"from","identity_did::verification","",35,[[]]],[11,"from","","",35,[[]]],[11,"from","","",32,[[]]],[11,"from","","",32,[[]]],[11,"from","","",32,[[]]],[11,"from","","",32,[[]]],[11,"from","","",32,[[]]],[11,"from","","",32,[[["methodscope",4]]]],[11,"from","","",36,[[["method",3]]]],[11,"from","","",36,[[["did",3]]]],[11,"clone","identity_did::diff","",2,[[],["diffdocument",3]]],[11,"clone","","",3,[[],["diffmethod",3]]],[11,"clone","","",5,[[],["diffmethoddata",4]]],[11,"clone","","",6,[[],["diffmethodref",4]]],[11,"clone","","",4,[[],["diffservice",3]]],[11,"clone","identity_did::document","",7,[[],["documentbuilder",3]]],[11,"clone","","",8,[[],["document",3]]],[11,"clone","identity_did::resolution","",10,[[],["dereference",3]]],[11,"clone","","",11,[[],["documentmetadata",3]]],[11,"clone","","",16,[[],["errorkind",4]]],[11,"clone","","",12,[[],["inputmetadata",3]]],[11,"clone","","",13,[[],["resolution",3]]],[11,"clone","","",14,[[],["resolutionmetadata",3]]],[11,"clone","","",18,[[],["resource",4]]],[11,"clone","","",17,[[],["primaryresource",4]]],[11,"clone","","",19,[[],["secondaryresource",4]]],[11,"clone","","",15,[[],["metadocument",3]]],[11,"clone","identity_did::service","",23,[[],["servicebuilder",3]]],[11,"clone","","",24,[[],["service",3]]],[11,"clone","identity_did::utils","",25,[[],["didkey",3]]],[11,"clone","","",26,[[],["orderedset",3]]],[11,"clone","identity_did::verifiable","",27,[[],["ldsuite",3]]],[11,"clone","","",28,[[],["properties",3]]],[11,"clone","identity_did::verification","",30,[[],["methodbuilder",3]]],[11,"clone","","",31,[[],["method",3]]],[11,"clone","","",34,[[],["methoddata",4]]],[11,"clone","","",35,[[],["methodident",4]]],[11,"clone","","",32,[[],["methodquery",3]]],[11,"clone","","",36,[[],["methodref",4]]],[11,"clone","","",37,[[],["methodscope",4]]],[11,"clone","","",38,[[],["methodtype",4]]],[11,"clone","","",33,[[],["methodwrap",3]]],[11,"default","identity_did::document","",7,[[]]],[11,"default","identity_did::resolution","",10,[[],["dereference",3]]],[11,"default","","",11,[[],["documentmetadata",3]]],[11,"default","","",12,[[],["inputmetadata",3]]],[11,"default","","",13,[[],["resolution",3]]],[11,"default","","",14,[[],["resolutionmetadata",3]]],[11,"default","identity_did::service","",23,[[],["servicebuilder",3]]],[11,"default","identity_did::utils","",26,[[]]],[11,"default","identity_did::verifiable","",28,[[],["properties",3]]],[11,"default","identity_did::verification","",30,[[],["methodbuilder",3]]],[11,"default","","",37,[[]]],[11,"cmp","identity_did::resolution","",16,[[["errorkind",4]],["ordering",4]]],[11,"cmp","identity_did::utils","",25,[[],["ordering",4]]],[11,"cmp","","",26,[[["orderedset",3]],["ordering",4]]],[11,"cmp","identity_did::verifiable","",28,[[["properties",3]],["ordering",4]]],[11,"cmp","identity_did::verification","",35,[[["methodident",4]],["ordering",4]]],[11,"cmp","","",32,[[["methodquery",3]],["ordering",4]]],[11,"cmp","","",37,[[["methodscope",4]],["ordering",4]]],[11,"cmp","","",38,[[["methodtype",4]],["ordering",4]]],[11,"eq","identity_did::diff","",2,[[["diffdocument",3]]]],[11,"ne","","",2,[[["diffdocument",3]]]],[11,"eq","","",3,[[["diffmethod",3]]]],[11,"ne","","",3,[[["diffmethod",3]]]],[11,"eq","","",5,[[["diffmethoddata",4]]]],[11,"ne","","",5,[[["diffmethoddata",4]]]],[11,"eq","","",6,[[["diffmethodref",4]]]],[11,"ne","","",6,[[["diffmethodref",4]]]],[11,"eq","","",4,[[["diffservice",3]]]],[11,"ne","","",4,[[["diffservice",3]]]],[11,"eq","identity_did::document","",8,[[["document",3]]]],[11,"ne","","",8,[[["document",3]]]],[11,"eq","identity_did::resolution","",10,[[["dereference",3]]]],[11,"ne","","",10,[[["dereference",3]]]],[11,"eq","","",11,[[["documentmetadata",3]]]],[11,"ne","","",11,[[["documentmetadata",3]]]],[11,"eq","","",16,[[["errorkind",4]]]],[11,"eq","","",12,[[["inputmetadata",3]]]],[11,"ne","","",12,[[["inputmetadata",3]]]],[11,"eq","","",13,[[["resolution",3]]]],[11,"ne","","",13,[[["resolution",3]]]],[11,"eq","","",14,[[["resolutionmetadata",3]]]],[11,"ne","","",14,[[["resolutionmetadata",3]]]],[11,"eq","","",18,[[["resource",4]]]],[11,"ne","","",18,[[["resource",4]]]],[11,"eq","","",17,[[["primaryresource",4]]]],[11,"ne","","",17,[[["primaryresource",4]]]],[11,"eq","","",19,[[["secondaryresource",4]]]],[11,"ne","","",19,[[["secondaryresource",4]]]],[11,"eq","","",15,[[["metadocument",3]]]],[11,"ne","","",15,[[["metadocument",3]]]],[11,"eq","identity_did::service","",24,[[["service",3]]]],[11,"ne","","",24,[[["service",3]]]],[11,"eq","identity_did::utils","",25,[[]]],[11,"eq","","",26,[[["orderedset",3]]]],[11,"ne","","",26,[[["orderedset",3]]]],[11,"eq","identity_did::verifiable","",28,[[["properties",3]]]],[11,"ne","","",28,[[["properties",3]]]],[11,"eq","identity_did::verification","",31,[[["method",3]]]],[11,"ne","","",31,[[["method",3]]]],[11,"eq","","",34,[[["methoddata",4]]]],[11,"ne","","",34,[[["methoddata",4]]]],[11,"eq","","",35,[[["methodident",4]]]],[11,"ne","","",35,[[["methodident",4]]]],[11,"eq","","",35,[[]]],[11,"eq","","",35,[[]]],[11,"eq","","",32,[[["methodquery",3]]]],[11,"ne","","",32,[[["methodquery",3]]]],[11,"eq","","",36,[[["methodref",4]]]],[11,"ne","","",36,[[["methodref",4]]]],[11,"eq","","",37,[[["methodscope",4]]]],[11,"eq","","",38,[[["methodtype",4]]]],[11,"eq","","",33,[[["methodwrap",3]]]],[11,"ne","","",33,[[["methodwrap",3]]]],[11,"partial_cmp","identity_did::resolution","",16,[[["errorkind",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","identity_did::utils","",25,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",26,[[["orderedset",3]],[["ordering",4],["option",4]]]],[11,"lt","","",26,[[["orderedset",3]]]],[11,"le","","",26,[[["orderedset",3]]]],[11,"gt","","",26,[[["orderedset",3]]]],[11,"ge","","",26,[[["orderedset",3]]]],[11,"partial_cmp","identity_did::verifiable","",28,[[["properties",3]],[["ordering",4],["option",4]]]],[11,"lt","","",28,[[["properties",3]]]],[11,"le","","",28,[[["properties",3]]]],[11,"gt","","",28,[[["properties",3]]]],[11,"ge","","",28,[[["properties",3]]]],[11,"partial_cmp","identity_did::verification","",35,[[["methodident",4]],[["ordering",4],["option",4]]]],[11,"lt","","",35,[[["methodident",4]]]],[11,"le","","",35,[[["methodident",4]]]],[11,"gt","","",35,[[["methodident",4]]]],[11,"ge","","",35,[[["methodident",4]]]],[11,"partial_cmp","","",32,[[["methodquery",3]],[["ordering",4],["option",4]]]],[11,"lt","","",32,[[["methodquery",3]]]],[11,"le","","",32,[[["methodquery",3]]]],[11,"gt","","",32,[[["methodquery",3]]]],[11,"ge","","",32,[[["methodquery",3]]]],[11,"partial_cmp","","",37,[[["methodscope",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",38,[[["methodtype",4]],[["ordering",4],["option",4]]]],[11,"deref","identity_did::utils","",25,[[]]],[11,"deref","","",26,[[]]],[11,"deref","identity_did::verifiable","",28,[[]]],[11,"deref","identity_did::verification","",33,[[]]],[11,"deref_mut","identity_did::utils","",25,[[]]],[11,"deref_mut","identity_did::verifiable","",28,[[]]],[11,"fmt","identity_did::diff","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","identity_did::document","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","identity_did::error","",9,[[["formatter",3]],["result",6]]],[11,"fmt","identity_did::resolution","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","identity_did::resolution::impls","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","identity_did::resolution","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","identity_did::service","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","identity_did::utils","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_did::verifiable","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","identity_did::verification","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","identity_did::document","",8,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_did::error","",9,[[["formatter",3]],["result",6]]],[11,"fmt","identity_did::service","",24,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_did::utils","",25,[[["formatter",3]],["result",6]]],[11,"fmt","identity_did::verification","",31,[[["formatter",3]],["fmtresult",6]]],[11,"hash","identity_did::resolution","",16,[[]]],[11,"hash","identity_did::utils","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","identity_did::verification","",35,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"borrow","identity_did::utils","",25,[[],["did",3]]],[11,"try_from","","",26,[[["vec",3]],["result",6]]],[11,"try_from","identity_did::verification","",32,[[["signature",3]],["result",6]]],[11,"from_str","","",37,[[],["result",6]]],[11,"from_str","","",38,[[],["result",6]]],[11,"from_iter","identity_did::utils","",26,[[]]],[11,"source","identity_did::error","",9,[[],[["option",4],["error",8]]]],[11,"serialize","identity_did::diff","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","identity_did::document","",8,[[],["result",4]]],[11,"serialize","identity_did::resolution","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","identity_did::service","",24,[[],["result",4]]],[11,"serialize","identity_did::utils","",25,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","identity_did::verifiable","",28,[[],["result",4]]],[11,"serialize","identity_did::verification","",31,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"deserialize","identity_did::diff","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","identity_did::document","",8,[[],["result",4]]],[11,"deserialize","identity_did::resolution","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","identity_did::service","",24,[[],["result",4]]],[11,"deserialize","identity_did::utils","",25,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","identity_did::verifiable","",28,[[],["result",4]]],[11,"deserialize","identity_did::verification","",31,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"diff","identity_did::utils","",25,[[],["result",6]]],[11,"merge","","",25,[[],["result",6]]],[11,"from_diff","","",25,[[],["result",6]]],[11,"into_diff","","",25,[[],["result",6]]],[11,"diff","identity_did::document","",8,[[],["result",6]]],[11,"merge","","",8,[[],["result",6]]],[11,"from_diff","","",8,[[],["result",6]]],[11,"into_diff","","",8,[[],["result",6]]],[11,"diff","identity_did::verification","",31,[[],["result",6]]],[11,"merge","","",31,[[],["result",6]]],[11,"from_diff","","",31,[[],["result",6]]],[11,"into_diff","","",31,[[],["result",6]]],[11,"diff","","",34,[[],["result",6]]],[11,"merge","","",34,[[],["result",6]]],[11,"from_diff","","",34,[[],["result",6]]],[11,"into_diff","","",34,[[],["result",6]]],[11,"diff","","",36,[[],["result",6]]],[11,"merge","","",36,[[],["result",6]]],[11,"from_diff","","",36,[[],["result",6]]],[11,"into_diff","","",36,[[],["result",6]]],[11,"diff","","",38,[[],["result",6]]],[11,"merge","","",38,[[],["result",6]]],[11,"from_diff","","",38,[[],["result",6]]],[11,"into_diff","","",38,[[],["result",6]]],[11,"diff","identity_did::utils","",26,[[],["result",6]]],[11,"merge","","",26,[[],["result",6]]],[11,"from_diff","","",26,[[],["result",6]]],[11,"into_diff","","",26,[[],["result",6]]],[11,"diff","identity_did::service","",24,[[],["result",6]]],[11,"merge","","",24,[[],["result",6]]],[11,"from_diff","","",24,[[],["result",6]]],[11,"into_diff","","",24,[[],["result",6]]],[11,"signature","identity_did::document","",8,[[],[["option",4],["signature",3]]]],[11,"signature","identity_did::verifiable","",28,[[],[["option",4],["signature",3]]]],[11,"signature_mut","identity_did::document","",8,[[],[["signature",3],["option",4]]]],[11,"signature_mut","identity_did::verifiable","",28,[[],[["signature",3],["option",4]]]],[11,"set_signature","identity_did::document","",8,[[["signature",3]]]],[11,"set_signature","identity_did::verifiable","",28,[[["signature",3]]]],[18,"SCHEME","identity_did::did","The URL scheme for Decentralized Identifiers.",0,null],[11,"parse","","Parses a [`DID`] from the provided `input`.",0,[[],[["result",4],["error",4],["did",3]]]],[11,"inspect","","Returns a wrapped `DID` with a more detailed `Debug`…",0,[[],["inspect",3]]],[11,"as_str","","Returns the serialized [`DID`].",0,[[]]],[11,"into_string","","Consumes the [`DID`] and returns the serialization.",0,[[],["string",3]]],[11,"scheme","","Returns the [`DID`] scheme. See [`DID::SCHEME`].",0,[[]]],[11,"authority","","Returns the [`DID`] authority.",0,[[]]],[11,"method","","Returns the [`DID`] method name.",0,[[]]],[11,"method_id","","Returns the [`DID`] method-specific ID.",0,[[]]],[11,"path","","Returns the [`DID`] path.",0,[[]]],[11,"query","","Returns the [`DID`] method query, if any.",0,[[],["option",4]]],[11,"fragment","","Returns the [`DID`] method fragment, if any.",0,[[],["option",4]]],[11,"query_pairs","","Parses the [`DID`] query and returns an iterator of (key,…",0,[[],["parse",3]]],[11,"set_method","","Change the method of the [`DID`].",0,[[]]],[11,"set_method_id","","Change the method-specific-id of the [`DID`].",0,[[]]],[11,"set_path","","Change the path of the [`DID`].",0,[[]]],[11,"set_query","","Change the query of the [`DID`].",0,[[["option",4]]]],[11,"set_fragment","","Change the fragment of the [`DID`].",0,[[["option",4]]]],[11,"join","","Creates a new [`DID`] by joining `self` with the relative…",0,[[],[["result",4],["error",4],["did",3]]]],[11,"as_str","","",1,[[]]]],"p":[[3,"DID"],[4,"Error"],[3,"DiffDocument"],[3,"DiffMethod"],[3,"DiffService"],[4,"DiffMethodData"],[4,"DiffMethodRef"],[3,"DocumentBuilder"],[3,"Document"],[4,"Error"],[3,"Dereference"],[3,"DocumentMetadata"],[3,"InputMetadata"],[3,"Resolution"],[3,"ResolutionMetadata"],[3,"MetaDocument"],[4,"ErrorKind"],[4,"PrimaryResource"],[4,"Resource"],[4,"SecondaryResource"],[3,"ResolveContext"],[3,"DerefContext"],[8,"ResolverMethod"],[3,"ServiceBuilder"],[3,"Service"],[3,"DIDKey"],[3,"OrderedSet"],[3,"LdSuite"],[3,"Properties"],[8,"ResolveMethod"],[3,"MethodBuilder"],[3,"Method"],[3,"MethodQuery"],[3,"MethodWrap"],[4,"MethodData"],[4,"MethodIdent"],[4,"MethodRef"],[4,"MethodScope"],[4,"MethodType"]]},\
"identity_diff":{"doc":"This module implements a `Diff` trait type. The Diff trait…","i":[[3,"DiffHashMap","identity_diff","A `DiffHashMap` type which represents a Diffed `HashMap`.…",null,null],[12,"0","","",0,null],[3,"DiffHashSet","","",null,null],[12,"0","","",1,null],[3,"DiffString","","The Diff Type for a `String` type.",null,null],[12,"0","","",2,null],[3,"DiffVec","","The Diff Type for `Vec`.",null,null],[12,"0","","",3,null],[4,"Error","","",null,null],[13,"DiffError","","",4,null],[13,"MergeError","","",4,null],[13,"ConversionError","","",4,null],[4,"DiffOption","","A `DiffOption<T>` type which represents a Diffed…",null,null],[13,"Some","","",5,null],[13,"None","","",5,null],[0,"error","","",null,null],[4,"Error","identity_diff::error","",null,null],[13,"DiffError","","",4,null],[13,"MergeError","","",4,null],[13,"ConversionError","","",4,null],[6,"Result","","",null,null],[11,"diff","identity_diff","",4,[[]]],[11,"merge","","",4,[[]]],[11,"convert","","",4,[[]]],[0,"hashmap","","",null,null],[3,"DiffHashMap","identity_diff::hashmap","A `DiffHashMap` type which represents a Diffed `HashMap`.…",null,null],[12,"0","","",0,null],[4,"InnerValue","","Inner value of the `DiffHashMap` type.",null,null],[13,"Change","","",6,null],[12,"key","identity_diff::hashmap::InnerValue","",7,null],[12,"value","","",7,null],[13,"Add","identity_diff::hashmap","",6,null],[12,"key","identity_diff::hashmap::InnerValue","",8,null],[12,"value","","",8,null],[13,"Remove","identity_diff::hashmap","",6,null],[12,"key","identity_diff::hashmap::InnerValue","",9,null],[0,"hashset","identity_diff","",null,null],[3,"DiffHashSet","identity_diff::hashset","",null,null],[12,"0","","",1,null],[4,"InnerValue","","",null,null],[13,"Add","","",10,null],[13,"Remove","","",10,null],[12,"remove","identity_diff::hashset::InnerValue","",11,null],[0,"macros","identity_diff","",null,null],[3,"Diffi8","identity_diff::macros","",null,null],[3,"Diffi16","","",null,null],[3,"Diffi32","","",null,null],[3,"Diffi64","","",null,null],[3,"Diffi128","","",null,null],[3,"DiffiSize","","",null,null],[3,"Diffu8","","",null,null],[3,"Diffu16","","",null,null],[3,"Diffu32","","",null,null],[3,"Diffu64","","",null,null],[3,"Diffu128","","",null,null],[3,"DiffuSize","","",null,null],[3,"DiffF32","","",null,null],[3,"DiffF64","","",null,null],[3,"Diffbool","","",null,null],[3,"Diffchar","","",null,null],[3,"Diffunit","","",null,null],[0,"object","identity_diff","",null,null],[6,"DiffObject","identity_diff::object","",null,null],[6,"ObjectSrc","","",null,null],[6,"ObjectDst","","",null,null],[0,"option","identity_diff","",null,null],[4,"DiffOption","identity_diff::option","A `DiffOption<T>` type which represents a Diffed…",null,null],[13,"Some","","",5,null],[13,"None","","",5,null],[0,"string","identity_diff","",null,null],[3,"DiffString","identity_diff::string","The Diff Type for a `String` type.",null,null],[12,"0","","",2,null],[0,"traits","identity_diff","",null,null],[8,"Diff","identity_diff::traits","The primary `Diff` Trait type.",null,null],[16,"Type","","The Corresponding Diff Type for the implemented Type.",12,null],[10,"diff","","Finds the difference between two types; `self` and `other`…",12,[[],["result",6]]],[10,"merge","","Merges a `Self::Type` with `Self`",12,[[],["result",6]]],[10,"from_diff","","Converts a `diff` of type `Self::Type` to a `Self`.",12,[[],["result",6]]],[10,"into_diff","","Converts a type of `Self` to a `diff` of `Self::Type`.",12,[[],["result",6]]],[0,"url","identity_diff","",null,null],[0,"value","","",null,null],[3,"DiffValue","identity_diff::value","The Diff Type for `serde_json::Value`.",null,null],[12,"0","","",13,null],[0,"vec","identity_diff","",null,null],[3,"DiffVec","identity_diff::vec","The Diff Type for `Vec`.",null,null],[12,"0","","",3,null],[4,"InnerVec","","The Inner value for the `DiffVec` type. Is `untagged` by…",null,null],[13,"Change","","logs a change in a `Vec` type.",14,null],[12,"index","identity_diff::vec::InnerVec","",15,null],[12,"item","","",15,null],[13,"Remove","identity_diff::vec","Logs a remove event in a `Vec` type.",14,null],[12,"count","identity_diff::vec::InnerVec","",16,null],[13,"Add","identity_diff::vec","logs an Add event in a `Vec` type.",14,null],[6,"Result","identity_diff","",null,null],[6,"DiffObject","","",null,null],[8,"Diff","","The primary `Diff` Trait type.",null,null],[16,"Type","","The Corresponding Diff Type for the implemented Type.",12,null],[10,"diff","","Finds the difference between two types; `self` and `other`…",12,[[],["result",6]]],[10,"merge","","Merges a `Self::Type` with `Self`",12,[[],["result",6]]],[10,"from_diff","","Converts a `diff` of type `Self::Type` to a `Self`.",12,[[],["result",6]]],[10,"into_diff","","Converts a type of `Self` to a `diff` of `Self::Type`.",12,[[],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","identity_diff::hashmap","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","identity_diff::hashset","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","identity_diff::macros","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"equivalent","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"equivalent","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"equivalent","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"equivalent","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"equivalent","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"equivalent","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"equivalent","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"equivalent","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"equivalent","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"equivalent","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"equivalent","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"equivalent","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"equivalent","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"equivalent","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"equivalent","","",33,[[]]],[11,"from","identity_diff::value","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"equivalent","","",13,[[]]],[11,"from","identity_diff::vec","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","identity_diff","",5,[[["option",4]]]],[11,"into","","",5,[[],["option",4]]],[11,"clone","identity_diff::hashmap","",6,[[],["innervalue",4]]],[11,"clone","identity_diff","",0,[[],["diffhashmap",3]]],[11,"clone","","",1,[[],["diffhashset",3]]],[11,"clone","identity_diff::hashset","",10,[[],["innervalue",4]]],[11,"clone","identity_diff::macros","",17,[[],["diffi8",3]]],[11,"clone","","",18,[[],["diffi16",3]]],[11,"clone","","",19,[[],["diffi32",3]]],[11,"clone","","",20,[[],["diffi64",3]]],[11,"clone","","",21,[[],["diffi128",3]]],[11,"clone","","",22,[[],["diffisize",3]]],[11,"clone","","",23,[[],["diffu8",3]]],[11,"clone","","",24,[[],["diffu16",3]]],[11,"clone","","",25,[[],["diffu32",3]]],[11,"clone","","",26,[[],["diffu64",3]]],[11,"clone","","",27,[[],["diffu128",3]]],[11,"clone","","",28,[[],["diffusize",3]]],[11,"clone","","",29,[[],["difff32",3]]],[11,"clone","","",30,[[],["difff64",3]]],[11,"clone","","",31,[[],["diffbool",3]]],[11,"clone","","",32,[[],["diffchar",3]]],[11,"clone","","",33,[[],["diffunit",3]]],[11,"clone","identity_diff","",5,[[],["diffoption",4]]],[11,"clone","","",2,[[],["diffstring",3]]],[11,"clone","identity_diff::value","",13,[[],["diffvalue",3]]],[11,"clone","identity_diff","",3,[[],["diffvec",3]]],[11,"clone","identity_diff::vec","",14,[[],["innervec",4]]],[11,"default","identity_diff","",0,[[]]],[11,"default","identity_diff::macros","",17,[[],["diffi8",3]]],[11,"default","","",18,[[],["diffi16",3]]],[11,"default","","",19,[[],["diffi32",3]]],[11,"default","","",20,[[],["diffi64",3]]],[11,"default","","",21,[[],["diffi128",3]]],[11,"default","","",22,[[],["diffisize",3]]],[11,"default","","",23,[[],["diffu8",3]]],[11,"default","","",24,[[],["diffu16",3]]],[11,"default","","",25,[[],["diffu32",3]]],[11,"default","","",26,[[],["diffu64",3]]],[11,"default","","",27,[[],["diffu128",3]]],[11,"default","","",28,[[],["diffusize",3]]],[11,"default","","",29,[[],["difff32",3]]],[11,"default","","",30,[[],["difff64",3]]],[11,"default","","",31,[[],["diffbool",3]]],[11,"default","","",32,[[],["diffchar",3]]],[11,"default","","",33,[[],["diffunit",3]]],[11,"default","identity_diff","",5,[[]]],[11,"default","","",2,[[],["diffstring",3]]],[11,"default","identity_diff::value","",13,[[]]],[11,"default","identity_diff","",3,[[]]],[11,"cmp","identity_diff::macros","",17,[[["diffi8",3]],["ordering",4]]],[11,"cmp","","",18,[[["diffi16",3]],["ordering",4]]],[11,"cmp","","",19,[[["diffi32",3]],["ordering",4]]],[11,"cmp","","",20,[[["diffi64",3]],["ordering",4]]],[11,"cmp","","",21,[[["diffi128",3]],["ordering",4]]],[11,"cmp","","",22,[[["diffisize",3]],["ordering",4]]],[11,"cmp","","",23,[[["diffu8",3]],["ordering",4]]],[11,"cmp","","",24,[[["diffu16",3]],["ordering",4]]],[11,"cmp","","",25,[[["diffu32",3]],["ordering",4]]],[11,"cmp","","",26,[[["diffu64",3]],["ordering",4]]],[11,"cmp","","",27,[[["diffu128",3]],["ordering",4]]],[11,"cmp","","",28,[[["diffusize",3]],["ordering",4]]],[11,"cmp","","",31,[[["diffbool",3]],["ordering",4]]],[11,"cmp","","",32,[[["diffchar",3]],["ordering",4]]],[11,"cmp","","",33,[[["diffunit",3]],["ordering",4]]],[11,"cmp","identity_diff","",2,[[["diffstring",3]],["ordering",4]]],[11,"eq","identity_diff::hashmap","",6,[[["innervalue",4]]]],[11,"ne","","",6,[[["innervalue",4]]]],[11,"eq","identity_diff","",0,[[["diffhashmap",3]]]],[11,"ne","","",0,[[["diffhashmap",3]]]],[11,"eq","","",1,[[["diffhashset",3]]]],[11,"ne","","",1,[[["diffhashset",3]]]],[11,"eq","identity_diff::hashset","",10,[[["innervalue",4]]]],[11,"ne","","",10,[[["innervalue",4]]]],[11,"eq","identity_diff::macros","",17,[[["diffi8",3]]]],[11,"ne","","",17,[[["diffi8",3]]]],[11,"eq","","",18,[[["diffi16",3]]]],[11,"ne","","",18,[[["diffi16",3]]]],[11,"eq","","",19,[[["diffi32",3]]]],[11,"ne","","",19,[[["diffi32",3]]]],[11,"eq","","",20,[[["diffi64",3]]]],[11,"ne","","",20,[[["diffi64",3]]]],[11,"eq","","",21,[[["diffi128",3]]]],[11,"ne","","",21,[[["diffi128",3]]]],[11,"eq","","",22,[[["diffisize",3]]]],[11,"ne","","",22,[[["diffisize",3]]]],[11,"eq","","",23,[[["diffu8",3]]]],[11,"ne","","",23,[[["diffu8",3]]]],[11,"eq","","",24,[[["diffu16",3]]]],[11,"ne","","",24,[[["diffu16",3]]]],[11,"eq","","",25,[[["diffu32",3]]]],[11,"ne","","",25,[[["diffu32",3]]]],[11,"eq","","",26,[[["diffu64",3]]]],[11,"ne","","",26,[[["diffu64",3]]]],[11,"eq","","",27,[[["diffu128",3]]]],[11,"ne","","",27,[[["diffu128",3]]]],[11,"eq","","",28,[[["diffusize",3]]]],[11,"ne","","",28,[[["diffusize",3]]]],[11,"eq","","",29,[[["difff32",3]]]],[11,"ne","","",29,[[["difff32",3]]]],[11,"eq","","",30,[[["difff64",3]]]],[11,"ne","","",30,[[["difff64",3]]]],[11,"eq","","",31,[[["diffbool",3]]]],[11,"ne","","",31,[[["diffbool",3]]]],[11,"eq","","",32,[[["diffchar",3]]]],[11,"ne","","",32,[[["diffchar",3]]]],[11,"eq","","",33,[[["diffunit",3]]]],[11,"ne","","",33,[[["diffunit",3]]]],[11,"eq","identity_diff","",5,[[["diffoption",4]]]],[11,"ne","","",5,[[["diffoption",4]]]],[11,"eq","","",2,[[["diffstring",3]]]],[11,"ne","","",2,[[["diffstring",3]]]],[11,"eq","identity_diff::value","",13,[[["diffvalue",3]]]],[11,"ne","","",13,[[["diffvalue",3]]]],[11,"eq","identity_diff","",3,[[["diffvec",3]]]],[11,"ne","","",3,[[["diffvec",3]]]],[11,"eq","identity_diff::vec","",14,[[["innervec",4]]]],[11,"ne","","",14,[[["innervec",4]]]],[11,"partial_cmp","identity_diff::macros","",17,[[["diffi8",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["diffi8",3]]]],[11,"le","","",17,[[["diffi8",3]]]],[11,"gt","","",17,[[["diffi8",3]]]],[11,"ge","","",17,[[["diffi8",3]]]],[11,"partial_cmp","","",18,[[["diffi16",3]],[["ordering",4],["option",4]]]],[11,"lt","","",18,[[["diffi16",3]]]],[11,"le","","",18,[[["diffi16",3]]]],[11,"gt","","",18,[[["diffi16",3]]]],[11,"ge","","",18,[[["diffi16",3]]]],[11,"partial_cmp","","",19,[[["diffi32",3]],[["ordering",4],["option",4]]]],[11,"lt","","",19,[[["diffi32",3]]]],[11,"le","","",19,[[["diffi32",3]]]],[11,"gt","","",19,[[["diffi32",3]]]],[11,"ge","","",19,[[["diffi32",3]]]],[11,"partial_cmp","","",20,[[["diffi64",3]],[["ordering",4],["option",4]]]],[11,"lt","","",20,[[["diffi64",3]]]],[11,"le","","",20,[[["diffi64",3]]]],[11,"gt","","",20,[[["diffi64",3]]]],[11,"ge","","",20,[[["diffi64",3]]]],[11,"partial_cmp","","",21,[[["diffi128",3]],[["ordering",4],["option",4]]]],[11,"lt","","",21,[[["diffi128",3]]]],[11,"le","","",21,[[["diffi128",3]]]],[11,"gt","","",21,[[["diffi128",3]]]],[11,"ge","","",21,[[["diffi128",3]]]],[11,"partial_cmp","","",22,[[["diffisize",3]],[["ordering",4],["option",4]]]],[11,"lt","","",22,[[["diffisize",3]]]],[11,"le","","",22,[[["diffisize",3]]]],[11,"gt","","",22,[[["diffisize",3]]]],[11,"ge","","",22,[[["diffisize",3]]]],[11,"partial_cmp","","",23,[[["diffu8",3]],[["ordering",4],["option",4]]]],[11,"lt","","",23,[[["diffu8",3]]]],[11,"le","","",23,[[["diffu8",3]]]],[11,"gt","","",23,[[["diffu8",3]]]],[11,"ge","","",23,[[["diffu8",3]]]],[11,"partial_cmp","","",24,[[["diffu16",3]],[["ordering",4],["option",4]]]],[11,"lt","","",24,[[["diffu16",3]]]],[11,"le","","",24,[[["diffu16",3]]]],[11,"gt","","",24,[[["diffu16",3]]]],[11,"ge","","",24,[[["diffu16",3]]]],[11,"partial_cmp","","",25,[[["diffu32",3]],[["ordering",4],["option",4]]]],[11,"lt","","",25,[[["diffu32",3]]]],[11,"le","","",25,[[["diffu32",3]]]],[11,"gt","","",25,[[["diffu32",3]]]],[11,"ge","","",25,[[["diffu32",3]]]],[11,"partial_cmp","","",26,[[["diffu64",3]],[["ordering",4],["option",4]]]],[11,"lt","","",26,[[["diffu64",3]]]],[11,"le","","",26,[[["diffu64",3]]]],[11,"gt","","",26,[[["diffu64",3]]]],[11,"ge","","",26,[[["diffu64",3]]]],[11,"partial_cmp","","",27,[[["diffu128",3]],[["ordering",4],["option",4]]]],[11,"lt","","",27,[[["diffu128",3]]]],[11,"le","","",27,[[["diffu128",3]]]],[11,"gt","","",27,[[["diffu128",3]]]],[11,"ge","","",27,[[["diffu128",3]]]],[11,"partial_cmp","","",28,[[["diffusize",3]],[["ordering",4],["option",4]]]],[11,"lt","","",28,[[["diffusize",3]]]],[11,"le","","",28,[[["diffusize",3]]]],[11,"gt","","",28,[[["diffusize",3]]]],[11,"ge","","",28,[[["diffusize",3]]]],[11,"partial_cmp","","",29,[[["difff32",3]],[["ordering",4],["option",4]]]],[11,"lt","","",29,[[["difff32",3]]]],[11,"le","","",29,[[["difff32",3]]]],[11,"gt","","",29,[[["difff32",3]]]],[11,"ge","","",29,[[["difff32",3]]]],[11,"partial_cmp","","",30,[[["difff64",3]],[["ordering",4],["option",4]]]],[11,"lt","","",30,[[["difff64",3]]]],[11,"le","","",30,[[["difff64",3]]]],[11,"gt","","",30,[[["difff64",3]]]],[11,"ge","","",30,[[["difff64",3]]]],[11,"partial_cmp","","",31,[[["diffbool",3]],[["ordering",4],["option",4]]]],[11,"lt","","",31,[[["diffbool",3]]]],[11,"le","","",31,[[["diffbool",3]]]],[11,"gt","","",31,[[["diffbool",3]]]],[11,"ge","","",31,[[["diffbool",3]]]],[11,"partial_cmp","","",32,[[["diffchar",3]],[["ordering",4],["option",4]]]],[11,"lt","","",32,[[["diffchar",3]]]],[11,"le","","",32,[[["diffchar",3]]]],[11,"gt","","",32,[[["diffchar",3]]]],[11,"ge","","",32,[[["diffchar",3]]]],[11,"partial_cmp","","",33,[[["diffunit",3]],[["ordering",4],["option",4]]]],[11,"lt","","",33,[[["diffunit",3]]]],[11,"le","","",33,[[["diffunit",3]]]],[11,"gt","","",33,[[["diffunit",3]]]],[11,"ge","","",33,[[["diffunit",3]]]],[11,"partial_cmp","identity_diff","",2,[[["diffstring",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["diffstring",3]]]],[11,"le","","",2,[[["diffstring",3]]]],[11,"gt","","",2,[[["diffstring",3]]]],[11,"ge","","",2,[[["diffstring",3]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_diff::hashmap","",6,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_diff","",1,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_diff::hashset","",10,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_diff::macros","",17,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",18,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",19,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",20,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",21,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",22,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",23,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",24,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",25,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",26,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",27,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",28,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",29,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",30,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",31,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",32,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",33,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_diff","",5,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",2,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_diff::value","",13,[[["formatter",3]],["result",6]]],[11,"fmt","identity_diff","",3,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_diff::vec","",14,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_diff","",4,[[["formatter",3]],["result",6]]],[11,"hash","identity_diff::macros","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","identity_diff","",2,[[]]],[11,"serialize","identity_diff::hashmap","",6,[[],["result",4]]],[11,"serialize","identity_diff","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","identity_diff::hashset","",10,[[],["result",4]]],[11,"serialize","identity_diff::macros","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","identity_diff","",5,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","identity_diff::value","",13,[[],["result",4]]],[11,"serialize","identity_diff","",3,[[],["result",4]]],[11,"serialize","identity_diff::vec","",14,[[],["result",4]]],[11,"deserialize","identity_diff::hashmap","",6,[[],["result",4]]],[11,"deserialize","identity_diff","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","identity_diff::hashset","",10,[[],["result",4]]],[11,"deserialize","identity_diff::macros","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",32,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","identity_diff","",5,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","identity_diff::value","",13,[[],["result",4]]],[11,"deserialize","identity_diff","",3,[[],["result",4]]],[11,"deserialize","identity_diff::vec","",14,[[],["result",4]]]],"p":[[3,"DiffHashMap"],[3,"DiffHashSet"],[3,"DiffString"],[3,"DiffVec"],[4,"Error"],[4,"DiffOption"],[4,"InnerValue"],[13,"Change"],[13,"Add"],[13,"Remove"],[4,"InnerValue"],[13,"Remove"],[8,"Diff"],[3,"DiffValue"],[4,"InnerVec"],[13,"Change"],[13,"Remove"],[3,"Diffi8"],[3,"Diffi16"],[3,"Diffi32"],[3,"Diffi64"],[3,"Diffi128"],[3,"DiffiSize"],[3,"Diffu8"],[3,"Diffu16"],[3,"Diffu32"],[3,"Diffu64"],[3,"Diffu128"],[3,"DiffuSize"],[3,"DiffF32"],[3,"DiffF64"],[3,"Diffbool"],[3,"Diffchar"],[3,"Diffunit"]]},\
"identity_iota":{"doc":"","i":[[0,"chain","identity_iota","",null,null],[3,"AuthChain","identity_iota::chain","",null,null],[12,"current","","",0,null],[12,"history","","",0,null],[3,"DiffChain","","",null,null],[12,"inner","","",1,null],[3,"DocumentChain","","",null,null],[12,"auth_chain","","",2,null],[12,"diff_chain","","",2,null],[12,"document","","",2,null],[0,"auth","","",null,null],[3,"AuthChain","identity_iota::chain::auth","",null,null],[12,"current","","",0,null],[12,"history","","",0,null],[11,"try_from_messages","identity_iota::chain","Constructs a new `AuthChain` from a slice of `Message`s.",0,[[["iotadid",3]],["result",6]]],[11,"new","","Creates a new `AuthChain` with the given `IotaDocument` as…",0,[[["iotadocument",3]],["result",6]]],[11,"current","","Returns a reference to the latest document in the auth…",0,[[],["iotadocument",3]]],[11,"current_mut","","Returns a mutable reference to the latest document in the…",0,[[],["iotadocument",3]]],[11,"current_message_id","","Returns the Tangle message Id of the latest auth document.",0,[[],["messageid",3]]],[11,"try_push","","Adds a new document to the auth chain.",0,[[["iotadocument",3]],["result",6]]],[11,"is_valid","","Returns `true` if the `IotaDocument` can be added to the…",0,[[["iotadocument",3]]]],[11,"check_validity","","Checks if the `IotaDocument` can be added to the auth chain.",0,[[["iotadocument",3]],["result",6]]],[0,"diff","","",null,null],[3,"DiffChain","identity_iota::chain::diff","",null,null],[12,"inner","","",1,null],[11,"try_from_messages","identity_iota::chain","Constructs a new `DiffChain` for the given `AuthChain`…",1,[[["authchain",3]],["result",6]]],[11,"new","","Creates a new `DiffChain`.",1,[[]]],[11,"len","","Returns the total number of diffs in the chain.",1,[[]]],[11,"is_empty","","Returns `true` if the diff chain is empty.",1,[[]]],[11,"clear","","Empties the diff chain, removing all diffs.",1,[[]]],[11,"iter","","Returns an iterator yielding references to `DocumentDiff`s.",1,[[],[["iter",3],["documentdiff",3]]]],[11,"current_message_id","","Returns the `MessageId` of the latest diff if the chain,…",1,[[],[["option",4],["messageid",3]]]],[11,"try_push","","Adds a new diff to the diff chain.",1,[[["authchain",3],["documentdiff",3]],["result",6]]],[11,"push_unchecked","","Adds a new diff to the diff chain with performing…",1,[[["documentdiff",3]]]],[11,"is_valid","","Returns `true` if the `DocumentDiff` can be added to the…",1,[[["documentdiff",3],["authchain",3]]]],[11,"check_validity","","Checks if the `DocumentDiff` can be added to the diff chain.",1,[[["documentdiff",3],["authchain",3]],["result",6]]],[0,"document","","",null,null],[3,"DocumentChain","identity_iota::chain::document","",null,null],[12,"auth_chain","","",2,null],[12,"diff_chain","","",2,null],[12,"document","","",2,null],[11,"__diff_message_id","identity_iota::chain","",2,[[["diffchain",3],["authchain",3]],["messageid",3]]],[11,"__fold","","",2,[[["authchain",3],["diffchain",3]],[["iotadocument",3],["result",6]]]],[11,"new","","Creates a new `DocumentChain` from given the `AuthChain`.",2,[[["authchain",3]]]],[11,"with_diff_chain","","Creates a new `DocumentChain` from given the `AuthChain`…",2,[[["authchain",3],["diffchain",3]],["result",6]]],[11,"id","","Returns a reference to the DID identifying the document…",2,[[],["iotadid",3]]],[11,"auth","","Returns a reference to the `AuthChain`.",2,[[],["authchain",3]]],[11,"auth_mut","","Returns a mutable reference to the `AuthChain`.",2,[[],["authchain",3]]],[11,"diff","","Returns a reference to the `DiffChain`.",2,[[],["diffchain",3]]],[11,"diff_mut","","Returns a mutable reference to the `DiffChain`.",2,[[],["diffchain",3]]],[11,"fold","","",2,[[],[["iotadocument",3],["result",6]]]],[11,"current","","Returns a reference to the latest document in the chain.",2,[[],["iotadocument",3]]],[11,"current_mut","","Returns a mutable reference to the latest document in the…",2,[[],["iotadocument",3]]],[11,"auth_message_id","","Returns the Tangle message Id of the latest auth document.",2,[[],["messageid",3]]],[11,"diff_message_id","","Returns the Tangle message Id of the latest diff or auth…",2,[[],["messageid",3]]],[11,"try_push_auth","","Adds a new auth document to the chain.",2,[[["iotadocument",3]],["result",6]]],[11,"try_push_diff","","Adds a new diff to the current diff chain.",2,[[["documentdiff",3]],["result",6]]],[0,"client","identity_iota","",null,null],[3,"Client","identity_iota::client","",null,null],[12,"client","","",3,null],[12,"network","","",3,null],[3,"ClientBuilder","","A `ClientBuilder` is used to generated a customized…",null,null],[12,"network","","",4,null],[12,"nodes","","",4,null],[3,"TxnPrinter","","",null,null],[12,"0","","",5,null],[12,"1","","",5,null],[4,"Network","","",null,null],[13,"Mainnet","","",6,null],[13,"Devnet","","",6,null],[13,"Comnet","","",6,null],[0,"client","","",null,null],[3,"Client","identity_iota::client::client","",null,null],[12,"client","","",3,null],[12,"network","","",3,null],[5,"create_transfer","","",null,[[],[["transfer",3],["result",6]]]],[5,"__dbg_transactions","","",null,[[["findtransactionsresponse",3]],[["vec",3],["string",3]]]],[5,"__dbg_trytes","","",null,[[["gettrytesresponse",3]],[["vec",3],["txnprinter",3]]]],[11,"new","identity_iota::client","Creates a new `Client`  with default settings.",3,[[],["result",6]]],[11,"builder","","Creates a `ClientBuilder` to configure a new `Client`.",3,[[],["clientbuilder",3]]],[11,"from_network","","Creates a new `Client` with default settings for the given…",3,[[["network",4]],["result",6]]],[11,"from_builder","","Creates a new `Client` based on the `ClientBuilder`…",3,[[["clientbuilder",3]],["result",6]]],[11,"network","","Returns the `Client` Tangle network.",3,[[],["network",4]]],[11,"default_node_url","","Returns the default node URL of the `Client` network.",3,[[],["url",3]]],[11,"explorer_url","","Returns the web explorer URL of the `Client` network.",3,[[],["url",3]]],[11,"transaction_url","","Returns the web explorer URL of the given `transaction`.",3,[[["bundledtransaction",3]],["url",3]]],[11,"transaction_hash","","Returns the hash of the Tangle transaction as a…",3,[[["bundledtransaction",3]],["string",3]]],[11,"publish_document","","Publishes an `IotaDocument` to the Tangle.",3,[[["iotadocument",3]]]],[11,"publish_diff","","Publishes a `DocumentDiff` to the Tangle.",3,[[["messageid",3],["documentdiff",3]]]],[11,"read_document","","",3,[[["iotadid",3]]]],[11,"read_document_chain","","",3,[[["iotadid",3]]]],[11,"read_messages","","",3,[[]]],[11,"send_transfer","","",3,[[["transfer",3]]]],[11,"check_network","","",3,[[["iotadid",3]],["result",6]]],[0,"client_builder","","",null,null],[3,"ClientBuilder","identity_iota::client::client_builder","A `ClientBuilder` is used to generated a customized…",null,null],[12,"network","","",4,null],[12,"nodes","","",4,null],[11,"new","identity_iota::client","Creates a new `ClientBuilder`.",4,[[]]],[11,"network","","Sets the network of the generated `Client`.",4,[[["network",4]]]],[11,"node","","Adds an IOTA node to the generated `Client`.",4,[[]]],[11,"nodes","","Adds an iterator of IOTA nodes to the generated `Client`.",4,[[]]],[11,"build","","Creates a new `Client` based on the `ClientBuilder`…",4,[[],[["client",3],["result",6]]]],[0,"network","","",null,null],[3,"EXPLORER_MAIN","identity_iota::client::network","",null,null],[12,"__private_field","","",7,null],[3,"EXPLORER_DEV","","",null,null],[12,"__private_field","","",8,null],[3,"EXPLORER_COM","","",null,null],[12,"__private_field","","",9,null],[3,"NODE_MAIN","","",null,null],[12,"__private_field","","",10,null],[3,"NODE_DEV","","",null,null],[12,"__private_field","","",11,null],[3,"NODE_COM","","",null,null],[12,"__private_field","","",12,null],[4,"Network","","",null,null],[13,"Mainnet","","",6,null],[13,"Devnet","","",6,null],[13,"Comnet","","",6,null],[11,"from_name","identity_iota::client","",6,[[]]],[11,"matches_did","","",6,[[["iotadid",3]]]],[11,"node_url","","Returns the default node URL of the Tangle network.",6,[[],["url",3]]],[11,"explorer_url","","Returns the web explorer URL of the Tangle network.",6,[[],["url",3]]],[11,"as_str","","Returns the name of the network as a static `str`.",6,[[]]],[0,"resolver","","",null,null],[0,"txn_printer","","",null,null],[3,"TxnPrinter","identity_iota::client::txn_printer","",null,null],[12,"0","","",5,null],[12,"1","","",5,null],[4,"__Full","","",null,null],[4,"__Mini","","",null,null],[4,"__Hash","","",null,null],[11,"full","identity_iota::client","",5,[[["bundledtransaction",3]]]],[11,"mini","","",5,[[["bundledtransaction",3]]]],[11,"hash","","",5,[[["bundledtransaction",3]]]],[0,"credential","identity_iota","",null,null],[3,"CredentialValidation","identity_iota::credential","",null,null],[12,"credential","","",13,null],[12,"issuer","","",13,null],[12,"subjects","","",13,null],[12,"verified","","",13,null],[3,"CredentialValidator","","",null,null],[12,"client","","",14,null],[3,"DocumentValidation","","",null,null],[12,"did","","",15,null],[12,"document","","",15,null],[12,"metadata","","",15,null],[12,"verified","","",15,null],[3,"PresentationValidation","","",null,null],[12,"presentation","","",16,null],[12,"holder","","",16,null],[12,"credentials","","",16,null],[12,"verified","","",16,null],[0,"validator","","",null,null],[3,"CredentialValidation","identity_iota::credential::validator","",null,null],[12,"credential","","",13,null],[12,"issuer","","",13,null],[12,"subjects","","",13,null],[12,"verified","","",13,null],[3,"PresentationValidation","","",null,null],[12,"presentation","","",16,null],[12,"holder","","",16,null],[12,"credentials","","",16,null],[12,"verified","","",16,null],[3,"DocumentValidation","","",null,null],[12,"did","","",15,null],[12,"document","","",15,null],[12,"metadata","","",15,null],[12,"verified","","",15,null],[3,"CredentialValidator","","",null,null],[12,"client","","",14,null],[11,"new","identity_iota::credential","Creates a new `CredentialValidator`.",14,[[["client",3]]]],[11,"check","","Deserializes the given JSON-encoded `VerifiableCredential`…",14,[[]]],[11,"check_presentation","","Deserializes the given JSON-encoded…",14,[[]]],[11,"validate_credential","","Validates the `VerifiableCredential` proof and all…",14,[[["verifiablecredential",3]]]],[11,"validate_presentation","","Validates the `VerifiablePresentation` proof and all…",14,[[["verifiablepresentation",3]]]],[11,"validate_document","","",14,[[]]],[0,"did","identity_iota","",null,null],[3,"IotaDID","identity_iota::did","",null,null],[12,"0","","",17,null],[3,"Segments","","",null,null],[12,"0","","",18,null],[3,"IotaDocument","","",null,null],[12,"document","","",19,null],[12,"message_id","","",19,null],[3,"IotaDocumentBuilder","","",null,null],[12,"authentication_tag","","",20,null],[12,"authentication_type","","",20,null],[12,"did_network","","",20,null],[12,"did_shard","","",20,null],[12,"immutable","","",20,null],[3,"DocumentDiff","","",null,null],[12,"did","","",21,null],[12,"diff","","",21,null],[12,"previous_message_id","","",21,null],[12,"proof","","",21,null],[12,"message_id","","",21,null],[3,"Properties","","",null,null],[12,"created","","",22,null],[12,"updated","","",22,null],[12,"immutable","","",22,null],[12,"previous_message_id","","",22,null],[12,"properties","","",22,null],[0,"did","","",null,null],[3,"IotaDID","identity_iota::did::did","",null,null],[12,"0","","",17,null],[17,"BLAKE2B_256_LEN","","",null,null],[18,"METHOD","identity_iota::did","The DID method name.",17,null],[18,"DEFAULT_NETWORK","","The default Tangle network.",17,null],[11,"generate_ed25519","","Generates an `IotaDID` and `KeyPair` suitable for…",17,[[],["result",6]]],[11,"try_from_borrowed","","Converts a borrowed `DID` to an `IotaDID.`",17,[[["did",3]],["result",6]]],[11,"try_from_owned","","Converts an owned `DID` to an `IotaDID.`",17,[[["did",3]],["result",6]]],[11,"new_unchecked_ref","","Converts a `DID` reference to an `IotaDID` reference…",17,[[["did",3]]]],[11,"parse","","Parses an `IotaDID` from the given `input`.",17,[[],["result",6]]],[11,"new","","Creates a new `IotaDID` with a tag derived from the given…",17,[[],["result",6]]],[11,"with_network","","Creates a new `IotaDID` for the given `public` key and…",17,[[],["result",6]]],[11,"with_network_and_shard","","Creates a new `IotaDID` for the given `public` key,…",17,[[],["result",6]]],[11,"join","","Creates a new [`IotaDID`] by joining `self` with the…",17,[[],["result",6]]],[11,"check_method","","Checks if the given `DID` has a valid `IotaDID` `method`.",17,[[["did",3]],["result",6]]],[11,"check_method_id","","Checks if the given `DID` has a valid `IotaDID` `method_id`.",17,[[["did",3]],["result",6]]],[11,"check_validity","","Checks if the given `DID` is a valid `IotaDID`.",17,[[["did",3]],["result",6]]],[11,"is_valid","","Returns a `bool` indicating if the given `DID` is a valid…",17,[[["did",3]]]],[11,"network","","Returns the Tangle `network` of the `IotaDID`.",17,[[]]],[11,"shard","","Returns the Tangle network `shard` of the `IotaDID`.",17,[[],["option",4]]],[11,"tag","","Returns the unique Tangle tag of the `IotaDID`.",17,[[]]],[11,"segments","","",17,[[],["segments",3]]],[11,"address","","Returns the Tangle address of the DID auth chain.",17,[[],["string",3]]],[11,"normalize","","",17,[[["did",3]],["did",3]]],[11,"encode_key","","",17,[[],["string",3]]],[0,"did_segments","","",null,null],[3,"Segments","identity_iota::did::did_segments","",null,null],[12,"0","","",18,null],[11,"is_default_network","identity_iota::did","",18,[[]]],[11,"network","","",18,[[]]],[11,"shard","","",18,[[],["option",4]]],[11,"tag","","",18,[[]]],[11,"count","","",18,[[]]],[0,"document","","",null,null],[3,"IotaDocument","identity_iota::did::document","",null,null],[12,"document","","",19,null],[12,"message_id","","",19,null],[6,"Properties","","",null,null],[6,"__Document","","",null,null],[17,"AUTH_QUERY","","",null,null],[17,"ERR_AMNS","","",null,null],[17,"ERR_AMMF","","",null,null],[17,"ERR_AMIM","","",null,null],[11,"generate_ed25519","identity_iota::did","",19,[[],["result",6]]],[11,"try_from_document","","Converts a generic DID `Document` to an `IotaDocument`.",19,[[["object",6],["document",3]],["result",6]]],[11,"builder","","Creates a `IotaDocumentBuilder` to configure a new…",19,[[],["iotadocumentbuilder",3]]],[11,"id","","Returns the DID document `id`.",19,[[],["iotadid",3]]],[11,"authentication","","Returns the default authentication method of the DID…",19,[[],["methodwrap",3]]],[11,"authentication_bytes","","Returns the key bytes of the default DID document…",19,[[],[["result",6],["vec",3]]]],[11,"authentication_type","","Returns the method type of the default DID document…",19,[[],["methodtype",4]]],[11,"created","","Returns the timestamp of when the DID document was created.",19,[[],["timestamp",3]]],[11,"set_created","","Sets the timestamp of when the DID document was created.",19,[[["timestamp",3]]]],[11,"set_created_now","","Sets the DID document \\\"created\\\" timestamp to…",19,[[]]],[11,"updated","","Returns the timestamp of the last DID document update.",19,[[],["timestamp",3]]],[11,"set_updated","","Sets the timestamp of the last DID document update.",19,[[["timestamp",3]]]],[11,"set_updated_now","","Sets the DID document \\\"updated\\\" timestamp to…",19,[[]]],[11,"previous_message_id","","Returns the Tangle message id of the previous DID…",19,[[],["messageid",3]]],[11,"set_previous_message_id","","Sets the Tangle message id the previous DID document.",19,[[]]],[11,"immutable","","Returns true if the `IotaDocument` is flagged as immutable.",19,[[]]],[11,"set_immutable","","Sets the value of the `immutable` flag.",19,[[]]],[11,"properties","","Returns a reference to the custom `IotaDocument` properties.",19,[[],["object",6]]],[11,"properties_mut","","Returns a mutable reference to the custom `IotaDocument`…",19,[[],["object",6]]],[11,"as_document","","Returns a reference to the underlying `Document`.",19,[[],["document",3]]],[11,"as_document_mut","","Returns a mutable reference to the underlying `Document`.",19,[[],["document",3]]],[11,"sign","","Signs the DID document with the default authentication…",19,[[["secretkey",6]],["result",6]]],[11,"verify","","Verifies the signature of the DID document.",19,[[],["result",6]]],[11,"sign_data","","Signs the provided data with the default authentication…",19,[[["secretkey",6]],["result",6]]],[11,"verify_data","","Verfies the signature of the provided data.",19,[[],["result",6]]],[11,"resolve_options","","",19,[[],[["result",6],["signatureoptions",3]]]],[11,"diff","","Creates a `DocumentDiff` representing the changes between…",19,[[["secretkey",6],["messageid",3]],[["result",6],["documentdiff",3]]]],[11,"merge","","Verifies a `DocumentDiff` signature and merges the changes…",19,[[["documentdiff",3]],["result",6]]],[11,"publish","","Publishes the `IotaDocument` to the Tangle using a default…",19,[[]]],[11,"publish_with_client","","Publishes the `IotaDocument` to the Tangle using the…",19,[[["client",3]]]],[11,"diff_address","","Returns the Tangle address of the DID diff chain.",19,[[["messageid",3]],[["result",6],["string",3]]]],[0,"document_builder","","",null,null],[3,"IotaDocumentBuilder","identity_iota::did::document_builder","",null,null],[12,"authentication_tag","","",20,null],[12,"authentication_type","","",20,null],[12,"did_network","","",20,null],[12,"did_shard","","",20,null],[12,"immutable","","",20,null],[11,"new","identity_iota::did","",20,[[]]],[11,"authentication_tag","","",20,[[]]],[11,"authentication_type","","",20,[[["methodtype",4]]]],[11,"did_network","","",20,[[]]],[11,"did_shard","","",20,[[]]],[11,"immutable","","",20,[[]]],[11,"build","","",20,[[],["result",6]]],[11,"default_keypair","","",20,[[["methodtype",4]],[["keypair",3],["result",6]]]],[0,"document_diff","","",null,null],[3,"DocumentDiff","identity_iota::did::document_diff","",null,null],[12,"did","","",21,null],[12,"diff","","",21,null],[12,"previous_message_id","","",21,null],[12,"proof","","",21,null],[12,"message_id","","",21,null],[11,"new","identity_iota::did","",21,[[["iotadocument",3],["messageid",3]],["result",6]]],[11,"id","","Returns the DID of associated document.",21,[[],["iotadid",3]]],[11,"diff","","Returns the raw contents of the DID document diff.",21,[[]]],[11,"previous_message_id","","Returns the Tangle message id of the previous DID document…",21,[[],["messageid",3]]],[11,"proof","","Returns a reference to the `DocumentDiff` proof.",21,[[],[["option",4],["signature",3]]]],[11,"publish","","Publishes the `DocumentDiff` to the Tangle using a default…",21,[[["messageid",3]]]],[11,"publish_with_client","","Publishes the `DocumentDiff` to the Tangle using the…",21,[[["messageid",3],["client",3]]]],[11,"merge","","",21,[[["iotadocument",3]],[["iotadocument",3],["result",6]]]],[0,"document_properties","","",null,null],[3,"Properties","identity_iota::did::document_properties","",null,null],[12,"created","","",22,null],[12,"updated","","",22,null],[12,"immutable","","",22,null],[12,"previous_message_id","","",22,null],[12,"properties","","",22,null],[11,"new","identity_iota::did","",22,[[]]],[0,"error","identity_iota","",null,null],[4,"Error","identity_iota::error","",null,null],[13,"CoreError","","",23,null],[13,"DiffError","","",23,null],[13,"CredError","","",23,null],[13,"InvalidDID","","",23,null],[13,"InvalidDoc","","",23,null],[13,"ClientError","","",23,null],[13,"TernaryError","","",23,null],[13,"InvalidDocument","","",23,null],[12,"error","identity_iota::error::Error","",24,null],[13,"InvalidDIDNetwork","identity_iota::error","",23,null],[13,"InvalidTryteConversion","","",23,null],[13,"InvalidTransactionBundle","","",23,null],[13,"InvalidTransactionHashes","","",23,null],[13,"InvalidTransactionTrytes","","",23,null],[13,"InvalidBundleTail","","",23,null],[13,"InvalidPresentationHolder","","",23,null],[13,"ChainError","","",23,null],[12,"error","identity_iota::error::Error","",25,null],[6,"Result","identity_iota::error","",null,null],[0,"tangle","identity_iota","",null,null],[3,"Message","identity_iota::tangle","",null,null],[12,"address","","",26,null],[12,"message","","",26,null],[12,"tail_hash","","",26,null],[12,"timestamp","","",26,null],[3,"MessageId","","",null,null],[12,"0","","",27,null],[3,"MessageIndex","","",null,null],[12,"inner","","",28,null],[0,"message","","",null,null],[3,"Message","identity_iota::tangle::message","",null,null],[12,"address","","",26,null],[12,"message","","",26,null],[12,"tail_hash","","",26,null],[12,"timestamp","","",26,null],[11,"try_from_bundle","identity_iota::tangle","",26,[[["bundledtransaction",3],["vec",3]],["result",6]]],[11,"message_str","","Returns the contents of the message as a tryte-encoded…",26,[[],["string",3]]],[11,"message_utf8","","Returns the contents of the message as a utf8-encoded…",26,[[],[["result",6],["string",3]]]],[11,"message_id","","Returns the `MessageId` identifying the Tangle message.",26,[[],["messageid",3]]],[11,"try_extract_document","","",26,[[["iotadid",3]],[["option",4],["iotadocument",3]]]],[11,"try_extract_diff","","",26,[[["iotadid",3]],[["option",4],["documentdiff",3]]]],[0,"message_id","","",null,null],[3,"MessageId","identity_iota::tangle::message_id","",null,null],[12,"0","","",27,null],[5,"maybe_trytes","","",null,[[]]],[18,"NONE","identity_iota::tangle","",27,null],[11,"new","","",27,[[]]],[11,"is_none","","",27,[[]]],[11,"is_some","","",27,[[]]],[11,"as_str","","",27,[[]]],[0,"message_index","","",null,null],[3,"MessageIndex","identity_iota::tangle::message_index","",null,null],[12,"inner","","",28,null],[6,"__Index","","",null,null],[11,"new","identity_iota::tangle","Creates a new `MessageIndex`.",28,[[]]],[11,"size","","Returns the total size of the index.",28,[[]]],[11,"remove_where","","",28,[[],["option",4]]],[11,"insert","","",28,[[]]],[11,"extend","","",28,[[]]],[0,"traits","","",null,null],[8,"TangleRef","identity_iota::tangle::traits","",null,null],[10,"message_id","","",29,[[],["messageid",3]]],[10,"set_message_id","","",29,[[["messageid",3]]]],[10,"previous_message_id","","",29,[[],["messageid",3]]],[10,"set_previous_message_id","","",29,[[["messageid",3]]]],[8,"TangleRef","identity_iota::tangle","",null,null],[10,"message_id","","",29,[[],["messageid",3]]],[10,"set_message_id","","",29,[[["messageid",3]]]],[10,"previous_message_id","","",29,[[],["messageid",3]]],[10,"set_previous_message_id","","",29,[[["messageid",3]]]],[0,"utils","identity_iota","",null,null],[5,"txn_hash","identity_iota::utils","",null,[[["bundledtransaction",3]],["hash",3]]],[5,"txn_hash_trytes","","",null,[[["bundledtransaction",3]],["string",3]]],[5,"encode_trits","","",null,[[["trits",3]],["string",3]]],[5,"create_address_from_trits","","",null,[[],[["address",3],["result",6]]]],[5,"to_tryte","","",null,[[]]],[5,"utf8_to_trytes","","",null,[[],["string",3]]],[5,"trytes_to_utf8","","",null,[[],[["result",6],["string",3]]]],[5,"bundles_from_trytes","","",null,[[["bundledtransaction",3],["vec",3]],[["vec",3],["vec",3]]]],[5,"cmp_trits","","",null,[[["trits",3]],["ordering",4]]],[5,"cmp_transaction","","",null,[[["bundledtransaction",3]]]],[11,"from","identity_iota::chain","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","identity_iota::client","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"equivalent","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"from","identity_iota::client::network","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","identity_iota::client::txn_printer","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","identity_iota::credential","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","identity_iota::did","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"equivalent","","",17,[[]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","identity_iota::error","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"as_fail","","",23,[[],["fail",8]]],[11,"from","identity_iota::tangle","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"equivalent","","",27,[[]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"message_id","identity_iota::did","",19,[[],["messageid",3]]],[11,"set_message_id","","",19,[[["messageid",3]]]],[11,"previous_message_id","","",19,[[],["messageid",3]]],[11,"set_previous_message_id","","",19,[[["messageid",3]]]],[11,"message_id","","",21,[[],["messageid",3]]],[11,"set_message_id","","",21,[[["messageid",3]]]],[11,"previous_message_id","","",21,[[],["messageid",3]]],[11,"set_previous_message_id","","",21,[[["messageid",3]]]],[11,"as_ref","","",17,[[],["did",3]]],[11,"as_ref","","",17,[[]]],[11,"from","identity_iota::client","",6,[[["network",4]],["network",4]]],[11,"from","identity_iota::did","",19,[[["document",3],["verifiableproperties",3]]]],[11,"from","identity_iota::error","",23,[[["error",4]]]],[11,"from","","",23,[[["error",4]]]],[11,"from","","",23,[[["error",4]]]],[11,"from","","",23,[[["error",4]]]],[11,"from","","",23,[[["error",4]]]],[11,"from","","",23,[[["error",4]]]],[11,"from","","",23,[[["error",4]]]],[11,"from","identity_iota::tangle","",27,[[["string",3]]]],[11,"clone","identity_iota::client","",3,[[],["client",3]]],[11,"clone","","",4,[[],["clientbuilder",3]]],[11,"clone","","",6,[[],["network",4]]],[11,"clone","identity_iota::credential","",13,[[],["credentialvalidation",3]]],[11,"clone","","",16,[[],["presentationvalidation",3]]],[11,"clone","","",15,[[],["documentvalidation",3]]],[11,"clone","","",14,[[],["credentialvalidator",3]]],[11,"clone","identity_iota::did","",17,[[],["iotadid",3]]],[11,"clone","","",18,[[],["segments",3]]],[11,"clone","","",19,[[],["iotadocument",3]]],[11,"clone","","",20,[[],["iotadocumentbuilder",3]]],[11,"clone","","",21,[[],["documentdiff",3]]],[11,"clone","","",22,[[],["properties",3]]],[11,"clone","identity_iota::tangle","",27,[[],["messageid",3]]],[11,"clone","","",28,[[],["messageindex",3]]],[11,"default","identity_iota::chain","",1,[[]]],[11,"default","identity_iota::client","",4,[[]]],[11,"default","","",6,[[]]],[11,"default","identity_iota::did","",20,[[]]],[11,"default","","",22,[[]]],[11,"default","identity_iota::tangle","",27,[[]]],[11,"default","","",28,[[]]],[11,"cmp","identity_iota::client","",6,[[["network",4]],["ordering",4]]],[11,"cmp","identity_iota::did","",17,[[["iotadid",3]],["ordering",4]]],[11,"cmp","identity_iota::tangle","",27,[[["messageid",3]],["ordering",4]]],[11,"eq","identity_iota::client","",6,[[["network",4]]]],[11,"eq","identity_iota::credential","",13,[[["credentialvalidation",3]]]],[11,"ne","","",13,[[["credentialvalidation",3]]]],[11,"eq","","",16,[[["presentationvalidation",3]]]],[11,"ne","","",16,[[["presentationvalidation",3]]]],[11,"eq","","",15,[[["documentvalidation",3]]]],[11,"ne","","",15,[[["documentvalidation",3]]]],[11,"eq","identity_iota::did","",17,[[["iotadid",3]]]],[11,"ne","","",17,[[["iotadid",3]]]],[11,"eq","","",17,[[["did",3]]]],[11,"eq","","",18,[[["segments",3]]]],[11,"ne","","",18,[[["segments",3]]]],[11,"eq","","",19,[[["iotadocument",3]]]],[11,"ne","","",19,[[["iotadocument",3]]]],[11,"eq","","",19,[[["document",3]]]],[11,"eq","","",21,[[["documentdiff",3]]]],[11,"ne","","",21,[[["documentdiff",3]]]],[11,"eq","","",22,[[["properties",3]]]],[11,"ne","","",22,[[["properties",3]]]],[11,"eq","identity_iota::tangle","",27,[[["messageid",3]]]],[11,"ne","","",27,[[["messageid",3]]]],[11,"eq","","",27,[[]]],[11,"partial_cmp","identity_iota::client","",6,[[["network",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","identity_iota::did","",17,[[["iotadid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["iotadid",3]]]],[11,"le","","",17,[[["iotadid",3]]]],[11,"gt","","",17,[[["iotadid",3]]]],[11,"ge","","",17,[[["iotadid",3]]]],[11,"partial_cmp","identity_iota::tangle","",27,[[["messageid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",27,[[["messageid",3]]]],[11,"le","","",27,[[["messageid",3]]]],[11,"gt","","",27,[[["messageid",3]]]],[11,"ge","","",27,[[["messageid",3]]]],[11,"deref","identity_iota::client::network","",7,[[],["url",3]]],[11,"deref","","",8,[[],["url",3]]],[11,"deref","","",9,[[],["url",3]]],[11,"deref","","",10,[[],["url",3]]],[11,"deref","","",11,[[],["url",3]]],[11,"deref","","",12,[[],["url",3]]],[11,"deref","identity_iota::did","",17,[[]]],[11,"deref","","",19,[[]]],[11,"deref","identity_iota::tangle","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"fmt","identity_iota::chain","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","identity_iota::client","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","identity_iota::credential","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","identity_iota::did","",17,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","identity_iota::error","",23,[[["formatter",3]],["result",6]]],[11,"fmt","identity_iota::tangle","",26,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","identity_iota::client","",5,[[["formatter",3]],["result",6]]],[11,"fmt","identity_iota::did","",17,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",19,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_iota::error","",23,[[["formatter",3]],["result",6]]],[11,"hash","identity_iota::client","",6,[[]]],[11,"hash","identity_iota::did","",17,[[]]],[11,"try_from","","",17,[[["did",3]],["result",6]]],[11,"try_from","","",19,[[["object",6],["document",3]],["result",6]]],[11,"from_str","","",17,[[],["result",6]]],[11,"from_iter","identity_iota::tangle","",28,[[]]],[11,"source","identity_iota::error","",23,[[],[["option",4],["error",8]]]],[11,"initialize","identity_iota::client::network","",7,[[]]],[11,"initialize","","",8,[[]]],[11,"initialize","","",9,[[]]],[11,"initialize","","",10,[[]]],[11,"initialize","","",11,[[]]],[11,"initialize","","",12,[[]]],[11,"serialize","identity_iota::credential","",13,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","identity_iota::did","",17,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","identity_iota::tangle","",27,[[],["result",4]]],[11,"deserialize","identity_iota::did","",17,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","identity_iota::tangle","",27,[[],["result",4]]],[11,"signature","identity_iota::did","",19,[[],[["option",4],["signature",3]]]],[11,"signature","","",21,[[],[["option",4],["signature",3]]]],[11,"signature_mut","","",19,[[],[["option",4],["signature",3]]]],[11,"signature_mut","","",21,[[],[["option",4],["signature",3]]]],[11,"set_signature","","",19,[[["signature",3]]]],[11,"set_signature","","",21,[[["signature",3]]]],[11,"resolve_method","","",19,[[["methodquery",3]],[["methodwrap",3],["option",4]]]],[11,"is_supported","identity_iota::client","",3,[[["did",3]]]],[11,"read","","",3,[[["did",3],["inputmetadata",3]],[["box",3],["pin",3]]]]],"p":[[3,"AuthChain"],[3,"DiffChain"],[3,"DocumentChain"],[3,"Client"],[3,"ClientBuilder"],[3,"TxnPrinter"],[4,"Network"],[3,"EXPLORER_MAIN"],[3,"EXPLORER_DEV"],[3,"EXPLORER_COM"],[3,"NODE_MAIN"],[3,"NODE_DEV"],[3,"NODE_COM"],[3,"CredentialValidation"],[3,"CredentialValidator"],[3,"DocumentValidation"],[3,"PresentationValidation"],[3,"IotaDID"],[3,"Segments"],[3,"IotaDocument"],[3,"IotaDocumentBuilder"],[3,"DocumentDiff"],[3,"Properties"],[4,"Error"],[13,"InvalidDocument"],[13,"ChainError"],[3,"Message"],[3,"MessageId"],[3,"MessageIndex"],[8,"TangleRef"],[4,"__Full"],[4,"__Mini"],[4,"__Hash"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);