initSidebarItems({"enum":[["Context","A reference to a JSON-LD context"],["Error","This type represents all possible errors that can occur in the library."],["OneOrMany","A generic container that stores one or many values of a given type."],["Value","Represents any valid JSON value."]],"fn":[["decode_b16","Decodes the given `data` as base16 (hex)."],["decode_b58","Decodes the given `data` as base58-btc."],["decode_b64","Decodes the given `data` as base64."],["encode_b16","Encodes the given `data` as base16 (hex)."],["encode_b58","Encodes the given `data` as base58-btc."],["encode_b64","Encodes the given `data` as base64."],["generate_ed25519","Generates a new pair of public/secret ed25519 keys."],["generate_ed25519_list","Generates a list of public/secret ed25519 keys."]],"macro":[["json","Construct a `serde_json::Value` from a JSON literal."]],"mod":[["diff","This module implements a `Diff` trait type.  The Diff trait gives data structures an ability to compare themselves to another data structure of the same type over time.  The library pairs off with `identity_derive` which implements a derive macro for the `Diff` Trait. Types supported include `HashMap`, `Option`, `String`, `serde_json::Value`, `Vec` and primitives such as `i8`/`u8` up to `usize` and `isize` as well as the unit type `()`, `bool`, and `char` types.  Structs and Enums are supported via `identity_derive` and can be composed of any number of these types."]],"struct":[["BitSet","A general-purpose compressed bitset."],["Timestamp","A parsed Timestamp."],["Url","A parsed URL."]],"trait":[["AsJson","A convenience-trait for types that can be converted to and from JSON."],["FromJson","A convenience-trait for types that can be deserialized from JSON."],["SerdeInto","An escape-hatch for converting between types that represent the same JSON structure."],["ToJson","A convenience-trait for types that can be serialized as JSON."]],"type":[["Object","An alias for an ordered map of key-[value][`Value`] pairs."],["Result","Alias for a `Result` with the error type [`Error`]."]]});