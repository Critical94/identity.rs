initSidebarItems({"enum":[["DIDError",""],["Error","This type represents all possible errors that can occur in the library."],["MethodData","Supported verification method data formats."],["MethodIdent","Index or identifier used to identify the target verification method of a `MethodQuery`."],["MethodRef","A reference to a verification method, either a `DID` or embedded `Method`."],["MethodScope","Verification method group used to refine the scope of a method query."],["MethodType","Supported verification method types."]],"macro":[["did","A helper macro to assist with the construction of [`DID`]s."]],"mod":[["resolution","Types and traits for DID Document resolution."],["verifiable",""]],"struct":[["DID","A Decentralized Identifier (DID)."],["DIDKey","A helper struct for comparing types only by `DID`."],["Document","A DID Document"],["DocumentBuilder","A `DocumentBuilder` is used to generate a customized `Document`."],["Method","A DID Document Verification Method"],["MethodBuilder","A `MethodBuilder` is used to generate a customized `Method`."],["MethodQuery","Specifies the  conditions of a DID document method resolution query."],["MethodWrap","A queried `Method` with additional metadata about the query resolution."],["OrderedSet","An ordered set based on a `Vec<T>`."],["Service","A DID Document Service"],["ServiceBuilder","A `ServiceBuilder` is used to generate a customized `Service`."]],"type":[["Result","Alias for a `Result` with the error type [`Error`]."]]});