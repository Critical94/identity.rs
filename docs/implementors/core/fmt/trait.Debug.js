(function() {var implementors = {};
implementors["identity_core"] = [{"text":"impl Debug for Context","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Debug for OneOrMany&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Debug,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Debug for Timestamp","synthetic":false,"types":[]},{"text":"impl Debug for Url","synthetic":false,"types":[]},{"text":"impl Debug for Public","synthetic":false,"types":[]},{"text":"impl Debug for Secret","synthetic":false,"types":[]},{"text":"impl&lt;V:&nbsp;Sealed&gt; Debug for Key&lt;V&gt;","synthetic":false,"types":[]},{"text":"impl Debug for KeyPair","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Digest&gt; Debug for Hash&lt;D&gt;","synthetic":false,"types":[]},{"text":"impl&lt;D&gt; Debug for MTree&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Digest,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Digest&gt; Debug for Node&lt;D&gt;","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Digest&gt; Debug for Proof&lt;D&gt;","synthetic":false,"types":[]},{"text":"impl Debug for JcsEd25519Signature2020","synthetic":false,"types":[]},{"text":"impl Debug for Signature","synthetic":false,"types":[]},{"text":"impl Debug for SignatureData","synthetic":false,"types":[]},{"text":"impl Debug for SignatureOptions","synthetic":false,"types":[]},{"text":"impl Debug for SignatureValue","synthetic":false,"types":[]},{"text":"impl Debug for Error","synthetic":false,"types":[]}];
implementors["identity_credential"] = [{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for CredentialBuilder&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for Credential&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Debug for Evidence","synthetic":false,"types":[]},{"text":"impl Debug for IssuerData","synthetic":false,"types":[]},{"text":"impl Debug for Issuer","synthetic":false,"types":[]},{"text":"impl Debug for Policy","synthetic":false,"types":[]},{"text":"impl Debug for Refresh","synthetic":false,"types":[]},{"text":"impl Debug for Schema","synthetic":false,"types":[]},{"text":"impl Debug for Status","synthetic":false,"types":[]},{"text":"impl Debug for Subject","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for VerifiableCredential&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Debug for Error","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug, U:&nbsp;Debug&gt; Debug for PresentationBuilder&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug, U:&nbsp;Debug&gt; Debug for Presentation&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug, U:&nbsp;Debug&gt; Debug for VerifiablePresentation&lt;T, U&gt;","synthetic":false,"types":[]}];
implementors["identity_derive"] = [{"text":"impl Debug for InputModel","synthetic":false,"types":[]},{"text":"impl Debug for InputEnum","synthetic":false,"types":[]},{"text":"impl Debug for InputStruct","synthetic":false,"types":[]},{"text":"impl Debug for EVariant","synthetic":false,"types":[]},{"text":"impl Debug for SVariant","synthetic":false,"types":[]},{"text":"impl Debug for DataFields","synthetic":false,"types":[]}];
implementors["identity_did"] = [{"text":"impl&lt;T:&nbsp;Debug, U:&nbsp;Debug, V:&nbsp;Debug&gt; Debug for DiffDocument&lt;T, U, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Diff + Serialize + for&lt;'__de&gt; Deserialize&lt;'__de&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Diff + Serialize + for&lt;'__de&gt; Deserialize&lt;'__de&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Diff + Serialize + for&lt;'__de&gt; Deserialize&lt;'__de&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for DiffMethod&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Diff,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Debug for DiffMethodData","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for DiffMethodRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Diff,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for DiffService&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Diff,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug, U:&nbsp;Debug, V:&nbsp;Debug&gt; Debug for DocumentBuilder&lt;T, U, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug, U:&nbsp;Debug, V:&nbsp;Debug&gt; Debug for Document&lt;T, U, V&gt;","synthetic":false,"types":[]},{"text":"impl Debug for Error","synthetic":false,"types":[]},{"text":"impl Debug for Dereference","synthetic":false,"types":[]},{"text":"impl Debug for DocumentMetadata","synthetic":false,"types":[]},{"text":"impl Debug for ErrorKind","synthetic":false,"types":[]},{"text":"impl Debug for ResolveContext","synthetic":false,"types":[]},{"text":"impl Debug for DerefContext","synthetic":false,"types":[]},{"text":"impl Debug for InputMetadata","synthetic":false,"types":[]},{"text":"impl Debug for Resolution","synthetic":false,"types":[]},{"text":"impl Debug for ResolutionMetadata","synthetic":false,"types":[]},{"text":"impl Debug for Resource","synthetic":false,"types":[]},{"text":"impl Debug for PrimaryResource","synthetic":false,"types":[]},{"text":"impl Debug for SecondaryResource","synthetic":false,"types":[]},{"text":"impl Debug for MetaDocument","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for ServiceBuilder&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for Service&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Debug for DIDKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Debug,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Debug for OrderedSet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Debug,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Debug&gt; Debug for LdSuite&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for Properties&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for MethodBuilder&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for Method&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Debug for MethodData","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Debug for MethodIdent&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Debug for MethodQuery&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Debug for MethodRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Debug,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Debug for MethodScope","synthetic":false,"types":[]},{"text":"impl Debug for MethodType","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Debug&gt; Debug for MethodWrap&lt;'a, T&gt;","synthetic":false,"types":[]}];
implementors["identity_diff"] = [{"text":"impl Debug for Error","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Debug for DiffHashMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Debug + Diff,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Debug + Diff,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Debug for InnerValue&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Debug + Diff,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Debug + Diff,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Debug for DiffHashSet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Debug + Diff,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Debug for InnerValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Debug + Diff,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Debug for Diffi8","synthetic":false,"types":[]},{"text":"impl Debug for Diffi16","synthetic":false,"types":[]},{"text":"impl Debug for Diffi32","synthetic":false,"types":[]},{"text":"impl Debug for Diffi64","synthetic":false,"types":[]},{"text":"impl Debug for Diffi128","synthetic":false,"types":[]},{"text":"impl Debug for DiffiSize","synthetic":false,"types":[]},{"text":"impl Debug for Diffu8","synthetic":false,"types":[]},{"text":"impl Debug for Diffu16","synthetic":false,"types":[]},{"text":"impl Debug for Diffu32","synthetic":false,"types":[]},{"text":"impl Debug for Diffu64","synthetic":false,"types":[]},{"text":"impl Debug for Diffu128","synthetic":false,"types":[]},{"text":"impl Debug for DiffuSize","synthetic":false,"types":[]},{"text":"impl Debug for DiffF32","synthetic":false,"types":[]},{"text":"impl Debug for DiffF64","synthetic":false,"types":[]},{"text":"impl Debug for Diffbool","synthetic":false,"types":[]},{"text":"impl Debug for Diffchar","synthetic":false,"types":[]},{"text":"impl Debug for Diffunit","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Diff&gt; Debug for DiffOption&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Debug for DiffString","synthetic":false,"types":[]},{"text":"impl Debug for DiffValue","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Diff&gt; Debug for DiffVec&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Diff&gt; Debug for InnerVec&lt;T&gt;","synthetic":false,"types":[]}];
implementors["identity_iota"] = [{"text":"impl Debug for AuthChain","synthetic":false,"types":[]},{"text":"impl Debug for DiffChain","synthetic":false,"types":[]},{"text":"impl Debug for DocumentChain","synthetic":false,"types":[]},{"text":"impl Debug for Client","synthetic":false,"types":[]},{"text":"impl Debug for ClientBuilder","synthetic":false,"types":[]},{"text":"impl Debug for Network","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; Debug for TxnPrinter&lt;'_, __Full&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; Debug for TxnPrinter&lt;'_, __Mini&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; Debug for TxnPrinter&lt;'_, __Hash&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for CredentialValidation&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug, U:&nbsp;Debug&gt; Debug for PresentationValidation&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl Debug for DocumentValidation","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Debug for CredentialValidator&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Debug for IotaDID","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Debug for Segments&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Debug for IotaDocument","synthetic":false,"types":[]},{"text":"impl Debug for IotaDocumentBuilder","synthetic":false,"types":[]},{"text":"impl Debug for DocumentDiff","synthetic":false,"types":[]},{"text":"impl Debug for Properties","synthetic":false,"types":[]},{"text":"impl Debug for Error","synthetic":false,"types":[]},{"text":"impl Debug for Message","synthetic":false,"types":[]},{"text":"impl Debug for MessageId","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for MessageIndex&lt;T&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()