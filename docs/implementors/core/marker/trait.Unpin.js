(function() {var implementors = {};
implementors["identity_core"] = [{"text":"impl Unpin for Timestamp","synthetic":true,"types":[]},{"text":"impl Unpin for Url","synthetic":true,"types":[]},{"text":"impl Unpin for Context","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for OneOrMany&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for OneOrManyIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for KeyPair","synthetic":true,"types":[]},{"text":"impl Unpin for JcsEd25519Signature2020","synthetic":true,"types":[]},{"text":"impl Unpin for Signature","synthetic":true,"types":[]},{"text":"impl Unpin for SignatureOptions","synthetic":true,"types":[]},{"text":"impl Unpin for SignatureValue","synthetic":true,"types":[]},{"text":"impl Unpin for SignatureData","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Unpin for Key&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Public","synthetic":true,"types":[]},{"text":"impl Unpin for Secret","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for Hash&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;D as Digest&gt;::OutputSize as ArrayLength&lt;u8&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for MTree&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for Proof&lt;D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for Node&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;D as Digest&gt;::OutputSize as ArrayLength&lt;u8&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["identity_credential"] = [{"text":"impl&lt;T&gt; Unpin for CredentialBuilder&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Credential&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Evidence","synthetic":true,"types":[]},{"text":"impl Unpin for Policy","synthetic":true,"types":[]},{"text":"impl Unpin for Refresh","synthetic":true,"types":[]},{"text":"impl Unpin for Schema","synthetic":true,"types":[]},{"text":"impl Unpin for Status","synthetic":true,"types":[]},{"text":"impl Unpin for Subject","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for VerifiableCredential&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Issuer","synthetic":true,"types":[]},{"text":"impl Unpin for BASE_CONTEXT","synthetic":true,"types":[]},{"text":"impl Unpin for IssuerData","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for PresentationBuilder&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Presentation&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for VerifiablePresentation&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["identity_derive"] = [{"text":"impl Unpin for InputEnum","synthetic":true,"types":[]},{"text":"impl Unpin for InputStruct","synthetic":true,"types":[]},{"text":"impl Unpin for EVariant","synthetic":true,"types":[]},{"text":"impl Unpin for InputModel","synthetic":true,"types":[]},{"text":"impl Unpin for SVariant","synthetic":true,"types":[]},{"text":"impl Unpin for DataFields","synthetic":true,"types":[]}];
implementors["identity_did"] = [{"text":"impl&lt;T, U, V&gt; Unpin for DiffDocument&lt;T, U, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: for&lt;'de&gt; Deserialize&lt;'de&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: for&lt;'de&gt; Deserialize&lt;'de&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Diff&gt;::Type: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Diff&gt;::Type: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;V as Diff&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DiffMethod&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Diff&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DiffService&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Diff&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DiffMethodData","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DiffMethodRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Diff&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U, V&gt; Unpin for DocumentBuilder&lt;T, U, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U, V&gt; Unpin for Document&lt;T, U, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Dereference","synthetic":true,"types":[]},{"text":"impl Unpin for DocumentMetadata","synthetic":true,"types":[]},{"text":"impl Unpin for InputMetadata","synthetic":true,"types":[]},{"text":"impl Unpin for Resolution","synthetic":true,"types":[]},{"text":"impl Unpin for ResolutionMetadata","synthetic":true,"types":[]},{"text":"impl Unpin for MetaDocument","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for PrimaryResource","synthetic":true,"types":[]},{"text":"impl Unpin for Resource","synthetic":true,"types":[]},{"text":"impl Unpin for SecondaryResource","synthetic":true,"types":[]},{"text":"impl Unpin for ResolveContext","synthetic":true,"types":[]},{"text":"impl Unpin for DerefContext","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ServiceBuilder&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Service&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DIDKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for OrderedSet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for LdSuite&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Properties&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MethodBuilder&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Method&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MethodQuery&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for MethodWrap&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for MethodData","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MethodIdent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MethodRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MethodScope","synthetic":true,"types":[]},{"text":"impl Unpin for MethodType","synthetic":true,"types":[]}];
implementors["identity_diff"] = [{"text":"impl&lt;K, V&gt; Unpin for DiffHashMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;V as Diff&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DiffHashSet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Diff&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DiffString","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DiffVec&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Diff&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DiffOption&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Diff&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for InnerValue&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;V as Diff&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for InnerValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Diff&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Diffi8","synthetic":true,"types":[]},{"text":"impl Unpin for Diffi16","synthetic":true,"types":[]},{"text":"impl Unpin for Diffi32","synthetic":true,"types":[]},{"text":"impl Unpin for Diffi64","synthetic":true,"types":[]},{"text":"impl Unpin for Diffi128","synthetic":true,"types":[]},{"text":"impl Unpin for DiffiSize","synthetic":true,"types":[]},{"text":"impl Unpin for Diffu8","synthetic":true,"types":[]},{"text":"impl Unpin for Diffu16","synthetic":true,"types":[]},{"text":"impl Unpin for Diffu32","synthetic":true,"types":[]},{"text":"impl Unpin for Diffu64","synthetic":true,"types":[]},{"text":"impl Unpin for Diffu128","synthetic":true,"types":[]},{"text":"impl Unpin for DiffuSize","synthetic":true,"types":[]},{"text":"impl Unpin for DiffF32","synthetic":true,"types":[]},{"text":"impl Unpin for DiffF64","synthetic":true,"types":[]},{"text":"impl Unpin for Diffbool","synthetic":true,"types":[]},{"text":"impl Unpin for Diffchar","synthetic":true,"types":[]},{"text":"impl Unpin for Diffunit","synthetic":true,"types":[]},{"text":"impl Unpin for DiffValue","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for InnerVec&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Diff&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["identity_iota"] = [{"text":"impl Unpin for AuthChain","synthetic":true,"types":[]},{"text":"impl Unpin for DiffChain","synthetic":true,"types":[]},{"text":"impl Unpin for DocumentChain","synthetic":true,"types":[]},{"text":"impl Unpin for Client","synthetic":true,"types":[]},{"text":"impl Unpin for ClientBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for TxnPrinter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Network","synthetic":true,"types":[]},{"text":"impl Unpin for EXPLORER_MAIN","synthetic":true,"types":[]},{"text":"impl Unpin for EXPLORER_DEV","synthetic":true,"types":[]},{"text":"impl Unpin for EXPLORER_COM","synthetic":true,"types":[]},{"text":"impl Unpin for NODE_MAIN","synthetic":true,"types":[]},{"text":"impl Unpin for NODE_DEV","synthetic":true,"types":[]},{"text":"impl Unpin for NODE_COM","synthetic":true,"types":[]},{"text":"impl Unpin for __Full","synthetic":true,"types":[]},{"text":"impl Unpin for __Mini","synthetic":true,"types":[]},{"text":"impl Unpin for __Hash","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CredentialValidation&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CredentialValidator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DocumentValidation","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for PresentationValidation&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IotaDID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Segments&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IotaDocument","synthetic":true,"types":[]},{"text":"impl Unpin for IotaDocumentBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for DocumentDiff","synthetic":true,"types":[]},{"text":"impl Unpin for Properties","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Message","synthetic":true,"types":[]},{"text":"impl Unpin for MessageId","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MessageIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()